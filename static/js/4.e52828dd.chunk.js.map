{"version":3,"sources":["components/styled/text.tsx","../../src/components/DocumentCard/DocumentCardTitle.styles.ts","../../src/components/DocumentCard/DocumentCardPreview.styles.ts","../../src/components/DocumentCard/DocumentCardActivity.styles.ts","apollo/projects/index.tsx","../../src/components/DocumentCard/DocumentCard.types.ts","../../src/components/DocumentCard/DocumentCard.base.tsx","../../src/components/DocumentCard/DocumentCardLocation.styles.ts","../../src/components/DocumentCard/DocumentCard.styles.ts","../../src/components/DocumentCard/DocumentCard.ts","../../src/components/DocumentCard/DocumentCardTitle.base.tsx","../../src/components/DocumentCard/DocumentCardTitle.ts","../../src/components/DocumentCard/DocumentCardActivity.base.tsx","../../src/components/DocumentCard/DocumentCardActivity.ts","components/cards/staredprojects.tsx","pages/filemenu/home.tsx"],"names":["Title","props","variant","block","styles","root","marginBottom","children","Subtitle","DocumentCardTitleGlobalClassNames","getStyles","theme","className","showAsSecondaryTitle","palette","fonts","medium","large","padding","display","overflow","wordWrap","height","lineHeight","color","neutralSecondary","neutralPrimary","DocumentCardPreviewGlobalClassNames","icon","iconContainer","isFileList","classNames","small","backgroundColor","white","neutralLighterAlt","borderBottom","neutralLight","position","previewIcon","alignItems","justifyContent","left","bottom","fileList","listStyleType","margin","selectors","li","fileListIcon","marginRight","fileListLink","highContrastStyle","border","outline","boxSizing","neutralDark","textDecoration","textOverflow","whiteSpace","width","themePrimary","fileListOverflowText","IMAGE_SIZE","DocumentCardActivityGlobalClassNames","multiplePeople","details","name","activity","avatars","avatar","VERTICAL_PADDING","marginLeft","verticalAlign","textAlign","content","top","right","borderRadius","HORIZONTAL_PADDING","fontSize","fontWeight","semibold","GET_PROJECTS","gql","DocumentCardType","getClassNames","classNamesFunction","_rootElement","_onClick","ev","_onAction","_onKeyDown","which","KeyCodes","enter","space","onClick","onClickHref","onClickTarget","window","open","location","href","preventDefault","stopPropagation","initializeComponentRef","warnDeprecations","accentColor","undefined","render","style","this","type","nativeProps","actionable","_classNames","compact","borderBottomColor","role","tabIndex","ref","onKeyDown","focus","current","defaultProps","normal","DocumentCardLocationGlobalClassNames","GlobalClassNames","rootActionable","rootCompact","DocumentCard","styled","effects","WebkitFontSmoothing","maxWidth","minWidth","userSelect","roundedCorner2","paddingTop","cursor","borderColor","neutralTertiaryAlt","pointerEvents","borderRight","maxHeight","paddingBottom","mediumPlus","scope","_titleElement","_truncateTitle","_needMeasurement","_async","requestAnimationFrame","_truncateWhenInAnimation","originalTitle","title","element","getComputedStyle","clientWidth","scrollWidth","_clientWidth","lines","Math","floor","parseInt","overFlowRate","truncatedLength","length","setState","truncatedTitleFirstPiece","slice","truncatedTitleSecondPiece","_shrinkTitle","state","titleElement","scrollHeight","clientHeight","Async","_events","EventGroup","componentDidUpdate","prevProps","shouldTruncate","on","_updateTruncation","off","componentDidMount","componentWillUnmount","dispose","_timerId","setTimeout","DocumentCardTitle","people","_renderAvatars","_getNameString","_renderAvatar","person","PersonaCoin","imageInitials","initials","text","imageUrl","profileImageSrc","initialsColor","allowPhoneInitials","size","size32","nameString","DocumentCardActivity","StaredProjects","project","methodology","owner","createdAt","t","useTranslation","keyPrefix","date","Date","toLocaleDateString","cardTitleStyles","FontSizes","HomePage","t_basics","separatorStyles","background","useTheme","useQuery","data","loading","error","projects","map","MapProjectToCard","Fragment","Stack","tokens","childrenGap","Item","horizontal","key","Separator","shortName"],"mappings":"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","file":"static/js/4.e52828dd.chunk.js","sourcesContent":["import { ITextStyles, Text } from \"@fluentui/react\";\n\nexport const Title: React.FunctionComponent = (props) => {\n  const styles: ITextStyles = {\n    root: {\n      marginBottom: 20,\n    },\n  };\n\n  return (\n    <Text variant=\"xLarge\" block styles={styles}>\n      {props.children}\n    </Text>\n  );\n};\n\nexport const Subtitle: React.FunctionComponent = (props) => {\n  return (\n    <Text variant=\"medium\" block>\n      {props.children}\n    </Text>\n  );\n};\n","import { getGlobalClassNames } from '../../Styling';\nimport { IDocumentCardTitleStyleProps, IDocumentCardTitleStyles } from './DocumentCardTitle.types';\n\nexport const DocumentCardTitleGlobalClassNames = {\n  root: 'ms-DocumentCardTitle',\n};\n\nexport const getStyles = (props: IDocumentCardTitleStyleProps): IDocumentCardTitleStyles => {\n  const { theme, className, showAsSecondaryTitle } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardTitleGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      showAsSecondaryTitle ? fonts.medium : fonts.large,\n      {\n        padding: '8px 16px',\n        display: 'block',\n        overflow: 'hidden',\n        wordWrap: 'break-word',\n        height: showAsSecondaryTitle ? '45px' : '38px',\n        lineHeight: showAsSecondaryTitle ? '18px' : '21px',\n        color: showAsSecondaryTitle ? palette.neutralSecondary : palette.neutralPrimary,\n      },\n      className,\n    ],\n  };\n};\n","import { getFocusStyle, getGlobalClassNames, HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { IDocumentCardPreviewStyleProps, IDocumentCardPreviewStyles } from './DocumentCardPreview.types';\n\nexport const DocumentCardPreviewGlobalClassNames = {\n  root: 'ms-DocumentCardPreview',\n  icon: 'ms-DocumentCardPreview-icon',\n  iconContainer: 'ms-DocumentCardPreview-iconContainer',\n};\n\nexport const getStyles = (props: IDocumentCardPreviewStyleProps): IDocumentCardPreviewStyles => {\n  const { theme, className, isFileList } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardPreviewGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.small,\n      {\n        backgroundColor: isFileList ? palette.white : palette.neutralLighterAlt,\n        borderBottom: `1px solid ${palette.neutralLight}`,\n        overflow: `hidden`,\n        position: 'relative',\n      },\n      className,\n    ],\n    previewIcon: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n      },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        left: '10px',\n        bottom: '10px',\n        position: 'absolute',\n      },\n    ],\n    fileList: {\n      padding: '16px 16px 0 16px',\n      listStyleType: 'none',\n      margin: 0,\n      selectors: {\n        li: {\n          height: '16px',\n          lineHeight: '16px',\n          marginBottom: '8px',\n          overflow: 'hidden',\n        },\n      },\n    },\n    fileListIcon: {\n      display: 'inline-block',\n      marginRight: '8px',\n    },\n    fileListLink: [\n      getFocusStyle(theme, {\n        highContrastStyle: {\n          border: '1px solid WindowText',\n          outline: 'none',\n        },\n      }),\n      {\n        boxSizing: 'border-box',\n        color: palette.neutralDark,\n        overflow: 'hidden',\n        display: 'inline-block',\n        textDecoration: 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        width: 'calc(100% - 24px)',\n        selectors: {\n          ':hover': {\n            color: palette.themePrimary,\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            selectors: {\n              [HighContrastSelector]: {\n                outline: 'none',\n              },\n            },\n          },\n        },\n      },\n    ],\n    fileListOverflowText: {\n      padding: '0px 16px 8px 16px',\n      display: 'block',\n    },\n  };\n};\n","import { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { IDocumentCardActivityStyleProps, IDocumentCardActivityStyles } from './DocumentCardActivity.types';\n\nconst VERTICAL_PADDING = 8;\nconst HORIZONTAL_PADDING = 16;\nconst IMAGE_SIZE = 32;\nconst PERSONA_TEXT_GUTTER = 8;\n\nexport const DocumentCardActivityGlobalClassNames = {\n  root: 'ms-DocumentCardActivity',\n  multiplePeople: 'ms-DocumentCardActivity--multiplePeople',\n  details: 'ms-DocumentCardActivity-details',\n  name: 'ms-DocumentCardActivity-name',\n  activity: 'ms-DocumentCardActivity-activity',\n  avatars: 'ms-DocumentCardActivity-avatars',\n  avatar: 'ms-DocumentCardActivity-avatar',\n};\n\nexport const getStyles = (props: IDocumentCardActivityStyleProps): IDocumentCardActivityStyles => {\n  const { theme, className, multiplePeople } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardActivityGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      multiplePeople && classNames.multiplePeople,\n      {\n        padding: `${VERTICAL_PADDING}px ${HORIZONTAL_PADDING}px`,\n        position: 'relative',\n      },\n      className,\n    ],\n    avatars: [\n      classNames.avatars,\n      {\n        marginLeft: '-2px', // Avatars sit outside of the usual padding for visual balance\n        height: '32px',\n      },\n    ],\n    avatar: [\n      classNames.avatar,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        position: 'relative',\n        textAlign: 'center',\n        width: IMAGE_SIZE,\n        height: IMAGE_SIZE,\n\n        selectors: {\n          '&:after': {\n            content: '\" \"',\n            position: 'absolute',\n            left: '-1px',\n            top: '-1px',\n            right: '-1px',\n            bottom: '-1px',\n            border: `2px solid ${palette.white}`, // Match the background of the card\n            borderRadius: '50%',\n          },\n          ':nth-of-type(2)': multiplePeople && {\n            marginLeft: '-16px',\n          },\n        },\n      },\n    ],\n    details: [\n      classNames.details,\n      {\n        left: multiplePeople\n          ? `${HORIZONTAL_PADDING + IMAGE_SIZE * 1.5 + PERSONA_TEXT_GUTTER}px`\n          : `${HORIZONTAL_PADDING + IMAGE_SIZE + PERSONA_TEXT_GUTTER}px`,\n        height: IMAGE_SIZE,\n        position: 'absolute',\n        top: VERTICAL_PADDING,\n        width: `calc(100% - ${HORIZONTAL_PADDING + IMAGE_SIZE + PERSONA_TEXT_GUTTER + HORIZONTAL_PADDING}px)`,\n      },\n    ],\n    name: [\n      classNames.name,\n      {\n        display: 'block',\n        fontSize: fonts.small.fontSize,\n        lineHeight: '15px',\n        height: '15px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: palette.neutralPrimary,\n        fontWeight: FontWeights.semibold,\n      },\n    ],\n    activity: [\n      classNames.activity,\n      {\n        display: 'block',\n        fontSize: fonts.small.fontSize,\n        lineHeight: '15px',\n        height: '15px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: palette.neutralSecondary,\n      },\n    ],\n  };\n};\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_PROJECTS = gql`\r\n  query GetProjects {\r\n    projects {\r\n      id\r\n      shortName\r\n      largeName\r\n      description\r\n      languageId\r\n      programId\r\n      projectStatusId\r\n      public\r\n      sectorId\r\n      currencyCode\r\n      durationPlan\r\n      methodology {\r\n        id\r\n        name\r\n      }\r\n      intermediateOutcomes {\r\n        id\r\n      }\r\n      projectPermissions {\r\n        id\r\n        userId\r\n      }\r\n      solicitedBudget\r\n      ultimateOutcome {\r\n        id\r\n        description\r\n        what\r\n        where\r\n      }\r\n      wikimlCode\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import * as React from 'react';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IBaseProps, IRefObject, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCard {\n  /**\n   * Sets focus to the DocumentCard.\n   */\n  focus: () => void;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardProps extends IBaseProps<IDocumentCard>, React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the IDocumentCard interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IDocumentCard>;\n\n  /**\n   * The type of DocumentCard to display.\n   * @defaultvalue DocumentCardType.normal\n   */\n  type?: DocumentCardType;\n\n  /**\n   * Function to call when the card is clicked or keyboard Enter/Space is pushed.\n   */\n  onClick?: (ev?: React.SyntheticEvent<HTMLElement>) => void;\n\n  /**\n   * A URL to navigate to when the card is clicked. If a function has also been provided,\n   * it will be used instead of the URL.\n   */\n  onClickHref?: string;\n\n  /**\n   * A target browser context for opening the link. If not specified, will open in the same tab/window.\n   */\n  onClickTarget?: string;\n\n  /**\n   * Aria role assigned to the documentCard (Eg. button, link).\n   * Use this to override the default assignment.\n   * @defaultvalue When `onClick` is provided, default role will be 'button'.\n   * When `onClickHref` is provided, default role will be 'link'.\n   */\n  role?: string;\n\n  /**\n   * Hex color value of the line below the card, which should correspond to the document type.\n   * This should only be supplied when using the 'compact' card layout.\n   *\n   * @deprecated To be removed at \\>= v5.0.0.\n   */\n  accentColor?: string;\n\n  /**\n   * Child components to render within the card.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IDocumentCardStyleProps, IDocumentCardStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Optional override class name\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport enum DocumentCardType {\n  /**\n   * Standard DocumentCard.\n   */\n  normal = 0,\n  /**\n   * Compact layout. Displays the preview beside the details, rather than above.\n   */\n  compact = 1,\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Optional override class name\n   */\n  className?: string;\n\n  /**\n   * True when the card has a click action.\n   */\n  actionable?: boolean;\n\n  /**\n   * Compact variant of the card.\n   */\n  compact?: boolean;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardStyles {\n  root: IStyle;\n}\n","import * as React from 'react';\nimport { IProcessedStyleSet } from '../../Styling';\nimport {\n  classNamesFunction,\n  KeyCodes,\n  getNativeProps,\n  divProperties,\n  warnDeprecations,\n  initializeComponentRef,\n} from '../../Utilities';\nimport {\n  DocumentCardType,\n  IDocumentCard,\n  IDocumentCardProps,\n  IDocumentCardStyleProps,\n  IDocumentCardStyles,\n} from './DocumentCard.types';\n\nconst getClassNames = classNamesFunction<IDocumentCardStyleProps, IDocumentCardStyles>();\n\nconst COMPONENT_NAME = 'DocumentCard';\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardBase extends React.Component<IDocumentCardProps, any> implements IDocumentCard {\n  public static defaultProps: IDocumentCardProps = {\n    type: DocumentCardType.normal,\n  };\n\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IDocumentCardStyles>;\n\n  constructor(props: IDocumentCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      accentColor: undefined,\n    });\n  }\n\n  public render(): JSX.Element {\n    // eslint-disable-next-line deprecation/deprecation\n    const { onClick, onClickHref, children, type, accentColor, styles, theme, className } = this.props;\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, [\n      'className',\n      'onClick',\n      'type',\n      'role',\n    ]);\n    const actionable = onClick || onClickHref ? true : false;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      actionable,\n      compact: type === DocumentCardType.compact ? true : false,\n    });\n\n    // Override the border color if an accent color was provided (compact card only)\n    let style;\n    if (type === DocumentCardType.compact && accentColor) {\n      style = {\n        borderBottomColor: accentColor,\n      };\n    }\n\n    // if this element is actionable it should have an aria role\n    const role = this.props.role || (actionable ? (onClick ? 'button' : 'link') : undefined);\n    const tabIndex = actionable ? 0 : undefined;\n\n    return (\n      <div\n        ref={this._rootElement}\n        tabIndex={tabIndex}\n        data-is-focusable={actionable}\n        role={role}\n        className={this._classNames.root}\n        onKeyDown={actionable ? this._onKeyDown : undefined}\n        onClick={actionable ? this._onClick : undefined}\n        style={style}\n        {...nativeProps}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  public focus(): void {\n    if (this._rootElement.current) {\n      this._rootElement.current.focus();\n    }\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    this._onAction(ev);\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      this._onAction(ev);\n    }\n  };\n\n  private _onAction = (ev: React.SyntheticEvent<HTMLElement>): void => {\n    const { onClick, onClickHref, onClickTarget } = this.props;\n\n    if (onClick) {\n      onClick(ev);\n    } else if (!onClick && onClickHref) {\n      // If no onClick Function was provided and we do have an onClickHref, redirect to the onClickHref\n      if (onClickTarget) {\n        window.open(onClickHref, onClickTarget, 'noreferrer noopener nofollow');\n      } else {\n        window.location.href = onClickHref;\n      }\n\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n","import { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { IDocumentCardLocationStyleProps, IDocumentCardLocationStyles } from './DocumentCardLocation.types';\n\nexport const DocumentCardLocationGlobalClassNames = {\n  root: 'ms-DocumentCardLocation',\n};\n\nexport const getStyles = (props: IDocumentCardLocationStyleProps): IDocumentCardLocationStyles => {\n  const { theme, className } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardLocationGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.small,\n      {\n        color: palette.themePrimary,\n        display: 'block',\n        fontWeight: FontWeights.semibold,\n        overflow: 'hidden',\n        padding: '8px 16px',\n        position: 'relative',\n        textDecoration: 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n\n        selectors: {\n          ':hover': {\n            color: palette.themePrimary,\n            cursor: 'pointer',\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n","import { getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { IDocumentCardStyleProps, IDocumentCardStyles } from './DocumentCard.types';\nimport { DocumentCardPreviewGlobalClassNames as previewClassNames } from './DocumentCardPreview.styles';\nimport { DocumentCardActivityGlobalClassNames as activityClassNames } from './DocumentCardActivity.styles';\nimport { DocumentCardTitleGlobalClassNames as titleClassNames } from './DocumentCardTitle.styles';\nimport { DocumentCardLocationGlobalClassNames as locationClassNames } from './DocumentCardLocation.styles';\n\nconst GlobalClassNames = {\n  root: 'ms-DocumentCard',\n  rootActionable: 'ms-DocumentCard--actionable',\n  rootCompact: 'ms-DocumentCard--compact',\n};\n\nexport const getStyles = (props: IDocumentCardStyleProps): IDocumentCardStyles => {\n  const { className, theme, actionable, compact } = props;\n  const { palette, fonts, effects } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        WebkitFontSmoothing: 'antialiased',\n        backgroundColor: palette.white,\n        border: `1px solid ${palette.neutralLight}`,\n        maxWidth: '320px',\n        minWidth: '206px',\n        userSelect: 'none',\n        position: 'relative',\n        selectors: {\n          ':focus': {\n            outline: '0px solid',\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: getInputFocusStyle(palette.neutralSecondary, effects.roundedCorner2),\n          [`.${locationClassNames.root} + .${titleClassNames.root}`]: {\n            paddingTop: '4px',\n          },\n        },\n      },\n      actionable && [\n        classNames.rootActionable,\n        {\n          selectors: {\n            ':hover': {\n              cursor: 'pointer',\n              borderColor: palette.neutralTertiaryAlt,\n            },\n            ':hover:after': {\n              content: '\" \"',\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0,\n              border: `1px solid ${palette.neutralTertiaryAlt}`,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      ],\n      compact && [\n        classNames.rootCompact,\n        {\n          display: 'flex',\n          maxWidth: '480px',\n          height: '108px',\n          selectors: {\n            [`.${previewClassNames.root}`]: {\n              borderRight: `1px solid ${palette.neutralLight}`,\n              borderBottom: 0, // Remove the usual border from the preview\n              maxHeight: '106px',\n              maxWidth: '144px',\n            },\n            [`.${previewClassNames.icon}`]: {\n              maxHeight: '32px',\n              maxWidth: '32px',\n            },\n            [`.${activityClassNames.root}`]: {\n              paddingBottom: '12px',\n            },\n            [`.${titleClassNames.root}`]: {\n              paddingBottom: '12px 16px 8px 16px',\n              fontSize: fonts.mediumPlus.fontSize,\n              lineHeight: '16px',\n            },\n          },\n        },\n      ],\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardBase } from './DocumentCard.base';\nimport { getStyles } from './DocumentCard.styles';\nimport { IDocumentCardProps, IDocumentCardStyleProps, IDocumentCardStyles } from './DocumentCard.types';\n\nexport const DocumentCard: React.FunctionComponent<IDocumentCardProps> = styled<\n  IDocumentCardProps,\n  IDocumentCardStyleProps,\n  IDocumentCardStyles\n>(DocumentCardBase, getStyles, undefined, { scope: 'DocumentCard' });\n","import * as React from 'react';\n\nimport { Async, EventGroup, classNamesFunction } from '../../Utilities';\nimport {\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles,\n} from './DocumentCardTitle.types';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { initializeComponentRef } from '@fluentui/utilities';\n\nconst getClassNames = classNamesFunction<IDocumentCardTitleStyleProps, IDocumentCardTitleStyles>();\n\nexport interface IDocumentCardTitleState {\n  truncatedTitleFirstPiece?: string;\n  truncatedTitleSecondPiece?: string;\n}\n\nconst TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD = 5;\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardTitleBase extends React.Component<IDocumentCardTitleProps, IDocumentCardTitleState> {\n  private _titleElement = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IDocumentCardTitleStyles>;\n  private _async: Async;\n  private _events: EventGroup;\n  private _clientWidth: number | undefined;\n  private _timerId: number | undefined;\n\n  constructor(props: IDocumentCardTitleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    this._clientWidth = undefined;\n\n    this.state = {\n      truncatedTitleFirstPiece: undefined,\n      truncatedTitleSecondPiece: undefined,\n    };\n  }\n\n  public componentDidUpdate(prevProps: IDocumentCardTitleProps): void {\n    if (this.props.title !== prevProps.title) {\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }\n\n    if (prevProps.shouldTruncate !== this.props.shouldTruncate) {\n      if (this.props.shouldTruncate) {\n        this._truncateTitle();\n        this._async.requestAnimationFrame(this._shrinkTitle);\n        this._events.on(window, 'resize', this._updateTruncation);\n      } else {\n        this._events.off(window, 'resize', this._updateTruncation);\n      }\n    } else if (this._needMeasurement) {\n      this._async.requestAnimationFrame(() => {\n        this._truncateWhenInAnimation();\n        this._shrinkTitle();\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    if (this.props.shouldTruncate) {\n      this._truncateTitle();\n      this._events.on(window, 'resize', this._updateTruncation);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._events.dispose();\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { title, shouldTruncate, showAsSecondaryTitle, styles, theme, className } = this.props;\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      showAsSecondaryTitle,\n    });\n\n    if (shouldTruncate && truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      return (\n        <div className={this._classNames.root} ref={this._titleElement} title={title}>\n          {truncatedTitleFirstPiece}\n          &hellip;\n          {truncatedTitleSecondPiece}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={this._classNames.root}\n          ref={this._titleElement}\n          title={title}\n          style={this._needMeasurement ? { whiteSpace: 'nowrap' } : undefined}\n        >\n          {title}\n        </div>\n      );\n    }\n  }\n\n  /**\n   * In measuring, it will render a same style text with whiteSpace: 'nowrap', to get overflow rate.\n   * So that the logic can predict truncated text well.\n   */\n  private get _needMeasurement(): boolean {\n    return !!this.props.shouldTruncate && this._clientWidth === undefined;\n  }\n\n  // Truncate logic here way can't handle the case that chars with different widths are mixed very well.\n  // Let _shrinkTitle take care of that.\n  private _truncateTitle = (): void => {\n    if (!this._needMeasurement) {\n      return;\n    }\n\n    this._async.requestAnimationFrame(this._truncateWhenInAnimation);\n  };\n\n  private _truncateWhenInAnimation: () => void = () => {\n    const originalTitle = this.props.title;\n    const element: HTMLDivElement | null = this._titleElement.current;\n\n    if (element) {\n      const style: CSSStyleDeclaration = getComputedStyle(element);\n      if (style.width && style.lineHeight && style.height) {\n        const { clientWidth, scrollWidth } = element;\n\n        this._clientWidth = clientWidth;\n\n        const lines: number = Math.floor(\n          (parseInt(style.height, 10) + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD) / parseInt(style.lineHeight, 10),\n        );\n\n        element.style.whiteSpace = '';\n\n        // Use overflow to predict truncated length.\n        // Take an example.The text is: A text with A very long text that need to be truncated.ppt\n        // if container is like\n        // |A text with A very| long text that need to be truncated.ppt\n        // The scroll width is 58, (take two | out of length)\n        // The client width is 18\n        // the overflow rate is scrollWidth/clientWidth which should be close to length(overflowText)/length(visualText)\n        // And the length of remaining text should be truncated is (original Length)/(58/18) -3 = 15.\n        // So that the logic can predict truncated text well.\n        // first piece will be `A text `, * second piece will be `ated.ppt`\n        // |A text ...ated.ppt|\n        const overFlowRate: number = scrollWidth / (parseInt(style.width, 10) * lines);\n\n        if (overFlowRate > 1) {\n          const truncatedLength: number = originalTitle.length / overFlowRate - 3; /** Saved for separator */\n          return this.setState({\n            truncatedTitleFirstPiece: originalTitle.slice(0, truncatedLength / 2),\n            truncatedTitleSecondPiece: originalTitle.slice(originalTitle.length - truncatedLength / 2),\n          });\n        }\n      }\n    }\n  };\n\n  private _shrinkTitle: () => void = () => {\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n    if (truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      const titleElement = this._titleElement.current;\n\n      if (!titleElement) {\n        return;\n      }\n\n      if (\n        titleElement.scrollHeight > titleElement.clientHeight + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD ||\n        titleElement.scrollWidth > titleElement.clientWidth\n      ) {\n        this.setState({\n          truncatedTitleFirstPiece: truncatedTitleFirstPiece.slice(0, truncatedTitleFirstPiece.length - 1),\n          truncatedTitleSecondPiece: truncatedTitleSecondPiece.slice(1),\n        });\n      }\n    }\n  };\n\n  private _updateTruncation(): void {\n    if (this._timerId) {\n      return;\n    }\n\n    this._timerId = this._async.setTimeout(() => {\n      delete this._timerId;\n      this._clientWidth = undefined;\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }, 250);\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardTitleBase } from './DocumentCardTitle.base';\nimport { getStyles } from './DocumentCardTitle.styles';\nimport {\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles,\n} from './DocumentCardTitle.types';\n\nexport const DocumentCardTitle: React.FunctionComponent<IDocumentCardTitleProps> = styled<\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles\n>(DocumentCardTitleBase, getStyles, undefined, { scope: 'DocumentCardTitle' });\n","import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardActivityProps,\n  IDocumentCardActivityPerson,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles,\n} from './DocumentCardActivity.types';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\n\nconst getClassNames = classNamesFunction<IDocumentCardActivityStyleProps, IDocumentCardActivityStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActivityBase extends React.Component<IDocumentCardActivityProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActivityStyles>;\n\n  constructor(props: IDocumentCardActivityProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element | null {\n    const { activity, people, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      multiplePeople: people.length > 1,\n    });\n\n    if (!people || people.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={this._classNames.root}>\n        {this._renderAvatars(people)}\n        <div className={this._classNames.details}>\n          <span className={this._classNames.name}>{this._getNameString(people)}</span>\n          <span className={this._classNames.activity}>{activity}</span>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\n    return (\n      <div className={this._classNames.avatars}>\n        {people.length > 1 ? this._renderAvatar(people[1]) : null}\n        {this._renderAvatar(people[0])}\n      </div>\n    );\n  }\n\n  private _renderAvatar(person: IDocumentCardActivityPerson): JSX.Element {\n    return (\n      <div className={this._classNames.avatar}>\n        <PersonaCoin\n          imageInitials={person.initials}\n          text={person.name}\n          imageUrl={person.profileImageSrc}\n          initialsColor={person.initialsColor}\n          allowPhoneInitials={person.allowPhoneInitials}\n          role=\"presentation\"\n          size={PersonaSize.size32}\n        />\n      </div>\n    );\n  }\n\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\n    let nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardActivityBase } from './DocumentCardActivity.base';\nimport { getStyles } from './DocumentCardActivity.styles';\nimport {\n  IDocumentCardActivityProps,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles,\n} from './DocumentCardActivity.types';\n\nexport const DocumentCardActivity: React.FunctionComponent<IDocumentCardActivityProps> = styled<\n  IDocumentCardActivityProps,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles\n>(DocumentCardActivityBase, getStyles, undefined, { scope: 'DocumentCardActivity' });\n","import { useTranslation } from \"react-i18next\";\n\nimport {\n  DocumentCard,\n  DocumentCardActivity,\n  DocumentCardTitle,\n  FontSizes,\n  IDocumentCardStyles,\n  IDocumentCardTitleStyles,\n  useTheme,\n} from \"@fluentui/react\";\nimport { useBoolean } from \"@fluentui/react-hooks\";\n\nimport { IFeaturedProject } from \"pages/filemenu/home\";\n\ntype StaredProjectsProps = {\n  project: IFeaturedProject;\n};\n\nexport default function StaredProjects(props: StaredProjectsProps) {\n  const { name, methodology, owner, createdAt } = props.project;\n\n  // LOGIC\n  const { t } = useTranslation(\"filemenu\", { keyPrefix: \"home\" });\n\n  // const actions = GetCardActions();\n  const date = new Date(createdAt).toLocaleDateString();\n\n  // STYLES\n  const cardStyles: IDocumentCardStyles = {\n    root: {\n      display: \"inline-block\",\n      margin: \"20px 20px 20px 0\",\n      width: 10,\n    },\n  };\n\n  const cardTitleStyles: IDocumentCardTitleStyles = {\n    root: {\n      fontSize: FontSizes.mediumPlus,\n      height: 20,\n      paddingBottom: 2,\n    },\n  };\n\n  return (\n    <DocumentCard styles={cardStyles}>\n      <DocumentCardTitle title={name} styles={cardTitleStyles} />\n      <DocumentCardTitle title={methodology} showAsSecondaryTitle />\n\n      <DocumentCardActivity\n        activity={`${t(\"starprojects-createdAt\")} ${date}`}\n        people={[{ name: owner, profileImageSrc: \"\" }]}\n      />\n      {/* <DocumentCardActions actions={actions} /> */}\n    </DocumentCard>\n  );\n}\n\nconst GetCardActions = () => {\n  const [isFavorite, { toggle: toggleIsFavorite }] = useBoolean(true);\n  const { palette } = useTheme();\n\n  const handleOnClick = () => {\n    toggleIsFavorite();\n    // update in database\n  };\n\n  const starIconProps = {\n    iconName: \"FavoriteStarFill\",\n    styles: {\n      root: {\n        color: isFavorite ? palette.yellowDark : palette.accent,\n      },\n    },\n  };\n\n  const notificationsIconProps = {\n    iconName: \"FavoriteStarFill\",\n    styles: {\n      root: {\n        color: isFavorite ? palette.yellowDark : palette.accent,\n      },\n    },\n  };\n\n  const documentCardActions = [\n    {\n      iconProps: starIconProps,\n      onClick: handleOnClick,\n      ariaLabel: \"unstar\",\n    },\n    {\n      iconProps: { iconName: \"Ringer\" },\n      onClick: () => {},\n      ariaLabel: \"notifications action\",\n    },\n  ];\n\n  return documentCardActions;\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ISeparatorStyles, Separator, Stack, useTheme } from \"@fluentui/react\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { GetProjects, GetProjects_projects } from \"types\";\nimport { GET_PROJECTS } from \"apollo/projects\";\nimport QueryStateIndicator from \"apollo/indicator\";\n\nimport StaredProjects from \"components/cards/staredprojects\";\nimport { Subtitle, Title } from \"components/styled/text\";\n\nexport interface IFeaturedProject {\n  name: string;\n  methodology: string;\n  owner: string;\n  createdAt: string;\n}\n\nexport default function HomePage() {\n  // LOGIC\n  const { t } = useTranslation(\"filemenu\", { keyPrefix: \"home\" });\n  const { t: t_basics } = useTranslation(\"basics\", {\n    keyPrefix: \"methodologies\",\n  });\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const separatorStyles: Partial<ISeparatorStyles> = {\n    root: {\n      \"::before\": {\n        height: 0.4,\n        background: palette.neutralTertiaryAlt,\n      },\n    },\n  };\n\n  // DATA\n  const { data, loading, error } = useQuery<GetProjects>(GET_PROJECTS);\n\n  if (!data || loading || error)\n    return <QueryStateIndicator data={data} loading={loading} error={error} />;\n\n  // All projects\n  const projects: IFeaturedProject[] =\n    data?.projects.map((project) => MapProjectToCard(project, t_basics)) ||\n    ([] as IFeaturedProject[]); //add .filter(project => project.isFavorite)\n\n  return (\n    <React.Fragment>\n      <Title>{t(\"header\")}</Title>\n\n      <Stack tokens={{ childrenGap: 20 }}>\n        {/* Star Projects */}\n        <Stack.Item>\n          <Subtitle>{t(\"starprojects\")}</Subtitle>\n          <Stack horizontal>\n            {projects.map((project: IFeaturedProject, key: number) => (\n              <StaredProjects key={key} project={project} />\n            ))}\n          </Stack>\n          <Separator styles={separatorStyles} />\n        </Stack.Item>\n\n        {/* Visualize Teams */}\n        <Stack.Item>\n          <Subtitle>{t(\"teams\")}</Subtitle>\n          <Separator styles={separatorStyles} />\n        </Stack.Item>\n\n        {/* Notifications */}\n        <Stack.Item>\n          <Subtitle>{t(\"notifications\")}</Subtitle>\n          <Separator styles={separatorStyles} />\n        </Stack.Item>\n      </Stack>\n    </React.Fragment>\n  );\n}\n\nconst MapProjectToCard = (project: GetProjects_projects, t: Function) => {\n  const methodology = project.methodology.name || \"\";\n\n  return {\n    name: project.shortName,\n    methodology: t(methodology, methodology),\n    owner: \"owner\",\n    createdAt: project.createdAt,\n  } as IFeaturedProject;\n};\n"],"sourceRoot":""}