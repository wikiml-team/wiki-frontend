{"version":3,"sources":["../../src/components/DocumentCard/DocumentCardTitle.styles.ts","../../src/components/DocumentCard/DocumentCardPreview.styles.ts","../../src/components/DocumentCard/DocumentCardActivity.styles.ts","../../src/components/DocumentCard/DocumentCard.types.ts","../../src/components/DocumentCard/DocumentCard.base.tsx","../../src/components/DocumentCard/DocumentCardLocation.styles.ts","../../src/components/DocumentCard/DocumentCard.styles.ts","../../src/components/DocumentCard/DocumentCard.ts","../../src/components/DocumentCard/DocumentCardTitle.base.tsx","../../src/components/DocumentCard/DocumentCardTitle.ts","../../src/components/DocumentCard/DocumentCardImage.base.tsx","../../src/components/DocumentCard/DocumentCardImage.styles.ts","../../src/components/DocumentCard/DocumentCardImage.ts","../../src/components/DocumentCard/DocumentCardDetails.base.tsx","../../src/components/DocumentCard/DocumentCardDetails.styles.ts","../../src/components/DocumentCard/DocumentCardDetails.ts","../../src/components/DocumentCard/DocumentCardPreview.base.tsx","../../src/components/DocumentCard/DocumentCardPreview.ts"],"names":["DocumentCardTitleGlobalClassNames","root","getStyles","props","theme","className","showAsSecondaryTitle","palette","fonts","medium","large","padding","display","overflow","wordWrap","height","lineHeight","color","neutralSecondary","neutralPrimary","DocumentCardPreviewGlobalClassNames","icon","iconContainer","isFileList","classNames","small","backgroundColor","white","neutralLighterAlt","borderBottom","neutralLight","position","previewIcon","alignItems","justifyContent","left","bottom","fileList","listStyleType","margin","selectors","li","marginBottom","fileListIcon","marginRight","fileListLink","highContrastStyle","border","outline","boxSizing","neutralDark","textDecoration","textOverflow","whiteSpace","width","themePrimary","fileListOverflowText","IMAGE_SIZE","DocumentCardActivityGlobalClassNames","multiplePeople","details","name","activity","avatars","avatar","VERTICAL_PADDING","marginLeft","verticalAlign","textAlign","content","top","right","borderRadius","HORIZONTAL_PADDING","fontSize","fontWeight","semibold","DocumentCardType","getClassNames","classNamesFunction","_rootElement","_onClick","ev","_onAction","_onKeyDown","which","KeyCodes","enter","space","onClick","onClickHref","onClickTarget","window","open","location","href","preventDefault","stopPropagation","initializeComponentRef","warnDeprecations","accentColor","undefined","render","style","this","children","type","styles","nativeProps","actionable","_classNames","compact","borderBottomColor","role","tabIndex","ref","onKeyDown","focus","current","defaultProps","normal","DocumentCardLocationGlobalClassNames","GlobalClassNames","rootActionable","rootCompact","DocumentCard","styled","effects","WebkitFontSmoothing","maxWidth","minWidth","userSelect","roundedCorner2","paddingTop","cursor","borderColor","neutralTertiaryAlt","pointerEvents","borderRight","maxHeight","paddingBottom","mediumPlus","scope","_titleElement","_truncateTitle","_needMeasurement","_async","requestAnimationFrame","_truncateWhenInAnimation","originalTitle","title","element","getComputedStyle","clientWidth","scrollWidth","_clientWidth","lines","Math","floor","parseInt","overFlowRate","truncatedLength","length","setState","truncatedTitleFirstPiece","slice","truncatedTitleSecondPiece","_shrinkTitle","state","titleElement","scrollHeight","clientHeight","Async","_events","EventGroup","componentDidUpdate","prevProps","shouldTruncate","on","_updateTruncation","off","componentDidMount","componentWillUnmount","dispose","_timerId","setTimeout","DocumentCardTitle","_onImageLoad","imageHasLoaded","imageFit","imageSrc","Image","src","alt","onLoad","_renderCornerIcon","_renderCenterIcon","iconProps","centeredIconWrapper","Icon","centeredIcon","cornerIcon","centeredIconSize","cornerIconSize","DocumentCardImage","DocumentCardDetails","flexDirection","flex","_renderPreviewList","previewImages","getOverflowDocumentCountText","maxDisplayCount","overflowDocumentCount","overflowText","fileListItems","map","file","fileIndex","key","iconSrc","Link","linkProps","url","preview","_renderPreviewImage","previewImage","previewIconProps","previewIconContainerClass","css","image","previewImageSrc","DocumentCardPreview"],"mappings":"8FAAA,+EAGaA,EAAoC,CAC/CC,KAAM,wBAGKC,EAAY,SAACC,GAChB,IAAAC,EAA2CD,EAAtC,MAAEE,EAAoCF,EAA3B,UAAEG,EAAyBH,EAAL,qBACtCI,EAAmBH,EAAZ,QAAEI,EAAUJ,EAAL,MAItB,MAAO,CACLH,KAAM,CAHW,YAAoBD,EAAmCI,GAI3DH,KACXK,EAAuBE,EAAMC,OAASD,EAAME,MAC5C,CACEC,QAAS,WACTC,QAAS,QACTC,SAAU,SACVC,SAAU,aACVC,OAAQT,EAAuB,OAAS,OACxCU,WAAYV,EAAuB,OAAS,OAC5CW,MAAOX,EAAuBC,EAAQW,iBAAmBX,EAAQY,gBAEnEd,M,iCC1BN,wFAIae,EAAsC,CACjDnB,KAAM,yBACNoB,KAAM,8BACNC,cAAe,wCAGJpB,EAAY,SAACC,G,QAChBC,EAAiCD,EAA5B,MAAEE,EAA0BF,EAAjB,UAAEoB,EAAepB,EAAL,WAC5BI,EAAmBH,EAAZ,QAAEI,EAAUJ,EAAL,MAEhBoB,EAAa,YAAoBJ,EAAqChB,GAE5E,MAAO,CACLH,KAAM,CACJuB,EAAWvB,KACXO,EAAMiB,MACN,CACEC,gBAAiBH,EAAahB,EAAQoB,MAAQpB,EAAQqB,kBACtDC,aAAc,aAAatB,EAAQuB,aACnCjB,SAAU,SACVkB,SAAU,YAEZ1B,GAEF2B,YAAa,CACXR,EAAWF,cACX,CACEV,QAAS,OACTqB,WAAY,SACZC,eAAgB,SAChBnB,OAAQ,SAGZM,KAAM,CACJG,EAAWH,KACX,CACEc,KAAM,OACNC,OAAQ,OACRL,SAAU,aAGdM,SAAU,CACR1B,QAAS,mBACT2B,cAAe,OACfC,OAAQ,EACRC,UAAW,CACTC,GAAI,CACF1B,OAAQ,OACRC,WAAY,OACZ0B,aAAc,MACd7B,SAAU,YAIhB8B,aAAc,CACZ/B,QAAS,eACTgC,YAAa,OAEfC,aAAc,CACZ,YAAczC,EAAO,CACnB0C,kBAAmB,CACjBC,OAAQ,uBACRC,QAAS,UAGb,CACEC,UAAW,aACXhC,MAAOV,EAAQ2C,YACfrC,SAAU,SACVD,QAAS,eACTuC,eAAgB,OAChBC,aAAc,WACdC,WAAY,SACZC,MAAO,oBACPd,WAAS,GACP,SAAU,CACRvB,MAAOV,EAAQgD,eAEjB,EAAC,IAAI,IAAuB,YAAa,CACvCf,WAAS,KACP,EAAC,KAAuB,CACtBQ,QAAS,QAEZ,IAEJ,KAGLQ,qBAAsB,CACpB7C,QAAS,oBACTC,QAAS,Y,iCC9Ff,+EAKM6C,EAAa,GAGNC,EAAuC,CAClDzD,KAAM,0BACN0D,eAAgB,0CAChBC,QAAS,kCACTC,KAAM,+BACNC,SAAU,mCACVC,QAAS,kCACTC,OAAQ,kCAGG9D,EAAY,SAACC,GAChB,IAAAC,EAAqCD,EAAhC,MAAEE,EAA8BF,EAArB,UAAEwD,EAAmBxD,EAAL,eAChCI,EAAmBH,EAAZ,QAAEI,EAAUJ,EAAL,MAEhBoB,EAAa,YAAoBkC,EAAsCtD,GAE7E,MAAO,CACLH,KAAM,CACJuB,EAAWvB,KACX0D,GAAkBnC,EAAWmC,eAC7B,CACEhD,QAAYsD,WACZlC,SAAU,YAEZ1B,GAEF0D,QAAS,CACPvC,EAAWuC,QACX,CACEG,WAAY,OACZnD,OAAQ,SAGZiD,OAAQ,CACNxC,EAAWwC,OACX,CACEpD,QAAS,eACTuD,cAAe,MACfpC,SAAU,WACVqC,UAAW,SACXd,MAAOG,EACP1C,OAAQ0C,EAERjB,UAAW,CACT,UAAW,CACT6B,QAAS,MACTtC,SAAU,WACVI,KAAM,OACNmC,IAAK,OACLC,MAAO,OACPnC,OAAQ,OACRW,OAAQ,aAAaxC,EAAQoB,MAC7B6C,aAAc,OAEhB,kBAAmBb,GAAkB,CACnCO,WAAY,YAKpBN,QAAS,CACPpC,EAAWoC,QACX,CACEzB,KAAMwB,EACCc,OACAA,OACP1D,OAAQ0C,EACR1B,SAAU,WACVuC,IAzEiB,EA0EjBhB,MAAO,sBAGXO,KAAM,CACJrC,EAAWqC,KACX,CACEjD,QAAS,QACT8D,SAAUlE,EAAMiB,MAAMiD,SACtB1D,WAAY,OACZD,OAAQ,OACRF,SAAU,SACVuC,aAAc,WACdC,WAAY,SACZpC,MAAOV,EAAQY,eACfwD,WAAY,IAAYC,WAG5Bd,SAAU,CACRtC,EAAWsC,SACX,CACElD,QAAS,QACT8D,SAAUlE,EAAMiB,MAAMiD,SACtB1D,WAAY,OACZD,OAAQ,OACRF,SAAU,SACVuC,aAAc,WACdC,WAAY,SACZpC,MAAOV,EAAQW,sB,uEClBX2D,E,oEAAZ,SAAYA,GAIV,uBAIA,yBARF,CAAYA,MAAgB,KCpE5B,IAAMC,EAAgB,OAAAC,EAAA,KAOtB,cAQE,WAAY5E,GAAZ,MACE,YAAMA,IAAM,K,OAJN,EAAA6E,aAAe,cAiEf,EAAAC,SAAW,SAACC,GAClB,EAAKC,UAAUD,IAGT,EAAAE,WAAa,SAACF,GAEhBA,EAAGG,QAAUC,EAAA,EAASC,OAASL,EAAGG,QAAUC,EAAA,EAASE,OACvD,EAAKL,UAAUD,IAIX,EAAAC,UAAY,SAACD,GACb,MAA0C,EAAK/E,MAA7CsF,EAAO,UAAEC,EAAW,cAAEC,EAAa,gBAEvCF,EACFA,EAAQP,IACEO,GAAWC,IAEjBC,EACFC,OAAOC,KAAKH,EAAaC,EAAe,gCAExCC,OAAOE,SAASC,KAAOL,EAGzBR,EAAGc,iBACHd,EAAGe,oBApFL,OAAAC,EAAA,GAAuB,GACvB,OAAAC,EAAA,GAjBmB,eAiBchG,EAAO,CACtCiG,iBAAaC,I,EAqFnB,OAlGsC,iBAiB7B,YAAAC,OAAP,WAEQ,IAiBFC,EAjBE,EAAkFC,KAAKrG,MAArFsF,EAAO,UAAEC,EAAW,cAAEe,EAAQ,WAAEC,EAAI,OAAEN,EAAW,cAAEO,EAAM,SAAEvG,EAAK,QAAEC,EAAS,YAC7EuG,EAAc,YAAqDJ,KAAKrG,MAAO,IAAe,CAClG,YACA,UACA,OACA,SAEI0G,KAAapB,IAAWC,GAE9Bc,KAAKM,YAAchC,EAAc6B,EAAS,CACxCvG,MAAOA,EACPC,UAAS,EACTwG,WAAU,EACVE,QAASL,IAAS7B,EAAiBkC,UAKjCL,IAAS7B,EAAiBkC,SAAWX,IACvCG,EAAQ,CACNS,kBAAmBZ,IAKvB,IAAMa,EAAOT,KAAKrG,MAAM8G,OAASJ,EAAcpB,EAAU,SAAW,YAAUY,GACxEa,EAAWL,EAAa,OAAIR,EAElC,OACE,mCACEc,IAAKX,KAAKxB,aACVkC,SAAUA,EAAQ,oBACCL,EACnBI,KAAMA,EACN5G,UAAWmG,KAAKM,YAAY7G,KAC5BmH,UAAWP,EAAaL,KAAKpB,gBAAaiB,EAC1CZ,QAASoB,EAAaL,KAAKvB,cAAWoB,EACtCE,MAAOA,GACHK,GAEHH,IAKA,YAAAY,MAAP,WACMb,KAAKxB,aAAasC,SACpBd,KAAKxB,aAAasC,QAAQD,SAjEhB,EAAAE,aAAmC,CAC/Cb,KAAM7B,EAAiB2C,QAgG3B,EAlGA,CAAsC,a,2CCtBzBC,EAAuC,CAClDxH,KAAM,2BCIFyH,EAAmB,CACvBzH,KAAM,kBACN0H,eAAgB,8BAChBC,YAAa,4BCLFC,EAA4D,OAAAC,EAAA,GAIvE,GDIuB,SAAC3H,G,QAChBE,EAA0CF,EAAjC,UAAEC,EAA+BD,EAA1B,MAAE0G,EAAwB1G,EAAd,WAAE4G,EAAY5G,EAAL,QACrCI,EAA4BH,EAArB,QAAEI,EAAmBJ,EAAd,MAAE2H,EAAY3H,EAAL,QAEzBoB,EAAa,YAAoBkG,EAAkBtH,GAEzD,MAAO,CACLH,KAAM,CACJuB,EAAWvB,KACX,CACE+H,oBAAqB,cACrBtG,gBAAiBnB,EAAQoB,MACzBoB,OAAQ,aAAaxC,EAAQuB,aAC7BmG,SAAU,QACVC,SAAU,QACVC,WAAY,OACZpG,SAAU,WACVS,WAAS,GACP,SAAU,CACRQ,QAAS,cAEX,EAAC,IAAI,IAAuB,YAAa,YAAmBzC,EAAQW,iBAAkB6G,EAAQK,gBAC9F,EAAC,IAAI,EAAmBnI,KAAI,OAAO,IAAgBA,MAAS,CAC1DoI,WAAY,OAEf,IAEHxB,GAAc,CACZrF,EAAWmG,eACX,CACEnF,UAAW,CACT,SAAU,CACR8F,OAAQ,UACRC,YAAahI,EAAQiI,oBAEvB,eAAgB,CACdnE,QAAS,MACTtC,SAAU,WACVuC,IAAK,EACLC,MAAO,EACPnC,OAAQ,EACRD,KAAM,EACNY,OAAQ,aAAaxC,EAAQiI,mBAC7BC,cAAe,WAKvB1B,GAAW,CACTvF,EAAWoG,YACX,CACEhH,QAAS,OACTqH,SAAU,QACVlH,OAAQ,QACRyB,WAAS,KACP,EAAC,IAAI,IAAkBvC,MAAS,CAC9ByI,YAAa,aAAanI,EAAQuB,aAClCD,aAAc,EACd8G,UAAW,QACXV,SAAU,SAEZ,EAAC,IAAI,IAAkB5G,MAAS,CAC9BsH,UAAW,OACXV,SAAU,QAEZ,EAAC,IAAI,IAAmBhI,MAAS,CAC/B2I,cAAe,QAEjB,EAAC,IAAI,IAAgB3I,MAAS,CAC5B2I,cAAe,qBACflE,SAAUlE,EAAMqI,WAAWnE,SAC3B1D,WAAY,QAEf,KAGLX,WChFyBgG,EAAW,CAAEyC,MAAO,kB,iICC7ChE,EAAgB,OAAAC,EAAA,KAYtB,cAQE,WAAY5E,GAAZ,MACE,YAAMA,IAAM,K,OARN,EAAA4I,cAAgB,cAmGhB,EAAAC,eAAiB,WAClB,EAAKC,kBAIV,EAAKC,OAAOC,sBAAsB,EAAKC,2BAGjC,EAAAA,yBAAuC,WAC7C,IAAMC,EAAgB,EAAKlJ,MAAMmJ,MAC3BC,EAAiC,EAAKR,cAAczB,QAE1D,GAAIiC,EAAS,CACX,IAAMhD,EAA6BiD,iBAAiBD,GACpD,GAAIhD,EAAMjD,OAASiD,EAAMvF,YAAcuF,EAAMxF,OAAQ,CAC3C,IAAA0I,EAA6BF,EAAlB,YAAEG,EAAgBH,EAAL,YAEhC,EAAKI,aAAeF,EAEpB,IAAMG,EAAgBC,KAAKC,OACxBC,SAASxD,EAAMxF,OAAQ,IA7Ha,GA6HmCgJ,SAASxD,EAAMvF,WAAY,KAGrGuI,EAAQhD,MAAMlD,WAAa,GAa3B,IAAM2G,EAAuBN,GAAeK,SAASxD,EAAMjD,MAAO,IAAMsG,GAExE,GAAII,EAAe,EAAG,CACpB,IAAMC,EAA0BZ,EAAca,OAASF,EAAe,EACtE,OAAO,EAAKG,SAAS,CACnBC,yBAA0Bf,EAAcgB,MAAM,EAAGJ,EAAkB,GACnEK,0BAA2BjB,EAAcgB,MAAMhB,EAAca,OAASD,EAAkB,SAO1F,EAAAM,aAA2B,WAC3B,MAA0D,EAAKC,MAA7DJ,EAAwB,2BAAEE,EAAyB,4BAC3D,GAAIF,GAA4BE,EAA2B,CACzD,IAAMG,EAAe,EAAK1B,cAAczB,QAExC,IAAKmD,EACH,QAIAA,EAAaC,aAAeD,EAAaE,aApKF,GAqKvCF,EAAaf,YAAce,EAAahB,cAExC,EAAKU,SAAS,CACZC,yBAA0BA,EAAyBC,MAAM,EAAGD,EAAyBF,OAAS,GAC9FI,0BAA2BA,EAA0BD,MAAM,OAzJjE,OAAAnE,EAAA,GAAuB,GACvB,EAAKgD,OAAS,IAAI0B,EAAA,EAAM,GACxB,EAAKC,QAAU,IAAIC,EAAA,EAAW,GAC9B,EAAKnB,kBAAetD,EAEpB,EAAKmE,MAAQ,CACXJ,8BAA0B/D,EAC1BiE,+BAA2BjE,G,EAsKjC,OAxL2C,iBAsBlC,YAAA0E,mBAAP,SAA0BC,GAA1B,WACMxE,KAAKrG,MAAMmJ,QAAU0B,EAAU1B,OACjC9C,KAAK2D,SAAS,CACZC,8BAA0B/D,EAC1BiE,+BAA2BjE,IAI3B2E,EAAUC,iBAAmBzE,KAAKrG,MAAM8K,eACtCzE,KAAKrG,MAAM8K,gBACbzE,KAAKwC,iBACLxC,KAAK0C,OAAOC,sBAAsB3C,KAAK+D,cACvC/D,KAAKqE,QAAQK,GAAGtF,OAAQ,SAAUY,KAAK2E,oBAEvC3E,KAAKqE,QAAQO,IAAIxF,OAAQ,SAAUY,KAAK2E,mBAEjC3E,KAAKyC,kBACdzC,KAAK0C,OAAOC,uBAAsB,WAChC,EAAKC,2BACL,EAAKmB,mBAKJ,YAAAc,kBAAP,WACM7E,KAAKrG,MAAM8K,iBACbzE,KAAKwC,iBACLxC,KAAKqE,QAAQK,GAAGtF,OAAQ,SAAUY,KAAK2E,qBAIpC,YAAAG,qBAAP,WACE9E,KAAKqE,QAAQU,UACb/E,KAAK0C,OAAOqC,WAGP,YAAAjF,OAAP,WACQ,MAA4EE,KAAKrG,MAA/EmJ,EAAK,QAAE2B,EAAc,iBAAE3K,EAAoB,uBAAEqG,EAAM,SAAEvG,EAAK,QAAEC,EAAS,YACvE,EAA0DmG,KAAKgE,MAA7DJ,EAAwB,2BAAEE,EAAyB,4BAQ3D,OANA9D,KAAKM,YAAchC,EAAc6B,EAAS,CACxCvG,MAAOA,EACPC,UAAS,EACTC,qBAAoB,IAGlB2K,GAAkBb,GAA4BE,EAE9C,uBAAKjK,UAAWmG,KAAKM,YAAY7G,KAAMkH,IAAKX,KAAKuC,cAAeO,MAAOA,GACpEc,E,SAEAE,GAKH,uBACEjK,UAAWmG,KAAKM,YAAY7G,KAC5BkH,IAAKX,KAAKuC,cACVO,MAAOA,EACP/C,MAAOC,KAAKyC,iBAAmB,CAAE5F,WAAY,eAAagD,GAEzDiD,IAUT,sBAAY,+BAAgB,C,IAA5B,WACE,QAAS9C,KAAKrG,MAAM8K,qBAAwC5E,IAAtBG,KAAKmD,c,gCA2ErC,YAAAwB,kBAAR,sBACM3E,KAAKgF,WAIThF,KAAKgF,SAAWhF,KAAK0C,OAAOuC,YAAW,kBAC9B,EAAKD,SACZ,EAAK7B,kBAAetD,EACpB,EAAK8D,SAAS,CACZC,8BAA0B/D,EAC1BiE,+BAA2BjE,MAE5B,OAEP,EAxLA,CAA2C,a,SCb9BqF,EAAsE,OAAA5D,EAAA,GAIjF,EAAuB,SAAWzB,EAAW,CAAEyC,MAAO,uB,kICClDhE,EAAgB,OAAAC,EAAA,KAKtB,cAGE,WAAY5E,GAAZ,MACE,YAAMA,IAAM,K,OA6BN,EAAAwL,aAAe,WACrB,EAAKxB,SAAS,CAAEyB,gBAAgB,KA5BhC,OAAA1F,EAAA,GAAuB,GACvB,EAAKsE,MAAQ,CAAEoB,gBAAgB,G,EA2CnC,OAlD2C,iBAUlC,YAAAtF,OAAP,WACQ,MAAgDE,KAAKrG,MAAnDwG,EAAM,SAAErD,EAAK,QAAEvC,EAAM,SAAE8K,EAAQ,WAAEC,EAAQ,WAIjD,OAFAtF,KAAKM,YAAchC,EAAc6B,EAASH,KAAKrG,OAG7C,uBAAKE,UAAWmG,KAAKM,YAAY7G,MAC9B6L,GACC,gBAACC,EAAA,EAAK,CACJzI,MAAOA,EACPvC,OAAQA,EACR8K,SAAUA,EACVG,IAAKF,EACL7E,KAAK,eACLgF,IAAI,GACJC,OAAQ1F,KAAKmF,eAGhBnF,KAAKgE,MAAMoB,eAAiBpF,KAAK2F,oBAAsB3F,KAAK4F,sBAS3D,YAAAA,kBAAR,WACU,IAAAC,EAAc7F,KAAKrG,MAAV,UACjB,OACE,uBAAKE,UAAWmG,KAAKM,YAAYwF,qBAC/B,gBAACC,EAAA,EAAI,aAAClM,UAAWmG,KAAKM,YAAY0F,cAAkBH,MAKlD,YAAAF,kBAAR,WACU,IAAAE,EAAc7F,KAAKrG,MAAV,UACjB,OAAO,gBAACoM,EAAA,EAAI,aAAClM,UAAWmG,KAAKM,YAAY2F,YAAgBJ,KAE7D,EAlDA,CAA2C,aClBrCK,EAAmB,OACnBC,EAAiB,OCOVC,EAAsE,OAAA9E,EAAA,GAIjF,GDTuB,SAAC3H,GAChB,IAAAC,EAAoCD,EAA/B,MAAEE,EAA6BF,EAApB,UAAEY,EAAkBZ,EAAZ,OAAEmD,EAAUnD,EAAL,MAC/BI,EAAYH,EAAL,QAEf,MAAO,CACLH,KAAM,CACJ,CACE4B,aAAc,aAAatB,EAAQuB,aACnCC,SAAU,WACVL,gBAAiBnB,EAAQqB,kBACzBf,SAAU,SACVE,OAAQA,GAAaA,EAAM,KAC3BuC,MAAOA,GAAYA,EAAK,MAE1BjD,GAEFmM,aAAc,CACZ,CACEzL,OAAQ2L,EACRpJ,MAAOoJ,EACPhI,SAAUgI,IAGdJ,oBAAqB,CACnB,CACE1L,QAAS,OACTqB,WAAY,SACZC,eAAgB,SAChBnB,OAAQ,OACRuC,MAAO,OACPvB,SAAU,WACVuC,IAAK,EACLnC,KAAM,IAGVsK,WAAY,CACV,CACEtK,KAAM,OACNC,OAAQ,OACRrB,OAAQ4L,EACRrJ,MAAOqJ,EACPjI,SAAUiI,EACV5K,SAAU,WACVlB,SAAU,oBClCkBwF,EAAW,CAAEyC,MAAO,uB,gHCLlDhE,EAAgB,OAAAC,EAAA,KAKtB,cAGE,WAAY5E,GAAZ,MACE,YAAMA,IAAM,K,OAEZ,OAAA+F,EAAA,GAAuB,G,EAa3B,OAnB6C,iBASpC,YAAAI,OAAP,WACQ,MAAyCE,KAAKrG,MAA5CsG,EAAQ,WAAEE,EAAM,SAAEvG,EAAK,QAAEC,EAAS,YAO1C,OALAmG,KAAKM,YAAchC,EAAc6B,EAAS,CACxCvG,MAAOA,EACPC,UAAS,IAGJ,uBAAKA,UAAWmG,KAAKM,YAAY7G,MAAOwG,IAEnD,EAnBA,CAA6C,a,OCXvCiB,EAAmB,CACvBzH,KAAM,0BCMK4M,EAA0E,OAAA/E,EAAA,GAIrF,GDPuB,SAAC3H,GAChB,IAAAE,EAAqBF,EAAZ,UAAEC,EAAUD,EAAL,MAIxB,MAAO,CACLF,KAAM,CAHW,YAAoByH,EAAkBtH,GAI1CH,KACX,CACEW,QAAS,OACTkM,cAAe,SACfC,KAAM,EACN7K,eAAgB,gBAChBrB,SAAU,UAEZR,WCRgCgG,EAAW,CAAEyC,MAAO,yB,oJCApDhE,EAAgB,OAAAC,EAAA,KAKtB,cAGE,WAAY5E,GAAZ,MACE,YAAMA,IAAM,K,OAiFN,EAAA6M,mBAAqB,SAC3BC,GAEM,MAA4E,EAAK9M,MAA/E+M,EAA4B,+BAAE,IAAAC,uBAAe,IAAG,EA9F9B,EA8FmD,EAGvEC,EAAwBH,EAAc/C,OAASiD,EAG/CE,EAAeD,EACjBF,EACEA,EAA6BE,GAC7B,IAAMA,EACR,KAGEE,EAAgBL,EAAc5C,MAAM,EAAG8C,GAAiBI,KAAI,SAACC,EAAMC,GAAc,OACrF,sBAAIC,IAAKD,GACP,gBAAC1B,EAAA,EAAK,CACJ1L,UAAW,EAAKyG,YAAYnE,aAC5BqJ,IAAKwB,EAAKG,QACV1G,KAAK,eACLgF,IAAI,GACJ3I,MAAM,OACNvC,OAAO,SAET,gBAAC6M,EAAA,EAAI,aACHvN,UAAW,EAAKyG,YAAYjE,eAEvB2K,EAAKK,UAAW,CAAE9H,KAAOyH,EAAKK,WAAaL,EAAKK,UAAU9H,MAASyH,EAAKM,OAE5EN,EAfgF,UAoBvF,OACE,2BACE,sBAAInN,UAAW,EAAKyG,YAAYzE,UAAWiL,GAC1CD,GAAgB,wBAAMhN,UAAW,EAAKyG,YAAYtD,sBAAuB6J,KAtH9E,OAAAnH,EAAA,GAAuB,G,EA0H3B,OAhI6C,iBASpC,YAAAI,OAAP,WACQ,IACFC,EACAwH,EAFE,EAA8CvH,KAAKrG,MAAjD8M,EAAa,gBAAEtG,EAAM,SAAEvG,EAAK,QAAEC,EAAS,YAGzCkB,EAAa0L,EAAc/C,OAAS,EAyB1C,OAvBA1D,KAAKM,YAAchC,EAAc6B,EAAS,CACxCvG,MAAOA,EACPC,UAAS,EACTkB,WAAU,IAGR0L,EAAc/C,OAAS,EAEzB6D,EAAUvH,KAAKwG,mBAAmBC,GACA,IAAzBA,EAAc/C,SAEvB6D,EAAUvH,KAAKwH,oBAAoBf,EAAc,IAI7CA,EAAc,GAAG7G,cACnBG,EAAQ,CACNS,kBAAmBiG,EAAc,GAAG7G,eAOxC,uBAAK/F,UAAWmG,KAAKM,YAAY7G,KAAMsG,MAAOA,GAC3CwH,IAKC,YAAAC,oBAAR,SACEC,GAEQ,IAAA3K,EAAyE2K,EAApE,MAAElN,EAAkEkN,EAA5D,OAAEpC,EAA0DoC,EAAlD,SAAEC,EAAgDD,EAAhC,iBAAEE,EAA8BF,EAAL,0BAE5E,GAAIC,EACF,OACE,uBACE7N,UAAW,OAAA+N,EAAA,GAAI5H,KAAKM,YAAY9E,YAAamM,GAC7C5H,MAAO,CAAEjD,MAAOA,EAAOvC,OAAQA,IAE/B,gBAACwL,EAAA,EAAI,eAAK2B,KAKhB,IAWI7M,EAXEgN,EACJ,gBAACtC,EAAA,EAAK,CACJzI,MAAOA,EACPvC,OAAQA,EACR8K,SAAUA,EACVG,IAAKiC,EAAaK,gBAClBrH,KAAK,eACLgF,IAAI,KASR,OAJIgC,EAAaN,UACftM,EAAO,gBAAC0K,EAAA,EAAK,CAAC1L,UAAWmG,KAAKM,YAAYzF,KAAM2K,IAAKiC,EAAaN,QAAS1G,KAAK,eAAegF,IAAI,MAInG,2BACGoC,EACAhN,IAgDT,EAhIA,CAA6C,a,SCThCkN,EAA0E,OAAAzG,EAAA,GAIrF,EAAyB,SAAWzB,EAAW,CAAEyC,MAAO","file":"static/js/0.7d091380.chunk.js","sourcesContent":["import { getGlobalClassNames } from '../../Styling';\nimport { IDocumentCardTitleStyleProps, IDocumentCardTitleStyles } from './DocumentCardTitle.types';\n\nexport const DocumentCardTitleGlobalClassNames = {\n  root: 'ms-DocumentCardTitle',\n};\n\nexport const getStyles = (props: IDocumentCardTitleStyleProps): IDocumentCardTitleStyles => {\n  const { theme, className, showAsSecondaryTitle } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardTitleGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      showAsSecondaryTitle ? fonts.medium : fonts.large,\n      {\n        padding: '8px 16px',\n        display: 'block',\n        overflow: 'hidden',\n        wordWrap: 'break-word',\n        height: showAsSecondaryTitle ? '45px' : '38px',\n        lineHeight: showAsSecondaryTitle ? '18px' : '21px',\n        color: showAsSecondaryTitle ? palette.neutralSecondary : palette.neutralPrimary,\n      },\n      className,\n    ],\n  };\n};\n","import { getFocusStyle, getGlobalClassNames, HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { IDocumentCardPreviewStyleProps, IDocumentCardPreviewStyles } from './DocumentCardPreview.types';\n\nexport const DocumentCardPreviewGlobalClassNames = {\n  root: 'ms-DocumentCardPreview',\n  icon: 'ms-DocumentCardPreview-icon',\n  iconContainer: 'ms-DocumentCardPreview-iconContainer',\n};\n\nexport const getStyles = (props: IDocumentCardPreviewStyleProps): IDocumentCardPreviewStyles => {\n  const { theme, className, isFileList } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardPreviewGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.small,\n      {\n        backgroundColor: isFileList ? palette.white : palette.neutralLighterAlt,\n        borderBottom: `1px solid ${palette.neutralLight}`,\n        overflow: `hidden`,\n        position: 'relative',\n      },\n      className,\n    ],\n    previewIcon: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n      },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        left: '10px',\n        bottom: '10px',\n        position: 'absolute',\n      },\n    ],\n    fileList: {\n      padding: '16px 16px 0 16px',\n      listStyleType: 'none',\n      margin: 0,\n      selectors: {\n        li: {\n          height: '16px',\n          lineHeight: '16px',\n          marginBottom: '8px',\n          overflow: 'hidden',\n        },\n      },\n    },\n    fileListIcon: {\n      display: 'inline-block',\n      marginRight: '8px',\n    },\n    fileListLink: [\n      getFocusStyle(theme, {\n        highContrastStyle: {\n          border: '1px solid WindowText',\n          outline: 'none',\n        },\n      }),\n      {\n        boxSizing: 'border-box',\n        color: palette.neutralDark,\n        overflow: 'hidden',\n        display: 'inline-block',\n        textDecoration: 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        width: 'calc(100% - 24px)',\n        selectors: {\n          ':hover': {\n            color: palette.themePrimary,\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            selectors: {\n              [HighContrastSelector]: {\n                outline: 'none',\n              },\n            },\n          },\n        },\n      },\n    ],\n    fileListOverflowText: {\n      padding: '0px 16px 8px 16px',\n      display: 'block',\n    },\n  };\n};\n","import { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { IDocumentCardActivityStyleProps, IDocumentCardActivityStyles } from './DocumentCardActivity.types';\n\nconst VERTICAL_PADDING = 8;\nconst HORIZONTAL_PADDING = 16;\nconst IMAGE_SIZE = 32;\nconst PERSONA_TEXT_GUTTER = 8;\n\nexport const DocumentCardActivityGlobalClassNames = {\n  root: 'ms-DocumentCardActivity',\n  multiplePeople: 'ms-DocumentCardActivity--multiplePeople',\n  details: 'ms-DocumentCardActivity-details',\n  name: 'ms-DocumentCardActivity-name',\n  activity: 'ms-DocumentCardActivity-activity',\n  avatars: 'ms-DocumentCardActivity-avatars',\n  avatar: 'ms-DocumentCardActivity-avatar',\n};\n\nexport const getStyles = (props: IDocumentCardActivityStyleProps): IDocumentCardActivityStyles => {\n  const { theme, className, multiplePeople } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardActivityGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      multiplePeople && classNames.multiplePeople,\n      {\n        padding: `${VERTICAL_PADDING}px ${HORIZONTAL_PADDING}px`,\n        position: 'relative',\n      },\n      className,\n    ],\n    avatars: [\n      classNames.avatars,\n      {\n        marginLeft: '-2px', // Avatars sit outside of the usual padding for visual balance\n        height: '32px',\n      },\n    ],\n    avatar: [\n      classNames.avatar,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        position: 'relative',\n        textAlign: 'center',\n        width: IMAGE_SIZE,\n        height: IMAGE_SIZE,\n\n        selectors: {\n          '&:after': {\n            content: '\" \"',\n            position: 'absolute',\n            left: '-1px',\n            top: '-1px',\n            right: '-1px',\n            bottom: '-1px',\n            border: `2px solid ${palette.white}`, // Match the background of the card\n            borderRadius: '50%',\n          },\n          ':nth-of-type(2)': multiplePeople && {\n            marginLeft: '-16px',\n          },\n        },\n      },\n    ],\n    details: [\n      classNames.details,\n      {\n        left: multiplePeople\n          ? `${HORIZONTAL_PADDING + IMAGE_SIZE * 1.5 + PERSONA_TEXT_GUTTER}px`\n          : `${HORIZONTAL_PADDING + IMAGE_SIZE + PERSONA_TEXT_GUTTER}px`,\n        height: IMAGE_SIZE,\n        position: 'absolute',\n        top: VERTICAL_PADDING,\n        width: `calc(100% - ${HORIZONTAL_PADDING + IMAGE_SIZE + PERSONA_TEXT_GUTTER + HORIZONTAL_PADDING}px)`,\n      },\n    ],\n    name: [\n      classNames.name,\n      {\n        display: 'block',\n        fontSize: fonts.small.fontSize,\n        lineHeight: '15px',\n        height: '15px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: palette.neutralPrimary,\n        fontWeight: FontWeights.semibold,\n      },\n    ],\n    activity: [\n      classNames.activity,\n      {\n        display: 'block',\n        fontSize: fonts.small.fontSize,\n        lineHeight: '15px',\n        height: '15px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        color: palette.neutralSecondary,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IBaseProps, IRefObject, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCard {\n  /**\n   * Sets focus to the DocumentCard.\n   */\n  focus: () => void;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardProps extends IBaseProps<IDocumentCard>, React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the IDocumentCard interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IDocumentCard>;\n\n  /**\n   * The type of DocumentCard to display.\n   * @defaultvalue DocumentCardType.normal\n   */\n  type?: DocumentCardType;\n\n  /**\n   * Function to call when the card is clicked or keyboard Enter/Space is pushed.\n   */\n  onClick?: (ev?: React.SyntheticEvent<HTMLElement>) => void;\n\n  /**\n   * A URL to navigate to when the card is clicked. If a function has also been provided,\n   * it will be used instead of the URL.\n   */\n  onClickHref?: string;\n\n  /**\n   * A target browser context for opening the link. If not specified, will open in the same tab/window.\n   */\n  onClickTarget?: string;\n\n  /**\n   * Aria role assigned to the documentCard (Eg. button, link).\n   * Use this to override the default assignment.\n   * @defaultvalue When `onClick` is provided, default role will be 'button'.\n   * When `onClickHref` is provided, default role will be 'link'.\n   */\n  role?: string;\n\n  /**\n   * Hex color value of the line below the card, which should correspond to the document type.\n   * This should only be supplied when using the 'compact' card layout.\n   *\n   * @deprecated To be removed at \\>= v5.0.0.\n   */\n  accentColor?: string;\n\n  /**\n   * Child components to render within the card.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IDocumentCardStyleProps, IDocumentCardStyles>;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Optional override class name\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport enum DocumentCardType {\n  /**\n   * Standard DocumentCard.\n   */\n  normal = 0,\n  /**\n   * Compact layout. Displays the preview beside the details, rather than above.\n   */\n  compact = 1,\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Optional override class name\n   */\n  className?: string;\n\n  /**\n   * True when the card has a click action.\n   */\n  actionable?: boolean;\n\n  /**\n   * Compact variant of the card.\n   */\n  compact?: boolean;\n}\n\n/**\n * {@docCategory DocumentCard}\n */\nexport interface IDocumentCardStyles {\n  root: IStyle;\n}\n","import * as React from 'react';\nimport { IProcessedStyleSet } from '../../Styling';\nimport {\n  classNamesFunction,\n  KeyCodes,\n  getNativeProps,\n  divProperties,\n  warnDeprecations,\n  initializeComponentRef,\n} from '../../Utilities';\nimport {\n  DocumentCardType,\n  IDocumentCard,\n  IDocumentCardProps,\n  IDocumentCardStyleProps,\n  IDocumentCardStyles,\n} from './DocumentCard.types';\n\nconst getClassNames = classNamesFunction<IDocumentCardStyleProps, IDocumentCardStyles>();\n\nconst COMPONENT_NAME = 'DocumentCard';\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardBase extends React.Component<IDocumentCardProps, any> implements IDocumentCard {\n  public static defaultProps: IDocumentCardProps = {\n    type: DocumentCardType.normal,\n  };\n\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IDocumentCardStyles>;\n\n  constructor(props: IDocumentCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      accentColor: undefined,\n    });\n  }\n\n  public render(): JSX.Element {\n    // eslint-disable-next-line deprecation/deprecation\n    const { onClick, onClickHref, children, type, accentColor, styles, theme, className } = this.props;\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, [\n      'className',\n      'onClick',\n      'type',\n      'role',\n    ]);\n    const actionable = onClick || onClickHref ? true : false;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      actionable,\n      compact: type === DocumentCardType.compact ? true : false,\n    });\n\n    // Override the border color if an accent color was provided (compact card only)\n    let style;\n    if (type === DocumentCardType.compact && accentColor) {\n      style = {\n        borderBottomColor: accentColor,\n      };\n    }\n\n    // if this element is actionable it should have an aria role\n    const role = this.props.role || (actionable ? (onClick ? 'button' : 'link') : undefined);\n    const tabIndex = actionable ? 0 : undefined;\n\n    return (\n      <div\n        ref={this._rootElement}\n        tabIndex={tabIndex}\n        data-is-focusable={actionable}\n        role={role}\n        className={this._classNames.root}\n        onKeyDown={actionable ? this._onKeyDown : undefined}\n        onClick={actionable ? this._onClick : undefined}\n        style={style}\n        {...nativeProps}\n      >\n        {children}\n      </div>\n    );\n  }\n\n  public focus(): void {\n    if (this._rootElement.current) {\n      this._rootElement.current.focus();\n    }\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    this._onAction(ev);\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      this._onAction(ev);\n    }\n  };\n\n  private _onAction = (ev: React.SyntheticEvent<HTMLElement>): void => {\n    const { onClick, onClickHref, onClickTarget } = this.props;\n\n    if (onClick) {\n      onClick(ev);\n    } else if (!onClick && onClickHref) {\n      // If no onClick Function was provided and we do have an onClickHref, redirect to the onClickHref\n      if (onClickTarget) {\n        window.open(onClickHref, onClickTarget, 'noreferrer noopener nofollow');\n      } else {\n        window.location.href = onClickHref;\n      }\n\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n}\n","import { getGlobalClassNames, FontWeights } from '../../Styling';\nimport { IDocumentCardLocationStyleProps, IDocumentCardLocationStyles } from './DocumentCardLocation.types';\n\nexport const DocumentCardLocationGlobalClassNames = {\n  root: 'ms-DocumentCardLocation',\n};\n\nexport const getStyles = (props: IDocumentCardLocationStyleProps): IDocumentCardLocationStyles => {\n  const { theme, className } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardLocationGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.small,\n      {\n        color: palette.themePrimary,\n        display: 'block',\n        fontWeight: FontWeights.semibold,\n        overflow: 'hidden',\n        padding: '8px 16px',\n        position: 'relative',\n        textDecoration: 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n\n        selectors: {\n          ':hover': {\n            color: palette.themePrimary,\n            cursor: 'pointer',\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n","import { getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { IDocumentCardStyleProps, IDocumentCardStyles } from './DocumentCard.types';\nimport { DocumentCardPreviewGlobalClassNames as previewClassNames } from './DocumentCardPreview.styles';\nimport { DocumentCardActivityGlobalClassNames as activityClassNames } from './DocumentCardActivity.styles';\nimport { DocumentCardTitleGlobalClassNames as titleClassNames } from './DocumentCardTitle.styles';\nimport { DocumentCardLocationGlobalClassNames as locationClassNames } from './DocumentCardLocation.styles';\n\nconst GlobalClassNames = {\n  root: 'ms-DocumentCard',\n  rootActionable: 'ms-DocumentCard--actionable',\n  rootCompact: 'ms-DocumentCard--compact',\n};\n\nexport const getStyles = (props: IDocumentCardStyleProps): IDocumentCardStyles => {\n  const { className, theme, actionable, compact } = props;\n  const { palette, fonts, effects } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        WebkitFontSmoothing: 'antialiased',\n        backgroundColor: palette.white,\n        border: `1px solid ${palette.neutralLight}`,\n        maxWidth: '320px',\n        minWidth: '206px',\n        userSelect: 'none',\n        position: 'relative',\n        selectors: {\n          ':focus': {\n            outline: '0px solid',\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: getInputFocusStyle(palette.neutralSecondary, effects.roundedCorner2),\n          [`.${locationClassNames.root} + .${titleClassNames.root}`]: {\n            paddingTop: '4px',\n          },\n        },\n      },\n      actionable && [\n        classNames.rootActionable,\n        {\n          selectors: {\n            ':hover': {\n              cursor: 'pointer',\n              borderColor: palette.neutralTertiaryAlt,\n            },\n            ':hover:after': {\n              content: '\" \"',\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0,\n              border: `1px solid ${palette.neutralTertiaryAlt}`,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      ],\n      compact && [\n        classNames.rootCompact,\n        {\n          display: 'flex',\n          maxWidth: '480px',\n          height: '108px',\n          selectors: {\n            [`.${previewClassNames.root}`]: {\n              borderRight: `1px solid ${palette.neutralLight}`,\n              borderBottom: 0, // Remove the usual border from the preview\n              maxHeight: '106px',\n              maxWidth: '144px',\n            },\n            [`.${previewClassNames.icon}`]: {\n              maxHeight: '32px',\n              maxWidth: '32px',\n            },\n            [`.${activityClassNames.root}`]: {\n              paddingBottom: '12px',\n            },\n            [`.${titleClassNames.root}`]: {\n              paddingBottom: '12px 16px 8px 16px',\n              fontSize: fonts.mediumPlus.fontSize,\n              lineHeight: '16px',\n            },\n          },\n        },\n      ],\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardBase } from './DocumentCard.base';\nimport { getStyles } from './DocumentCard.styles';\nimport { IDocumentCardProps, IDocumentCardStyleProps, IDocumentCardStyles } from './DocumentCard.types';\n\nexport const DocumentCard: React.FunctionComponent<IDocumentCardProps> = styled<\n  IDocumentCardProps,\n  IDocumentCardStyleProps,\n  IDocumentCardStyles\n>(DocumentCardBase, getStyles, undefined, { scope: 'DocumentCard' });\n","import * as React from 'react';\n\nimport { Async, EventGroup, classNamesFunction } from '../../Utilities';\nimport {\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles,\n} from './DocumentCardTitle.types';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { initializeComponentRef } from '@fluentui/utilities';\n\nconst getClassNames = classNamesFunction<IDocumentCardTitleStyleProps, IDocumentCardTitleStyles>();\n\nexport interface IDocumentCardTitleState {\n  truncatedTitleFirstPiece?: string;\n  truncatedTitleSecondPiece?: string;\n}\n\nconst TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD = 5;\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardTitleBase extends React.Component<IDocumentCardTitleProps, IDocumentCardTitleState> {\n  private _titleElement = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IDocumentCardTitleStyles>;\n  private _async: Async;\n  private _events: EventGroup;\n  private _clientWidth: number | undefined;\n  private _timerId: number | undefined;\n\n  constructor(props: IDocumentCardTitleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    this._clientWidth = undefined;\n\n    this.state = {\n      truncatedTitleFirstPiece: undefined,\n      truncatedTitleSecondPiece: undefined,\n    };\n  }\n\n  public componentDidUpdate(prevProps: IDocumentCardTitleProps): void {\n    if (this.props.title !== prevProps.title) {\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }\n\n    if (prevProps.shouldTruncate !== this.props.shouldTruncate) {\n      if (this.props.shouldTruncate) {\n        this._truncateTitle();\n        this._async.requestAnimationFrame(this._shrinkTitle);\n        this._events.on(window, 'resize', this._updateTruncation);\n      } else {\n        this._events.off(window, 'resize', this._updateTruncation);\n      }\n    } else if (this._needMeasurement) {\n      this._async.requestAnimationFrame(() => {\n        this._truncateWhenInAnimation();\n        this._shrinkTitle();\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    if (this.props.shouldTruncate) {\n      this._truncateTitle();\n      this._events.on(window, 'resize', this._updateTruncation);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._events.dispose();\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { title, shouldTruncate, showAsSecondaryTitle, styles, theme, className } = this.props;\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      showAsSecondaryTitle,\n    });\n\n    if (shouldTruncate && truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      return (\n        <div className={this._classNames.root} ref={this._titleElement} title={title}>\n          {truncatedTitleFirstPiece}\n          &hellip;\n          {truncatedTitleSecondPiece}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={this._classNames.root}\n          ref={this._titleElement}\n          title={title}\n          style={this._needMeasurement ? { whiteSpace: 'nowrap' } : undefined}\n        >\n          {title}\n        </div>\n      );\n    }\n  }\n\n  /**\n   * In measuring, it will render a same style text with whiteSpace: 'nowrap', to get overflow rate.\n   * So that the logic can predict truncated text well.\n   */\n  private get _needMeasurement(): boolean {\n    return !!this.props.shouldTruncate && this._clientWidth === undefined;\n  }\n\n  // Truncate logic here way can't handle the case that chars with different widths are mixed very well.\n  // Let _shrinkTitle take care of that.\n  private _truncateTitle = (): void => {\n    if (!this._needMeasurement) {\n      return;\n    }\n\n    this._async.requestAnimationFrame(this._truncateWhenInAnimation);\n  };\n\n  private _truncateWhenInAnimation: () => void = () => {\n    const originalTitle = this.props.title;\n    const element: HTMLDivElement | null = this._titleElement.current;\n\n    if (element) {\n      const style: CSSStyleDeclaration = getComputedStyle(element);\n      if (style.width && style.lineHeight && style.height) {\n        const { clientWidth, scrollWidth } = element;\n\n        this._clientWidth = clientWidth;\n\n        const lines: number = Math.floor(\n          (parseInt(style.height, 10) + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD) / parseInt(style.lineHeight, 10),\n        );\n\n        element.style.whiteSpace = '';\n\n        // Use overflow to predict truncated length.\n        // Take an example.The text is: A text with A very long text that need to be truncated.ppt\n        // if container is like\n        // |A text with A very| long text that need to be truncated.ppt\n        // The scroll width is 58, (take two | out of length)\n        // The client width is 18\n        // the overflow rate is scrollWidth/clientWidth which should be close to length(overflowText)/length(visualText)\n        // And the length of remaining text should be truncated is (original Length)/(58/18) -3 = 15.\n        // So that the logic can predict truncated text well.\n        // first piece will be `A text `, * second piece will be `ated.ppt`\n        // |A text ...ated.ppt|\n        const overFlowRate: number = scrollWidth / (parseInt(style.width, 10) * lines);\n\n        if (overFlowRate > 1) {\n          const truncatedLength: number = originalTitle.length / overFlowRate - 3; /** Saved for separator */\n          return this.setState({\n            truncatedTitleFirstPiece: originalTitle.slice(0, truncatedLength / 2),\n            truncatedTitleSecondPiece: originalTitle.slice(originalTitle.length - truncatedLength / 2),\n          });\n        }\n      }\n    }\n  };\n\n  private _shrinkTitle: () => void = () => {\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n    if (truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      const titleElement = this._titleElement.current;\n\n      if (!titleElement) {\n        return;\n      }\n\n      if (\n        titleElement.scrollHeight > titleElement.clientHeight + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD ||\n        titleElement.scrollWidth > titleElement.clientWidth\n      ) {\n        this.setState({\n          truncatedTitleFirstPiece: truncatedTitleFirstPiece.slice(0, truncatedTitleFirstPiece.length - 1),\n          truncatedTitleSecondPiece: truncatedTitleSecondPiece.slice(1),\n        });\n      }\n    }\n  };\n\n  private _updateTruncation(): void {\n    if (this._timerId) {\n      return;\n    }\n\n    this._timerId = this._async.setTimeout(() => {\n      delete this._timerId;\n      this._clientWidth = undefined;\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }, 250);\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardTitleBase } from './DocumentCardTitle.base';\nimport { getStyles } from './DocumentCardTitle.styles';\nimport {\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles,\n} from './DocumentCardTitle.types';\n\nexport const DocumentCardTitle: React.FunctionComponent<IDocumentCardTitleProps> = styled<\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles\n>(DocumentCardTitleBase, getStyles, undefined, { scope: 'DocumentCardTitle' });\n","import * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardImageProps,\n  IDocumentCardImageStyleProps,\n  IDocumentCardImageStyles,\n} from './DocumentCardImage.types';\n\nexport interface IDocumentCardImageState {\n  readonly imageHasLoaded: boolean;\n}\n\nconst getClassNames = classNamesFunction<IDocumentCardImageStyleProps, IDocumentCardImageStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardImageBase extends React.Component<IDocumentCardImageProps, IDocumentCardImageState> {\n  private _classNames: IProcessedStyleSet<IDocumentCardImageStyles>;\n\n  constructor(props: IDocumentCardImageProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this.state = { imageHasLoaded: false };\n  }\n\n  public render(): JSX.Element {\n    const { styles, width, height, imageFit, imageSrc } = this.props;\n\n    this._classNames = getClassNames(styles!, this.props);\n\n    return (\n      <div className={this._classNames.root}>\n        {imageSrc && (\n          <Image\n            width={width}\n            height={height}\n            imageFit={imageFit}\n            src={imageSrc}\n            role=\"presentation\"\n            alt=\"\"\n            onLoad={this._onImageLoad}\n          />\n        )}\n        {this.state.imageHasLoaded ? this._renderCornerIcon() : this._renderCenterIcon()}\n      </div>\n    );\n  }\n\n  private _onImageLoad = () => {\n    this.setState({ imageHasLoaded: true });\n  };\n\n  private _renderCenterIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return (\n      <div className={this._classNames.centeredIconWrapper}>\n        <Icon className={this._classNames.centeredIcon} {...iconProps} />\n      </div>\n    );\n  }\n\n  private _renderCornerIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return <Icon className={this._classNames.cornerIcon} {...iconProps} />;\n  }\n}\n","import { IDocumentCardImageStyleProps, IDocumentCardImageStyles } from './DocumentCardImage.types';\n\nconst centeredIconSize = '42px';\nconst cornerIconSize = '32px';\n\nexport const getStyles = (props: IDocumentCardImageStyleProps): IDocumentCardImageStyles => {\n  const { theme, className, height, width } = props;\n  const { palette } = theme!;\n\n  return {\n    root: [\n      {\n        borderBottom: `1px solid ${palette.neutralLight}`,\n        position: 'relative',\n        backgroundColor: palette.neutralLighterAlt,\n        overflow: `hidden`,\n        height: height && `${height}px`,\n        width: width && `${width}px`,\n      },\n      className,\n    ],\n    centeredIcon: [\n      {\n        height: centeredIconSize,\n        width: centeredIconSize,\n        fontSize: centeredIconSize,\n      },\n    ],\n    centeredIconWrapper: [\n      {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n      },\n    ],\n    cornerIcon: [\n      {\n        left: '10px',\n        bottom: '10px',\n        height: cornerIconSize,\n        width: cornerIconSize,\n        fontSize: cornerIconSize,\n        position: 'absolute',\n        overflow: 'visible',\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardImageBase } from './DocumentCardImage.base';\nimport { getStyles } from './DocumentCardImage.styles';\nimport {\n  IDocumentCardImageProps,\n  IDocumentCardImageStyleProps,\n  IDocumentCardImageStyles,\n} from './DocumentCardImage.types';\n\nexport const DocumentCardImage: React.FunctionComponent<IDocumentCardImageProps> = styled<\n  IDocumentCardImageProps,\n  IDocumentCardImageStyleProps,\n  IDocumentCardImageStyles\n>(DocumentCardImageBase, getStyles, undefined, { scope: 'DocumentCardImage' });\n","import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardDetailsProps,\n  IDocumentCardDetailsStyleProps,\n  IDocumentCardDetailsStyles,\n} from './DocumentCardDetails.types';\nimport { IProcessedStyleSet } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDocumentCardDetailsStyleProps, IDocumentCardDetailsStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardDetailsBase extends React.Component<IDocumentCardDetailsProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardDetailsStyles>;\n\n  constructor(props: IDocumentCardDetailsProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { children, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    return <div className={this._classNames.root}>{children}</div>;\n  }\n}\n","import { getGlobalClassNames } from '../../Styling';\nimport { IDocumentCardStatusStyleProps, IDocumentCardStatusStyles } from './DocumentCardStatus.types';\n\nconst GlobalClassNames = {\n  root: 'ms-DocumentCardDetails',\n};\n\nexport const getStyles = (props: IDocumentCardStatusStyleProps): IDocumentCardStatusStyles => {\n  const { className, theme } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        justifyContent: 'space-between',\n        overflow: 'hidden',\n      },\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardDetailsBase } from './DocumentCardDetails.base';\nimport { getStyles } from './DocumentCardDetails.styles';\nimport {\n  IDocumentCardDetailsProps,\n  IDocumentCardDetailsStyleProps,\n  IDocumentCardDetailsStyles,\n} from './DocumentCardDetails.types';\n\nexport const DocumentCardDetails: React.FunctionComponent<IDocumentCardDetailsProps> = styled<\n  IDocumentCardDetailsProps,\n  IDocumentCardDetailsStyleProps,\n  IDocumentCardDetailsStyles\n>(DocumentCardDetailsBase, getStyles, undefined, { scope: 'DocumentCardDetails' });\n","import * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { Link } from '../../Link';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { classNamesFunction, css, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardPreviewImage,\n  IDocumentCardPreviewProps,\n  IDocumentCardPreviewStyleProps,\n  IDocumentCardPreviewStyles,\n} from './DocumentCardPreview.types';\n\nconst DEFAULT_DISPLAY_COUNT = 3;\nconst getClassNames = classNamesFunction<IDocumentCardPreviewStyleProps, IDocumentCardPreviewStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardPreviewBase extends React.Component<IDocumentCardPreviewProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardPreviewStyles>;\n\n  constructor(props: IDocumentCardPreviewProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { previewImages, styles, theme, className } = this.props;\n    let style: React.CSSProperties | undefined;\n    let preview: React.ReactNode;\n    const isFileList = previewImages.length > 1;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isFileList,\n    });\n\n    if (previewImages.length > 1) {\n      // Render a list of files\n      preview = this._renderPreviewList(previewImages);\n    } else if (previewImages.length === 1) {\n      // Render a single preview\n      preview = this._renderPreviewImage(previewImages[0]);\n\n      // Override the border color if an accent color was provided\n      /* eslint-disable deprecation/deprecation */\n      if (previewImages[0].accentColor) {\n        style = {\n          borderBottomColor: previewImages[0].accentColor,\n        };\n      }\n      /* eslint-enable deprecation/deprecation */\n    }\n\n    return (\n      <div className={this._classNames.root} style={style}>\n        {preview}\n      </div>\n    );\n  }\n\n  private _renderPreviewImage(\n    previewImage: IDocumentCardPreviewImage,\n  ): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> {\n    const { width, height, imageFit, previewIconProps, previewIconContainerClass } = previewImage;\n\n    if (previewIconProps) {\n      return (\n        <div\n          className={css(this._classNames.previewIcon, previewIconContainerClass)}\n          style={{ width: width, height: height }}\n        >\n          <Icon {...previewIconProps} />\n        </div>\n      );\n    }\n\n    const image = (\n      <Image\n        width={width}\n        height={height}\n        imageFit={imageFit}\n        src={previewImage.previewImageSrc}\n        role=\"presentation\"\n        alt=\"\"\n      />\n    );\n\n    let icon;\n    if (previewImage.iconSrc) {\n      icon = <Image className={this._classNames.icon} src={previewImage.iconSrc} role=\"presentation\" alt=\"\" />;\n    }\n\n    return (\n      <div>\n        {image}\n        {icon}\n      </div>\n    );\n  }\n\n  private _renderPreviewList = (\n    previewImages: IDocumentCardPreviewImage[],\n  ): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> => {\n    const { getOverflowDocumentCountText, maxDisplayCount = DEFAULT_DISPLAY_COUNT } = this.props;\n\n    // Determine how many documents we won't be showing\n    const overflowDocumentCount = previewImages.length - maxDisplayCount;\n\n    // Determine the overflow text that will be rendered after the preview list.\n    const overflowText = overflowDocumentCount\n      ? getOverflowDocumentCountText\n        ? getOverflowDocumentCountText(overflowDocumentCount)\n        : '+' + overflowDocumentCount\n      : null;\n\n    // Create list items for the documents to be shown\n    const fileListItems = previewImages.slice(0, maxDisplayCount).map((file, fileIndex) => (\n      <li key={fileIndex}>\n        <Image\n          className={this._classNames.fileListIcon}\n          src={file.iconSrc}\n          role=\"presentation\"\n          alt=\"\"\n          width=\"16px\"\n          height=\"16px\"\n        />\n        <Link\n          className={this._classNames.fileListLink}\n          // eslint-disable-next-line deprecation/deprecation\n          {...(file.linkProps, { href: (file.linkProps && file.linkProps.href) || file.url })}\n        >\n          {file.name}\n        </Link>\n      </li>\n    ));\n\n    return (\n      <div>\n        <ul className={this._classNames.fileList}>{fileListItems}</ul>\n        {overflowText && <span className={this._classNames.fileListOverflowText}>{overflowText}</span>}\n      </div>\n    );\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardPreviewBase } from './DocumentCardPreview.base';\nimport { getStyles } from './DocumentCardPreview.styles';\nimport {\n  IDocumentCardPreviewProps,\n  IDocumentCardPreviewStyleProps,\n  IDocumentCardPreviewStyles,\n} from './DocumentCardPreview.types';\n\nexport const DocumentCardPreview: React.FunctionComponent<IDocumentCardPreviewProps> = styled<\n  IDocumentCardPreviewProps,\n  IDocumentCardPreviewStyleProps,\n  IDocumentCardPreviewStyles\n>(DocumentCardPreviewBase, getStyles, undefined, { scope: 'DocumentCardPreview' });\n"],"sourceRoot":""}