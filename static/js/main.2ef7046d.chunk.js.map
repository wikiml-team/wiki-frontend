{"version":3,"sources":["components/sidepanel/formcontents.tsx","components/help/contextualhelp.tsx","components/inputs/dropdown.tsx","components/inputs/datepicker.tsx","components/form/debugformik.tsx","components/form/autosaveform.tsx","pages/methodologies/canadian/projectforms/generalform.tsx","pages/methodologies/canadian/projectforms/stakeholdersform.tsx","pages/methodologies/canadian/projectforms/activitiesform.tsx","pages/methodologies/canadian/projectforms/performanceform.tsx","pages/methodologies/canadian/projectforms/risksform.tsx","pages/methodologies/canadian/projectforms/budgetform.tsx","pages/methodologies/canadian/projectforms/reportsform.tsx","components/inputs/logictext.tsx","pages/methodologies/canadian/projectforms/logicmodelform.tsx","components/styled/pagecontainer.tsx","components/styled/sticky.tsx","i18n.js","components/fullscreentoggler.js","components/menus/commands/items.tsx","store/slices/languageslice.tsx","components/sidepanel/languagepanel.tsx","themes/office.tsx","store/slices/themeslice.tsx","components/styled/shapes.tsx","components/pickers/themepicker.tsx","components/sidepanel/settingspanel.tsx","components/menus/commands/custombuttons.tsx","components/dialog/customDialog.tsx","components/dialog/exportDialog.tsx","components/menus/commands/index.tsx","components/menus/mainmenu/pivotbar.tsx","components/menus/mainmenu/teampile.tsx","components/menus/mainmenu/index.tsx","components/menus/mainmenu/toolbar.tsx","components/menus/footer/pagestabs.tsx","components/menus/footer/addbutton.tsx","components/menus/footer/index.tsx","layouts/workplace.tsx","components/cards/staredprojects.tsx","pages/home/home.tsx","components/menus/homemenu/filemenu.tsx","layouts/main.tsx","apollo/methodologies.ts","components/cards/methodologycard.tsx","pages/home/new.tsx","pages/home/open.tsx","pages/home/info.tsx","pages/home/about.tsx","pages/home/share.tsx","pages/home/print.tsx","pages/home/export.tsx","apollo.tsx","pages/main.tsx","routes.tsx","App.tsx","reportWebVitals.ts","store/slices/settingslice.tsx","store/index.tsx","index.tsx","components/inputs/text.tsx","pages/methodologies/canadian/projectforms/changenarrativeform.tsx","pages/methodologies/canadian/licitationforms/lotform.tsx","pages/methodologies/canadian/licitationforms/specificationsform.tsx","pages/methodologies/canadian/licitationforms/technicalofferform.tsx","pages/methodologies/canadian/licitationforms/financialofferform.tsx","pages/methodologies/canadian/tutorials/formstutorial.tsx","pages/methodologies/canadian/tutorials/sectorstutorial.tsx","pages/methodologies/canadian/tutorials/guidestutorial.tsx","pages/methodologies/canadian/tutorials/methodologytutorials.tsx","pages/methodologies/canadian/tutorials/outcomestutorial.tsx","pages/methodologies/canadian/tutorials/indicatorstutorial.tsx","pages/methodologies/canadian/database/activitiesdata.tsx","pages/methodologies/canadian/database/budgetsdata.tsx","pages/methodologies/canadian/database/categoriesdata.tsx","pages/methodologies/canadian/database/coinsdata.tsx","pages/methodologies/canadian/database/countriesdata.tsx","pages/methodologies/canadian/database/developmentgoalsdata.tsx","pages/methodologies/canadian/database/indicatorsdata.tsx","pages/methodologies/canadian/database/languagesdata.tsx","pages/methodologies/canadian/database/methodologiesdata.tsx","pages/methodologies/canadian/database/offersdata.tsx","pages/methodologies/canadian/database/outcomesdata.tsx","pages/methodologies/canadian/database/productsservicesdata.tsx","pages/methodologies/canadian/database/programsdata.tsx","pages/methodologies/canadian/database/projectgoalsdata.tsx","pages/methodologies/canadian/database/projectsdata.tsx","pages/methodologies/canadian/database/sectorsdata.tsx","pages/methodologies/canadian/database/sourcesdata.tsx","pages/methodologies/canadian/database/stakeholdersdata.tsx","pages/methodologies/canadian/database/assumptionsdata.tsx","pages/methodologies/canadian/database/usersdata.tsx","pages/methodologies/canadian/projectforms/evaluationform.tsx","pages/methodologies/canadian/projectforms/applicationform.tsx","pages/methodologies/canadian/tabsconfiguration.tsx","store/slices/workplaceslice.tsx","models/workplace.ts","models/sector.ts","models/canadian/stakeholders.ts","models/canadian/logicmodel.ts","models/tree.ts","models/canadian/actvitiesmatrix.ts","store/slices/projectslice.tsx"],"names":["StakehoderFormPanel","t","useTranslation","tokens","childrenGap","Item","label","options","LogicModelOutputFormPanel","LogicModelOutcomeFormPanel","ContextualHelpContent","content","definition","example","format","guide","tips","columns","key","name","fieldName","minWidth","data","onRender","item","isMultiline","base","titles","filter","i","items","groups","index","title","push","startIndex","count","autoHide","autoHeight","autoHeightMin","autoHeightMax","selectionMode","SelectionMode","none","isHeaderVisible","DropdownFieldInput","field","form","props","Dropdown","onGetErrorMessage","value","touched","errors","deferredValidationTime","DateFieldInput","DayPickerStrings","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","minDate","useConst","addMonths","Date","now","DatePicker","placeholder","strings","styles","root","height","Debug","style","margin","borderRadius","background","boxShadow","textTransform","fontSize","borderTopLeftRadius","borderTopRightRadius","fontWeight","padding","color","letterSpacing","validationSchema","validate","rest","overflowX","JSON","stringify","AutoSave","debounceMs","formik","useFormikContext","useState","lastSaved","setLastSaved","debouncedSubmit","useCallback","debounce","submitForm","then","toISOString","useEffect","values","isSubmitting","AutoSaveFormik","initialValues","onSubmit","children","GeneralForm","classes","mergeStyleSets","circle","width","headerStackProps","horizontal","horizontalAlign","paddingRight","separatorProps","alignContent","generalInfo","useSelector","selectProject","info","initialDate","setInitialDate","approvedDate","setApprovedDate","initValues","shortName","shortname","largeName","description","country","impOrganization","organization","intOrganization","intermediary","budget","budgetPerItems","budgetItems","budgetPerAct","budgetAct","budgetFinanced","budgetSolicited","solicitedBudget","program","sector","duration","donor","approvedBudget","finalDate","contribution","object","shape","string","max","required","min","currency","number","setLocale","mixed","default","countries","text","setSubmitting","alert","dir","component","TextFieldInput","sizeLg","multiline","autoAdjustHeight","marginTop","sizeSm","sizeMd","Separator","PrimaryButton","className","Stack","Label","status","wikicode","suffix","prefix","readOnly","donorcode","onSelectDate","date","StandardField","TextField","grow","generalFormViewMode","StakeholdersForm","stakeholdersModel","forms","find","structure","initialItems","buidStakeholdersList","buildStakeholdersGroups","setItems","stakeholders","setStakeholders","useBoolean","panelIsOpen","openPanel","setTrue","dismissPanel","setFalse","maxWidth","mainStakeholderRender","ariaLabel","isResizable","isPadded","fieldRender","operatorsRender","palette","useTheme","dropdownStyles","dropdown","border","neutralLighter","selectors","red","commandStyles","alignSelf","rootHovered","backgroundColor","themeLighter","icon","black","defaultSelectedKey","id","toString","iconProps","iconName","onClick","bossIconStyles","FontWeights","bold","iconStyles","neutralSecondary","main","category","hasNoMain","console","log","setMainStakeholder","handleChangeMainStakeholder","Fragment","addStakeholder","orderInGroup","handleAddStakeholder","hasSiblings","deleteStakeholder","handleDeleteStakeholder","onRenderFooterContent","React","marginRight","isOpen","isHiddenOnDismiss","headerText","onDismiss","isFooterAtBottom","ActivitiesMatrixForm","logicModelActivitiesMatrix","buidOutputsActivityList","activitiesMatrix","setActivitiesMatrix","textAlign","isRowHeader","codeRender","descriptionRender","helpPanelIsOpen","openHelpPanel","dismissHelpPanel","variant","level","html","textFieldProps","rows","resizable","defaultValue","fieldGroup","neutralTertiary","itemId","outputId","slice","activityId","addActivityToOutput","handleAddActivity","toNumber","deleteActivity","handleDeleteActivity","onRenderRow","customStyles","FontSizes","medium","themeLighterAlt","white","PerformanceMeasureForm","RisksForm","BudgetForm","ReportsForm","LogicTextFieldInput","nodeTree","handleAddChild","handleDelete","hanldeOpenOutputPanel","hanldeOpenOutcomePanel","handleOutcomeHelpPanel","handleOutputHelpPanel","node","rootStackItemProps","inputTextFieldProps","neutralQuaternary","borderTop","Icon","LogicTextFieldHeader","map","child","dispatch","useDispatch","selectWorkplaceConfig","tabsSchema","latestMenuTab","tooltipContent","canAdd","canDelete","length","isAnOputut","titleStyles","borderBottom","neutralLight","Text","TooltipHost","IconButton","formtabKey","findChildByName","renderPage","findChildByKey","render","setConfiguration","tab","page","handleRedirectToActivity","LogicModelForm","logicModelGraph","graph","setGraph","buildTree","treeToRender","setTreeToRender","outputPanelIsOpen","openOutputPanel","dismissOutputPanel","outcomePanelIsOpen","openOutcomePanel","dismissOutcomePanel","outcomeHelpPanelIsOpen","openOutcomeHelpPanel","dismissOutcomeHelpPanel","outputHelpPanelIsOpen","openOutputHelpPanel","dismissOutputHelpPanel","vertex","v","LogicmodelLabels","siblingId","addNode","deleteNode","PanelsRender","handleDismissPanel","DefaultButton","Panel","textStyles","TextMediumPlus","verticalAlign","maxHeight","Container","styled","div","PageContainer","spring","scrollHeight","Fixed","attrs","direction","Sticky","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","resources","en","English","es","Spanish","interpolation","escapeValue","fullscreenToggler","elem","document","documentElement","fullscreenElement","exitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","loadNamespaces","toggleHideDialog","iconOnly","overflowItems","LanguageSlice","createSlice","initialState","language","reducers","setLanguage","state","action","payload","changeLanguage","setEnglish","setSpanish","setGerman","selectLanguage","actions","LanguagePanel","lang","suportedLangs","undefined","onChange","event","themeWord","createTheme","themePrimary","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralQuaternaryAlt","neutralTertiaryAlt","neutralPrimaryAlt","neutralPrimary","neutralDark","themeExcel","themePowerPoint","themeTeams","colorCells","themeSlice","setTheme","loadTheme","setThemeWord","setThemeExcel","setThemePowerPoint","setThemeTeams","StyledCircle","Circle","circleprops","size","classnames","ThemePicker","handler","cursor","cell","SettingsPanel","nameTextFieldStyles","borderColor","Persona","PersonaSize","size40","initialsColor","PersonaInitialsColor","cyan","CustomBarButton","itemStyles","rootPressed","iconHovered","iconPressed","labelHovered","CommandBarButton","concatStyleSets","CustomOverflowButton","rootExpanded","rootExpandedHovered","menuIcon","overflowProps","menuProps","subComponentStyles","menuItem","CustomDialog","hideDialog","acceptOnClick","primaryButtonText","optionsTitle","optionSelected","setOptionSelected","dialogContentProps","type","DialogType","normal","subText","modalProps","isBlocking","dragOptions","moveMenuItemText","closeMenuItemText","menu","ContextualMenu","keepInBounds","Dialog","hidden","ChoiceGroup","ev","option","DialogFooter","ExportDialog","choiceGroupStyle","marginBottom","choiceFieldWrapper","paddingTop","iconStyle","CommandMenu","OpenLanguagePanel","OpenSettingsPanel","comandBarStyles","position","top","left","transform","languagePanelOpen","openLanguagePanel","dismissLanguagePanel","settingsPanelOpen","openSettingsPanel","dismissSettingsPanel","toggle","CommandBar","buttonAs","farItems","overflowButtonAs","overflowButtonProps","PivotBar","schema","setShowToolBar","tabs","pivotStyles","zIndex","link","small","linkIsSelected","Pivot","linkFormat","onLinkClick","itemkey","itemKey","setLatestMenuTab","tabKey","PivotItem","itemIcon","FacePileStyles","right","itemButton","faces","personaName","gray","gold","lightGreen","warmGray","blue","green","darkBlue","purple","orange","TeamPile","Facepile","personas","personaSize","size24","maxDisplayablePersonas","overflowButtonType","OverflowButtonType","descriptive","addButtonProps","href","ariaDescription","MainMenu","ToolBar","isFixed","handleClose","handleFix","transition","stackProps","stackPinProps","align","ref","wrapperRef","useRef","handleClickOutside","current","contains","target","addEventListener","removeEventListener","PagesTabs","parentKey","defaultKey","semibold","selectedKey","headersOnly","AddButton","Footer","selectedkey","bottom","separatorStyles","childtabs","parentkey","addtabs","vertical","WorkplaceLayout","configuration","tools","footertab","findByKey","fixToolBar","setFixToolBar","showToolBar","toolBarTransition","useTransition","from","x","y","opacity","enter","leave","pageSpring","useSpring","StaredProjects","cardTitleStyles","mediumPlus","paddingBottom","documentCardActions","yellowDark","DocumentCard","display","onClickHref","DocumentCardTitle","projectName","methodology","showAsSecondaryTitle","DocumentCardActivity","activity","people","profileImageSrc","initials","DocumentCardActions","views","HomePage","block","project","meth","FileMenu","setSelectedKey","handleClick","window","localStorage","setItem","storedSelectedOption","getItem","footer","paddingLeft","navStyles","boxSizing","overflowY","linkText","groupContent","nav","links","url","footer_nav","ActionButton","textContainer","Nav","MainLayout","pageStackStyles","GET_METHODOLOGIES","gql","MethodologyCard","DocumentCardImage","imageFit","ImageFit","cover","imageSrc","DocumentCardDetails","NewPage","NewProjects","useQuery","loading","error","methodologies","OpenPage","InfoPage","AboutPage","SharePage","PrintPage","ExportPage","Apollo","METHODOLOGIES","Main","to","lazy","Routes","path","WorkplaceSwitcher","MainSwitcher","ProjectSwitcher","FileSwitcher","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","HelpSlice","toggleHelp","setHelp","removeHelp","store","configureStore","reducer","theme","themeReducer","languageReducer","help","helpReducer","projectReducer","workplace","workplaceReducer","client","ApolloClient","uri","cache","InMemoryCache","getState","initializeIcons","ReactDOM","StrictMode","ApolloProvider","getElementById","ChangeNarrativeForm","LotForm","SpecificationsForm","TechnicalOfferForm","FinancialOfferForm","FormsTutorials","SectorsTutorials","GuidesTutorials","MethodologyTutorials","OutcomesTutorial","IndicatorsTutorial","ActivitiesData","BudgetsData","CategoriesData","CoinsData","CountriesData","DevelopmentGoalsData","IndicatorsData","LanguagesData","MethodologiesData","OffersData","OutcomesData","ProductsServicesData","ProgramsData","ProjectGoalsData","ProjectsData","SectorsData","SourcesData","StakeholdersData","AssumptionsData","UsersData","EvaluationForm","ApplicationForm","this","childkey","parenttab","tabFound","childTab","key1","key2","key3","key4","key5","key6","workplaceSlice","setTabSchema","ECanadianSector","EGermanSector","CategoryName","LogicmodelGraph","char","outputs","edges","e","findNode","padEnd","parentId","parentNode","newNode","generateId","findChildrenIds","generateSiblingId","order","getParentId","siblingsIds","sort","oldId","childNode","newInfo","substr","findAllDescendants","forEach","desc","n","charAt","oldDescId","a","b","nodeId","childrenIds","newId","getNodeLevel","split","c","num","concat","commonRoot","tree","buildTreeRec","childVertex","edge","LogicModelActivitiesMatrix","activities","sibling","newActivity","inmediatesIds","getInmediateTree","output","siblings","findActivitiesByOutput","categories","beneficiary","minMain","implementer","other","Stakeholders","list","getBeneficaries","getIntermediaries","getImplementors","getDonors","getOthers","sh","newSh","getStakeholdersByCategory","newMain","previousMain","translator","counts","Energy","leader","email","team","projectSlice","setCurrentProject"],"mappings":"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","file":"static/js/main.2ef7046d.chunk.js","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Stack,\n    TextField,\n    Dropdown\n} from \"@fluentui/react\";\n\nexport function StakehoderFormPanel() {\n    const { t } = useTranslation(\"stakeholders-form\");\n\n    return (\n        <Stack tokens={{ childrenGap: 16 }}>\n            <Stack.Item>\n                {t(\"panel-explanation\")}\n                <br /><br />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"stakeholder-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"country-label\")}\n                />\n            </Stack.Item>\n        </Stack>\n    )\n}\n\nexport function LogicModelOutputFormPanel() {\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\n\n    return (\n        <Stack tokens={{ childrenGap: 16 }}>\n            <Stack.Item>\n                {t(\"output-panel-explanation\")}\n                <br /><br />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-what-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-topic-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-verb-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"panel-to-whom-label\")}\n                />\n            </Stack.Item>\n        </Stack>\n    )\n}\n\nexport function LogicModelOutcomeFormPanel() {\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\n\n    return (\n        <Stack tokens={{ childrenGap: 16 }}>\n            <Stack.Item>\n                {t(\"outcome-panel-explanation\")}\n                <br /><br />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"panel-direction-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-what-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"panel-by-whom-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-where-label\")}\n                />\n            </Stack.Item>\n        </Stack>\n    )\n}\n","import React from 'react'\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nimport { IColumn, IGroup, DetailsList, SelectionMode } from '@fluentui/react'\n\nimport IContextualHelpContent from 'models/contextualhelp'\nimport { useTranslation } from 'react-i18next';\n\nexport default function ContextualHelpContent(content: IContextualHelpContent) {\n\n    // LOGIC\n    const { definition, example, format, guide, tips } = content;\n    const { t } = useTranslation(\"contextual-help\")\n\n    // Columns\n    const columns: IColumn[] = [\n        {\n            key: 'column1',\n            name: t('collapse-all'),\n            fieldName: 'collapse',\n            minWidth: 100,\n            data: 'string',\n            onRender: (item: string) => item,\n            isMultiline: true,\n        },\n    ]\n\n    // Base Items (without filter)\n    const base = [definition, example, format, guide, tips]\n\n    // Groups (filter those that have empty body)\n    const titles = [\"definition\", \"example\", \"format\", \"guide\", \"tips\"]\n        .filter((t, i) => base[i] !== \"\");\n    // Items (filter those that have empty body)        \n    const items = base.filter(t => t !== \"\");\n\n    let groups = [] as IGroup[];\n    let index = 0;\n\n    for (var title of titles) {\n        groups.push({\n            key: `category-${title}`, name: t(`${title}-label`), startIndex: index++, count: 1\n        })\n    }\n\n    return <Scrollbars autoHide autoHeight autoHeightMin={100} autoHeightMax=\"calc(100vh - 75px)\" >\n        <DetailsList\n            items={items}\n            columns={columns}\n            groups={groups}\n            // onRenderRow={onRenderRow}\n            selectionMode={SelectionMode.none}\n            isHeaderVisible={true}\n        />\n    </Scrollbars>\n}\n","import { Dropdown } from \"@fluentui/react\";\n\nconst DropdownFieldInput = ({ field, form, ...props }: any) => {\n  const handleGetError = (value: string) => {\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\n  };\n\n  return (\n    <Dropdown\n      {...field}\n      {...props}\n      onGetErrorMessage={handleGetError}\n      deferredValidationTime={500}\n    />\n  );\n};\n\nexport default DropdownFieldInput;\n","import { addMonths, DatePicker, IDatePickerStrings, IDatePickerStyles } from \"@fluentui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useConst } from \"@fluentui/react-hooks\";\n\nconst DateFieldInput = ({ field, form, ...props }: any) => {\n  const { t } = useTranslation([\n    \"months\",\n    \"shortMonths\",\n    \"days\",\n    \"shortDays\",\n    \"calendar\",\n    \"general-form\"\n  ]);\n\n  const DayPickerStrings: IDatePickerStrings = {\n    months: [\n      t(\"january\"),\n      t(\"february\"),\n      t(\"march\"),\n      t(\"april\"),\n      t(\"may\"),\n      t(\"june\"),\n      t(\"july\"),\n      t(\"august\"),\n      t(\"september\"),\n      t(\"october\"),\n      t(\"november\"),\n      t(\"december\"),\n    ],\n\n    shortMonths: [\n      t(\"shortmonths:jan\"),\n      t(\"shortmonths:feb\"),\n      t(\"shortmonths:mar\"),\n      t(\"shortmonths:apr\"),\n      t(\"shortmonths:may\"),\n      t(\"shortmonths:jun\"),\n      t(\"shortmonths:jul\"),\n      t(\"shortmonths:aug\"),\n      t(\"shortmonths:sep\"),\n      t(\"shortmonths:oct\"),\n      t(\"shortmonths:nov\"),\n      t(\"shortmonths:dec\"),\n    ],\n\n    days: [\n      t(\"days:sunday\"),\n      t(\"days:monday\"),\n      t(\"days:tuesday\"),\n      t(\"days:wednesday\"),\n      t(\"days:thursday\"),\n      t(\"days:friday\"),\n      t(\"days:saturday\"),\n    ],\n\n    shortDays: [\n      t(\"shortdays:sunday\"),\n      t(\"shortdays:monday\"),\n      t(\"shortdays:tuesday\"),\n      t(\"shortdays:wednesday\"),\n      t(\"shortdays:thursday\"),\n      t(\"shortdays:friday\"),\n      t(\"shortdays:saturday\"),\n    ],\n\n    goToToday: t(\"calendar:goToToday\"),\n    prevMonthAriaLabel: t(\"calendar:prevMonthAriaLabel\"),\n    nextMonthAriaLabel: t(\"calendar:nextMonthAriaLabel\"),\n    prevYearAriaLabel: t(\"calendar:prevYearAriaLabel\"),\n    nextYearAriaLabel: t(\"calendar:nextYearAriaLabel\"),\n    closeButtonAriaLabel: t(\"calendar:closeButtonAriaLabel\"),\n  };\n\n  const handleGetError = (value: string) => {\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\n  };\n\n  const minDate = useConst(addMonths(new Date(Date.now()), -1));\n\n\n  const datepickerStyles: Partial<IDatePickerStyles> = {\n    root: {\n      height: 60.4\n    }\n  }\n\n  return (\n    <DatePicker\n      placeholder={t(\"general-form:date-placeholder\")}\n      minDate={minDate}\n      onGetErrorMessage={handleGetError}\n      deferredValidationTime={500}\n      strings={DayPickerStrings}\n      styles={datepickerStyles}\n      {...field}\n      {...props}\n    />\n  );\n};\n\nexport default DateFieldInput;\n","import { FormikConsumer } from 'formik';\n\nconst Debug = () => (\n    <div\n        style={{\n            margin: '3rem 1rem',\n            borderRadius: 4,\n            background: '#f6f8fa',\n            boxShadow: '0 0 1px  #eee inset',\n        }}\n    >\n        <div\n            style={{\n                textTransform: 'uppercase',\n                fontSize: 11,\n                borderTopLeftRadius: 4,\n                borderTopRightRadius: 4,\n                fontWeight: 500,\n                padding: '.5rem',\n                background: '#555',\n                color: '#fff',\n                letterSpacing: '1px',\n            }}\n        >\n            Formik State\n        </div>\n        <FormikConsumer>\n            {({ validationSchema, validate, ...rest }) => (\n                <pre\n                    style={{\n                        fontSize: '.85rem',\n                        padding: '.25rem .5rem',\n                        overflowX: 'scroll',\n                    }}\n                >\n                    {JSON.stringify(rest, null, 2)}\n                </pre>\n            )}\n        </FormikConsumer>\n    </div>\n);\n\nexport default Debug;","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { useFormikContext, Formik, Field, Form, FormikValues } from 'formik';\nimport { ObjectSchema } from \"yup\";\nimport debounce from 'just-debounce-it';\n\nimport Debug from \"./debugformik\";\n\ntype AutoSaveProps = {\n    debounceMs?: number\n}\n\nconst AutoSave = ({ debounceMs = 3000 }: AutoSaveProps) => {\n    const formik = useFormikContext();\n    const [lastSaved, setLastSaved] = useState(\"\");\n    const debouncedSubmit = useCallback(\n        debounce(\n            () =>\n                formik.submitForm().then(() => setLastSaved(new Date().toISOString())),\n            debounceMs\n        ),\n        [debounceMs, formik.submitForm]\n    );\n\n    useEffect(() => {\n        debouncedSubmit();\n    }, [debouncedSubmit, formik.values]);\n\n    return (\n        <>\n            {!!formik.isSubmitting\n                ? 'saving...'\n                : lastSaved !== \"\"\n                    ? `Last Saved: ${lastSaved}`\n                    : null}\n        </>\n    );\n};\n\ntype setSubmittingFunctionType = {\n    setSubmitting: (isSubmitting: boolean) => void\n}\n\ntype AutoSaveFormikProps = {\n    initialValues: FormikValues\n    onSubmit: (values: FormikValues, { setSubmitting }: setSubmittingFunctionType) => any\n    validationSchema?: ObjectSchema<any>;\n}\n\nconst AutoSaveFormik: FunctionComponent<AutoSaveFormikProps> = (props) => {\n\n    const { initialValues, onSubmit, validationSchema, children } = props;\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={validationSchema}\n        >\n            <Form>\n                <h1>\n                    AutoSavingForm{' '}\n                    <small style={{ color: 'gray', fontSize: 11 }}>\n                        <AutoSave debounceMs={1000} />\n                    </small>\n                </h1>\n                {children}\n\n                <Debug />\n            </Form>\n        </Formik>\n    )\n}\n\nexport default AutoSaveFormik\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { string, object, number, setLocale } from \"yup\";\nimport { Grid, Col, Row } from \"fluentui-react-grid\";\nimport { Field, FormikValues } from \"formik\";\nimport {\n  Stack,\n  ITextFieldProps,\n  IDropdownOption,\n  IStackProps,\n  mergeStyleSets,\n  Separator,\n  PrimaryButton,\n  ISeparatorProps,\n  Label,\n} from \"@fluentui/react\";\n\nimport { selectProject } from \"store/slices/projectslice\";\nimport { ECanadianSector } from \"models/sector\";\nimport { IProjectInfo } from \"models/project\";\nimport DropdownFieldInput from \"components/inputs/dropdown\";\nimport TextFieldInput from \"components/inputs/text\";\nimport DateFieldInput from \"components/inputs/datepicker\";\nimport AutoSaveFormik from \"components/form/autosaveform\";\n\n\ntype formValuesType = FormikValues | {\n  shortName: string;\n  largeName: string;\n  description: string;\n  country: string;\n  impOrganization: string;\n  intOrganization: string;\n  budget: number;\n  budgetPerItems: number;\n  budgetPerAct: number;\n  budgetFinanced: number;\n  budgetSolicited: number;\n  program: string;\n  sector: ECanadianSector;\n  duration: number;\n  donor: string;\n  approvedBudget: number;\n  approvedDate: Date | string;\n  initialDate: Date | string;\n  finalDate: Date | string;\n  contribution: number;\n};\n\nexport default function GeneralForm() {\n  // STYLE\n  const classes = mergeStyleSets({\n    circle: {\n      height: 40,\n      width: 40,\n      borderRadius: \"50%\",\n      minWidth: 40,\n      fontSize: 16,\n    },\n  });\n\n  const multilineTextFieldProps: ITextFieldProps = {\n    required: true,\n    multiline: true,\n    autoAdjustHeight: true,\n    styles: {\n      root: {\n        width: \"100%\",\n        marginTop: 10,\n      },\n      field: {\n        height: 100,\n      },\n    },\n  };\n\n  const headerStackProps: IStackProps = {\n    tokens: { childrenGap: \"m\" },\n    horizontal: true,\n    horizontalAlign: \"space-between\",\n    styles: {\n      root: {\n        paddingRight: 40,\n      },\n    },\n  };\n\n  const separatorProps: ISeparatorProps = {\n    alignContent: \"start\",\n  };\n\n  // LOGIC\n  const { t } = useTranslation([\"general-form\", \"status\"]);\n  const project = useSelector(selectProject);\n  const generalInfo = project.info as IProjectInfo<ECanadianSector>;\n\n  const [initialDate, setInitialDate] = useState(generalInfo.initialDate as Date)\n  const [approvedDate, setApprovedDate] = useState(generalInfo.approvedDate as Date)\n\n  const handleSelectInitialDate = (date: Date) => {\n    setInitialDate(date);\n  }\n\n  const handleSelectApprovedDate = (date: Date) => {\n    setApprovedDate(date);\n  }\n\n  const initValues: formValuesType = {\n    shortName: generalInfo.shortname,\n    largeName: generalInfo.name,\n    description: generalInfo.description,\n    country: generalInfo.country,\n    impOrganization: generalInfo.organization,\n    intOrganization: generalInfo.intermediary,\n    budget: generalInfo.budget,\n    budgetPerItems: generalInfo.budgetItems,\n    budgetPerAct: generalInfo.budgetAct,\n    budgetFinanced: generalInfo.budgetFinanced,\n    budgetSolicited: generalInfo.solicitedBudget,\n    program: generalInfo.program,\n    sector: generalInfo.sector,\n    duration: generalInfo.duration,\n    donor: generalInfo.donor,\n    approvedBudget: generalInfo.approvedBudget,\n    approvedDate: generalInfo.approvedDate,\n    initialDate: generalInfo.initialDate,\n    finalDate: generalInfo.finalDate,\n    contribution: generalInfo.contribution\n  };\n\n  const validationSchema = object().shape({\n    shortName: string().max(20, t(\"shortname-error\")).required(t(\"required\")),\n    largeName: string()\n      .min(20, t(\"largename-error\"))\n      .max(100, t(\"largename-error\"))\n      .required(t(\"required\")),\n    description: string(),\n    country: string().required(t(\"required\")),\n    impOrganization: string().required(t(\"required\")),\n    intOrganization: string().required(t(\"required\")),\n    currency: string().required(t(\"required\")),\n    budget: number().required(t(\"required\")),\n    budgetPerItems: number().required(t(\"required\")),\n    budgetPerAct: number().required(t(\"required\")),\n    budgetFinanced: number().required(t(\"required\")),\n    budgetSolicited: number().required(t(\"required\")),\n    program: string().required(t(\"required\")),\n    sector: string().required(t(\"required\")),\n    duration: number().required(t(\"required\")),\n    donor: string().required(t(\"required\")),\n    approvedBudget: number().required(t(\"required\")),\n    approvedDate: string().required(t(\"required\")),\n    initialDate: string().required(t(\"required\")),\n    finalDate: string().required(t(\"required\")),\n  });\n\n  useEffect(() => {\n    setLocale({\n      // use constant translation keys for messages without values\n      mixed: {\n        default: \"field_invalid\",\n      },\n      // use functions to generate an error object that includes the value from the schema\n      string: {\n        default: \"asi mismo\",\n      },\n      number: {\n        default: \"asimismo\",\n      },\n    });\n  }, [validationSchema]);\n\n  const handleSubmit = (values: formValuesType, { setSubmitting }: any) => {\n    alert(values);\n  };\n\n  const countries: IDropdownOption[] = [\n    { key: \"1\", text: \"Cuba\" },\n    { key: \"2\", text: \"England\" },\n    { key: \"3\", text: \"United States\" },\n    { key: \"4\", text: \"España\" },\n    { key: \"5\", text: \"Canada\" },\n  ];\n\n  return (\n    <AutoSaveFormik\n      initialValues={initValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <>\n        <Grid dir=\"ltr\">\n          {/* Names */}\n          <Row>\n            <TextField\n              required\n              label={t(\"shortname-field\")}\n              name=\"shortName\"\n              component={TextFieldInput}\n              sizeLg={3}\n            />\n\n            <TextField\n              required\n              label={t(\"largename-field\")}\n              name=\"largeName\"\n              component={TextFieldInput}\n              sizeLg={9}\n            />\n          </Row>\n          {/* Description */}\n          <Row>\n            <TextField\n              label={t(\"description-field\")}\n              name=\"description\"\n              component={TextFieldInput}\n              {...multilineTextFieldProps}\n              sizeLg={12}\n\n            />\n          </Row>\n          <br />\n\n          <Row>\n            {/* 1. Project */}\n            <Col sizeSm={12} sizeMd={8} sizeLg={8}>\n              <Row>\n                <Separator {...separatorProps}>\n                  <PrimaryButton text=\"1\" className={classes.circle} />\n                </Separator>\n              </Row>\n\n              <Stack {...headerStackProps}>\n                <Stack.Item>\n                  <Label>{t(\"status-field\")}</Label>\n                  {t(`status:${generalInfo.status}`)}\n                </Stack.Item>\n                <Stack.Item>\n                  <Label>{t(\"wikicode-field\")}</Label>\n                  {generalInfo.wikicode}\n                </Stack.Item>\n              </Stack>\n              <br />\n\n              <Row>\n                <StandardField\n                  label={t(\"country-field\")}\n                  name=\"country\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"imporganization-field\")}\n                  name=\"impOrganization\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"intorganization-field\")}\n                  name=\"intOrganization\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n              </Row>\n\n              <Row>\n                <StandardField\n                  label={t(\"currency-field\")}\n                  name=\"currency\"\n                  component={DropdownFieldInput}\n                />\n                <StandardField\n                  label={t(\"program-field\")}\n                  name=\"program\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"sector-field\")}\n                  name=\"sector\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"duration-field\")}\n                  name=\"duration\"\n                  component={TextFieldInput}\n                  suffix={t(\"duration-suffix\")}\n                />\n              </Row>\n\n              <Row>\n\n                <StandardField\n                  label={t(\"budget-field\")}\n                  name=\"budget\"\n                  component={TextFieldInput}\n                  prefix={t(\"budget-prefix\")}\n                />\n                <StandardField\n                  label={t(\"calculated-field\")}\n                  name=\"budgetPerItems\"\n                  component={TextFieldInput}\n                  prefix={t(\"budgetitems-prefix\")}\n                  readOnly\n                />\n                <StandardField\n                  label={t(\"calculated-field\")}\n                  name=\"budgetPerAct\"\n                  component={TextFieldInput}\n                  prefix={t(\"budgetact-prefix\")}\n                  readOnly\n                />\n                <StandardField\n                  label={t(\"financed-field\")}\n                  name=\"budgetFinanced\"\n                  component={TextFieldInput}\n                />\n              </Row>\n\n\n            </Col>\n\n            {/* 2. Donor */}\n            <Col sizeSm={12} sizeMd={4} sizeLg={4}>\n              <Row>\n                <Separator {...separatorProps}>\n                  <PrimaryButton text=\"2\" className={classes.circle} />\n                </Separator>\n              </Row>\n\n              <Stack {...headerStackProps}>\n                <Stack.Item>\n                  <Label>{t(\"donorcode-field\")}</Label>\n                  {generalInfo.donorcode}\n                </Stack.Item>\n              </Stack>\n              <br />\n\n              <Row>\n                <StandardField\n                  label={t(\"donor-field\")}\n                  name=\"donor\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                  sizeLg={6}\n                />\n                <StandardField\n                  label={t(\"approvedate-field\")}\n                  name=\"approveDate\"\n                  component={DateFieldInput}\n                  onSelectDate={handleSelectApprovedDate}\n                  sizeLg={6}\n                />\n              </Row>\n\n              <Row>\n                <StandardField\n                  label={t(\"initialdate-field\")}\n                  name=\"initialDate\"\n                  component={DateFieldInput}\n                  minDate={approvedDate}\n                  onSelectDate={handleSelectInitialDate}\n                  sizeLg={6}\n                />\n                <StandardField\n                  label={t(\"finaldate-field\")}\n                  name=\"finalDate\"\n                  component={DateFieldInput}\n                  minDate={initialDate}\n                  sizeLg={6}\n                />\n              </Row>\n\n              <Row>\n                <StandardField\n                  label={t(\"approvebudget-field\")}\n                  name=\"approvedBudget\"\n                  component={TextFieldInput}\n                  options={countries}\n                  suffix={generalInfo.currency}\n                  sizeLg={6}\n                />\n                <StandardField\n                  label={t(\"contribution-field\")}\n                  name=\"contribution\"\n                  component={TextFieldInput}\n                  sizeLg={6}\n                />\n              </Row>\n            </Col>\n          </Row>\n        </Grid>\n      </>\n    </AutoSaveFormik>\n  );\n}\n\nconst StandardField = (props: any) => {\n  return (\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\n      <Field {...props} />\n    </Col>\n  );\n};\n\nconst TextField = ({ grow, ...props }: any) => {\n  return (\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\n      <Field {...props} />\n    </Col>\n  );\n};\n\nexport function generalFormViewMode() {\n  return <div>Form Basics</div>;\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  IColumn,\n  IconButton,\n  useTheme,\n  TooltipHost,\n  IButtonStyles,\n  FontWeights,\n  IDropdownOption,\n  IDropdownStyles,\n  Stack,\n  Panel,\n  PrimaryButton,\n  DefaultButton,\n  SelectionMode,\n  DetailsList,\n} from \"@fluentui/react\";\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport { selectProject } from \"store/slices/projectslice\";\nimport Stakeholders, { IStakholderInfo } from \"models/canadian/stakeholders\";\nimport { StakehoderFormPanel } from \"components/sidepanel/formcontents\"\n\nexport default function StakeholdersForm() {\n  // LOGIC\n\n  // State\n  const { t } = useTranslation(\"stakeholders-form\");\n\n  const project = useSelector(selectProject);\n  const currentForm = project.forms.find(form => form.name === \"stakeholders\")!;\n  const stakeholdersModel = currentForm.structure as Stakeholders;\n\n  const initialItems = stakeholdersModel.buidStakeholdersList();\n  let groups = stakeholdersModel.buildStakeholdersGroups(t)\n\n  const [items, setItems] = useState(initialItems);\n  const [stakeholders, setStakeholders] = useState(stakeholdersModel);\n\n  const [panelIsOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\n\n  const columns: IColumn[] = [\n    {\n      key: 'column1',\n      name: t('roll-field'),\n      fieldName: 'roll',\n      minWidth: 100,\n      maxWidth: 100,\n      data: 'string',\n      onRender: (item: IStakholderInfo) => mainStakeholderRender(item),\n    },\n    {\n      key: 'column2',\n      name: t('name-field'),\n      styles: { root: { fontSize: 40 } },\n      ariaLabel: 'Stakehoder',\n      fieldName: 'name',\n      minWidth: 500,\n      isResizable: true,\n      data: 'string',\n      isPadded: true,\n      onRender: (item: IStakholderInfo) => fieldRender(item)\n    },\n    {\n      key: 'column3',\n      name: 'Add/Remove',\n      fieldName: 'operators',\n      minWidth: 70,\n      data: 'string',\n      isPadded: true,\n      // isFiltered: true,\n      onRender: (item: IStakholderInfo) => operatorsRender(item),\n    },\n  ]\n\n  // Handlers\n  const handleAddStakeholder = (item: IStakholderInfo) => {\n    setStakeholders(stakeholders.addStakeholder(item.orderInGroup, item.category));\n    setItems(stakeholders.buidStakeholdersList());\n    groups = stakeholdersModel.buildStakeholdersGroups(t);\n  }\n\n  const handleDeleteStakeholder = (item: IStakholderInfo) => {\n    setStakeholders(stakeholders.deleteStakeholder(item.id));\n    setItems(stakeholders.buidStakeholdersList());\n    groups = stakeholdersModel.buildStakeholdersGroups(t);\n  }\n\n  const handleChangeMainStakeholder = (item: IStakholderInfo) => {\n    if (!item.category.hasNoMain) {\n      console.log(\"start\")\n      setStakeholders(stakeholders.setMainStakeholder(item.id));\n      console.log(\"end\")\n\n      setItems(stakeholders.buidStakeholdersList());\n      groups = stakeholdersModel.buildStakeholdersGroups(t);\n    }\n  }\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const fieldRender = (item: IStakholderInfo) => {\n    const options: IDropdownOption[] = [\n      { key: '0', text: '--None--' },\n      { key: '1', text: 'Stakeholder1' },\n      { key: '2', text: 'Stakeholder2' },\n      { key: '3', text: 'Stakeholder3' },\n      { key: '4', text: 'Stakeholder4' },\n      { key: '5', text: 'Stakeholder5' },\n      { key: '6', text: 'Stakeholder6' },\n      { key: '7', text: 'Stakeholder7' },\n      { key: '8', text: 'Stakeholder8' },\n      { key: '9', text: 'Stakeholder9' },\n    ];\n\n    const dropdownStyles: Partial<IDropdownStyles> = {\n      root: {\n        width: \"50%\",\n      },\n      dropdown: {\n        minWidth: 300,\n      },\n      title: {\n        borderRadius: \"0 0 2px 2px\",\n        border: `1px solid ${palette.neutralLighter}`,\n        selectors: {\n          \"::after\": {\n            border: `1px solid ${palette.red}`,\n          },\n        },\n      },\n    }\n\n    const commandStyles: Partial<IButtonStyles> = {\n      root: {\n        alignSelf: \"center\"\n      },\n      rootHovered: {\n        backgroundColor: palette.themeLighter,\n      },\n      icon: {\n        fontSize: 13,\n        color: palette.black,\n      },\n    };\n\n    return (\n      <Stack horizontal styles={{ root: { minWidth: 800 } }}>\n        <Dropdown\n          placeholder={t(\"select-stakeholder-placeholder\")}\n          defaultSelectedKey={item.id.toString()}\n          options={options}\n          styles={dropdownStyles}\n        />\n\n        <TooltipHost content={t(`tooltip-add-stakeholder-DB`)}>\n          <IconButton\n            iconProps={{ iconName: \"AddFriend\" }}\n            styles={commandStyles}\n            onClick={openPanel}\n          />\n        </TooltipHost>\n      </Stack>\n    )\n  }\n\n  const mainStakeholderRender = (item: IStakholderInfo) => {\n    const bossIconStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 15,\n        fontWeight: FontWeights.bold,\n        color: palette.black,\n      },\n    };\n\n    const iconStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 10,\n        color: palette.neutralSecondary,\n      },\n    };\n\n    return item.main ?\n      <TooltipHost content={t(`tooltip-main-stakeholder-${item.category.name}`)}>\n        <IconButton\n          iconProps={{ iconName: \"PartyLeader\" }}\n          styles={bossIconStyles}\n        />\n      </TooltipHost> :\n      <TooltipHost content={t(`tooltip-change-main-stakeholder-${item.category.name}`)}>\n        <IconButton\n          iconProps={{ iconName: \"Contact\" }}\n          styles={iconStyles}\n          onClick={() => handleChangeMainStakeholder(item)}\n        />\n      </TooltipHost>\n  }\n\n  const operatorsRender = (item: IStakholderInfo) => {\n    const commandStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 13,\n        color: palette.black,\n      },\n    };\n\n    return <React.Fragment>\n      <TooltipHost content={t(\"tooltip-add-stakeholder\")}>\n        <IconButton\n          iconProps={{ iconName: \"Add\" }}\n          styles={commandStyles}\n          onClick={() => handleAddStakeholder(item)}\n        />\n      </TooltipHost>\n      {item.hasSiblings &&\n        <TooltipHost content={t(\"tooltip-delete-stakeholder\")}>\n          <IconButton\n            iconProps={{ iconName: \"Cancel\" }}\n            styles={commandStyles}\n            onClick={() => handleDeleteStakeholder(item)}\n          />\n        </TooltipHost>\n      }\n    </React.Fragment>\n  }\n\n  const onRenderFooterContent = React.useCallback(\n    () => (\n      <div>\n        <PrimaryButton onClick={dismissPanel} styles={{ root: { marginRight: 8 } }}>\n          Save\n        </PrimaryButton>\n        <DefaultButton onClick={dismissPanel}>Cancel</DefaultButton>\n      </div>\n    ),\n    [dismissPanel],\n  );\n\n  return <React.Fragment>\n\n    <DetailsList\n      items={items}\n      columns={columns}\n      groups={groups}\n      selectionMode={SelectionMode.none}\n      isHeaderVisible={true}\n    />\n\n    <Panel\n      isOpen={panelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"panel-header\")}\n      onDismiss={dismissPanel}\n      isFooterAtBottom={true}\n      onRenderFooterContent={onRenderFooterContent}\n    >\n      <StakehoderFormPanel />\n    </Panel>\n\n  </React.Fragment>\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { toNumber } from 'lodash';\nimport {\n  FontSizes,\n  IconButton,\n  IColumn,\n  IDetailsListProps,\n  IDetailsRowStyles,\n  DetailsRow,\n  useTheme,\n  Text,\n  IButtonStyles,\n  ITextFieldProps,\n  TextField,\n  TooltipHost,\n  ITextStyles,\n  SelectionMode,\n  DetailsList,\n  Panel\n} from '@fluentui/react';\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport { selectProject } from 'store/slices/projectslice';\nimport ActivitiesMatrixGraph, { IActivityInfo } from 'models/canadian/actvitiesmatrix';\nimport ContextualHelpContent from \"components/help/contextualhelp\"\n\nexport default function ActivitiesMatrixForm() {\n\n  // LOGIC\n  // State\n  const project = useSelector(selectProject);\n  const currentForm = project.forms.find(form => form.name === \"logicModelActivities\")!;\n  const logicModelActivitiesMatrix = currentForm.structure as ActivitiesMatrixGraph;\n\n  const initialItems = logicModelActivitiesMatrix.buidOutputsActivityList();\n\n  const [items, setItems] = useState(initialItems);\n  const [activitiesMatrix, setActivitiesMatrix] = useState(logicModelActivitiesMatrix);\n\n  const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\n\n  const columns: IColumn[] = [\n    {\n      key: 'column1',\n      name: 'Field',\n      styles: { root: { textAlign: \"right\", fontSize: 40 } },\n      ariaLabel: 'Outcomes, Outputs and Activities',\n      fieldName: 'field',\n      minWidth: 10,\n      maxWidth: 200,\n      data: 'string',\n      onRender: (item: IActivityInfo) => fieldRender(item)\n    },\n    {\n      key: 'column2',\n      name: 'Code',\n      fieldName: 'code',\n      ariaLabel: \"Code\",\n      minWidth: 0,\n      maxWidth: 350,\n      isRowHeader: true,\n      data: 'number',\n      onRender: (item: IActivityInfo) => codeRender(item),\n    },\n    {\n      key: 'column3',\n      name: 'Description',\n      fieldName: 'description',\n      minWidth: 70,\n      data: 'string',\n      isResizable: true,\n      isPadded: true,\n      isMultiline: true,\n      // isFiltered: true,\n      onRender: (item: IActivityInfo) => descriptionRender(item),\n    },\n    {\n      key: 'column4',\n      name: '',\n      fieldName: 'operators',\n      minWidth: 100,\n      data: 'string',\n      isPadded: true,\n      onRender: (item: IActivityInfo) => operatorsRender(item),\n    },\n  ]\n\n  // Handlers\n  const handleAddActivity = (itemId: string) => {\n    const outputId = itemId.slice(0, 4);\n    const activityId = itemId[4];\n\n    setActivitiesMatrix(activitiesMatrix.addActivityToOutput(outputId, activityId));\n    setItems(activitiesMatrix.buidOutputsActivityList());\n  }\n\n  const handleDeleteActivity = (itemId: string) => {\n    const outputId = itemId.slice(0, 4);\n    const activityId = (toNumber(itemId[4]) + 1).toString();\n\n    setActivitiesMatrix(activitiesMatrix.deleteActivity(outputId, activityId));\n    setItems(activitiesMatrix.buidOutputsActivityList());\n  }\n\n  // Panels\n  const [helpPanelIsOpen, { setTrue: openHelpPanel, setFalse: dismissHelpPanel }] = useBoolean(false);\n\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const onRenderRow: IDetailsListProps['onRenderRow'] = props => {\n    const customStyles: Partial<IDetailsRowStyles> = {};\n\n    if (props) {\n      const { item } = props;\n      switch (item.level) {\n        case 0:\n          customStyles.root = {\n            backgroundColor: palette.themeLighter,\n            fontSize: FontSizes.medium,\n            \":hover\": {\n              backgroundColor: palette.themeLighter,\n            }\n          }\n          break;\n        case 1:\n          customStyles.root = {\n            backgroundColor: palette.themeLighterAlt,\n            \":hover\": {\n              backgroundColor: palette.themeLighterAlt,\n            }\n          }\n          break;\n        case 2:\n          customStyles.root = {\n            \":hover\": {\n              backgroundColor: palette.white,\n            }\n          }\n          break;\n      }\n\n      return <DetailsRow {...props} styles={customStyles} />;\n    }\n    return null;\n  };\n\n  const fieldRender = (item: IActivityInfo) => {\n    const textStyles: ITextStyles = {\n      root: {\n        fontWeight: 600\n      }\n    }\n    const variant = item.level === 0 ? \"mediumPlus\" : item.level === 1 ? \"medium\" : \"small\";\n\n    return (\n      <div style={{ textAlign: \"end\", color: \"black\" }}>\n        <Text variant={variant} styles={textStyles}>{t(item.name)}</Text>\n      </div>\n    )\n  }\n\n  const codeRender = (item: IActivityInfo) => {\n    return item.id\n  }\n\n  const descriptionRender = (item: IActivityInfo) => {\n\n    const textFieldProps: ITextFieldProps = {\n      rows: 1,\n      multiline: true,\n      resizable: false,\n      defaultValue: item.description,\n      styles: {\n        root: {\n          minWidth: 200,\n        },\n        fieldGroup: {\n          borderRadius: \"0 0 2px 2px\",\n          border: `1px solid ${palette.neutralLighter}`,\n          selectors: {\n            \":hover\": {\n              border: `1px solid ${palette.neutralTertiary}`,\n\n            },\n          },\n        },\n      },\n    }\n\n    let html;\n    switch (item.level) {\n      case 2:\n        html = <TextField {...textFieldProps}>\n          {item.description}\n        </TextField>\n        break;\n      default:\n        html = <span>{item.description}</span>\n        break;\n    }\n\n    return html\n  }\n\n  const operatorsRender = (item: IActivityInfo) => {\n    const commandStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 13,\n        color: palette.black,\n      },\n    };\n\n    return (item.level === 2 &&\n      <React.Fragment>\n        <TooltipHost content={t(\"contextual-help:tooltip-contextual-help\")}>\n          <IconButton\n            iconProps={{ iconName: \"Help\" }}\n            styles={commandStyles}\n            onClick={() => openHelpPanel()}\n          />\n        </TooltipHost>\n        <TooltipHost content={t(\"tooltip-add-act\")}>\n          <IconButton\n            iconProps={{ iconName: \"Add\" }}\n            styles={commandStyles}\n            onClick={() => handleAddActivity(item.id)}\n          />\n        </TooltipHost>\n        {item.hasSiblings &&\n          <TooltipHost content={t(\"tooltip-delete-act\")}>\n            <IconButton\n              iconProps={{ iconName: \"Cancel\" }}\n              styles={commandStyles}\n              onClick={() => handleDeleteActivity(item.id)}\n            />\n          </TooltipHost>\n        }\n      </React.Fragment>\n    )\n  }\n\n  return <React.Fragment>\n    <DetailsList\n      items={items}\n      columns={columns}\n      onRenderRow={onRenderRow}\n      selectionMode={SelectionMode.none}\n      isHeaderVisible={false}\n    />\n    <Panel\n      isOpen={helpPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"contextual-help:help-panel-header\")}\n      onDismiss={dismissHelpPanel}\n      isFooterAtBottom={true}\n    >\n      <ContextualHelpContent\n        definition=\"Def Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        example=\"\"\n        format=\"Cosi se me face le buc torbellini de sua me. \"\n        guide=\"Guide Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        tips=\"Tips Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\n    </Panel>\n  </React.Fragment>\n\n}\n\n\n\n\n","import React from \"react\";\n\nexport default function PerformanceMeasureForm() {\n  return <div>Performance Measure Form</div>;\n}\n","import React from \"react\";\n\nexport default function RisksForm() {\n  return <div>Risks Form</div>;\n}\n","import React from \"react\";\n\nexport default function BudgetForm() {\n  return <div>Budget Form</div>;\n}\n","import React from \"react\";\n\nexport default function ReportsForm() {\n  return <div>Reports Form</div>;\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Field } from \"formik\";\nimport {\n    Stack,\n    IStackItemProps,\n    IStackProps,\n    IButtonStyles,\n    Icon,\n    IIconProps,\n    ITextStyles,\n    Text,\n    TooltipHost,\n    IconButton,\n    useTheme,\n    ITextFieldProps,\n} from '@fluentui/react';\n\nimport { selectWorkplaceConfig, setConfiguration } from \"store/slices/workplaceslice\";\nimport { Tree } from \"models/tree\";\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\nimport TextFieldInput from \"components/inputs/text\";\n\ntype LogicTextFieldInputProps = {\n    nodeTree: Tree<LogicmodelVertex>,\n    handleAddChild: (id: string) => void,\n    handleDelete: (id: string) => void,\n    hanldeOpenOutputPanel: () => void,\n    hanldeOpenOutcomePanel: () => void,\n    handleOutcomeHelpPanel: () => void\n    handleOutputHelpPanel: () => void\n}\n\nexport default function LogicTextFieldInput(props: LogicTextFieldInputProps) {\n\n    // LOGIC\n    const {\n        nodeTree,\n        handleAddChild,\n        handleDelete,\n        hanldeOpenOutputPanel,\n        hanldeOpenOutcomePanel,\n        handleOutcomeHelpPanel,\n        handleOutputHelpPanel\n    } = props;\n    const { node, children } = nodeTree;\n\n    // STYLES\n    const { palette } = useTheme();\n\n    const rootStackItemProps: IStackItemProps = {\n        grow: 1,\n        styles: {\n            root: {\n                textAlign: \"center\",\n                marginTop: \"0px !important\"\n            },\n        },\n    };\n\n    const childrenStackProps: IStackProps = {\n        horizontal: true,\n        horizontalAlign: \"space-between\",\n        tokens: { childrenGap: 20 }\n    };\n\n    const inputTextFieldProps: ITextFieldProps = {\n        rows: 3,\n        multiline: true,\n        resizable: false,\n        styles: {\n            root: {\n                minWidth: 200,\n            },\n            fieldGroup: {\n                borderRadius: \"0 0 2px 2px\",\n                border: `1px solid ${palette.neutralQuaternary}`,\n                borderTop: `1px solid ${palette.neutralLighter}`,\n                selectors: {\n                    \":hover\": {\n                        border: `1px solid ${palette.neutralTertiary}`,\n                    },\n                },\n            },\n        },\n    };\n\n    const arrowProps: IIconProps = {\n        iconName: \"SortUp\",\n        ariaLabel: \"Belongs to\",\n        styles: {\n            root: {\n                margin: \"8px auto\",\n            },\n        },\n    };\n\n    return (\n        <React.Fragment>\n            <Stack.Item {...rootStackItemProps}>\n                {node.level > 0 && <Icon {...arrowProps} />}\n                <LogicTextFieldHeader\n                    nodeTree={nodeTree}\n                    handleAddChild={handleAddChild}\n                    handleDelete={handleDelete}\n                    hanldeOpenOutputPanel={hanldeOpenOutputPanel}\n                    hanldeOpenOutcomePanel={hanldeOpenOutcomePanel}\n                    handleOutcomeHelpPanel={handleOutcomeHelpPanel}\n                    handleOutputHelpPanel={handleOutputHelpPanel}\n                />\n                <Field\n                    name={`textFiled${node.id}`}\n                    component={TextFieldInput}\n                    {...inputTextFieldProps}\n                />\n            </Stack.Item>\n\n            <Stack.Item {...rootStackItemProps}>\n                <Stack {...childrenStackProps} >\n                    {children && children.map(child =>\n                        <Stack.Item key={child.node.id} grow>\n                            <LogicTextFieldInput\n                                nodeTree={child}\n                                handleAddChild={handleAddChild}\n                                handleDelete={handleDelete}\n                                hanldeOpenOutputPanel={hanldeOpenOutputPanel}\n                                hanldeOpenOutcomePanel={hanldeOpenOutcomePanel}\n                                handleOutcomeHelpPanel={handleOutcomeHelpPanel}\n                                handleOutputHelpPanel={handleOutputHelpPanel}\n                            />\n                        </Stack.Item>\n                    )}\n                </Stack>\n            </Stack.Item>\n        </React.Fragment>\n    )\n}\n\nfunction LogicTextFieldHeader(props: LogicTextFieldInputProps) {\n\n    // LOGIC\n    const { nodeTree,\n        handleAddChild,\n        handleDelete,\n        hanldeOpenOutputPanel,\n        hanldeOpenOutcomePanel,\n        handleOutcomeHelpPanel,\n        handleOutputHelpPanel } = props;\n    const { node, children } = nodeTree;\n\n    const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\n    const dispatch = useDispatch();\n    const { tabsSchema, latestMenuTab } = useSelector(selectWorkplaceConfig);\n\n    // tooltips and buttons\n    const tooltipContent = node.level === 0 ?\n        \"tooltip-add-inmediate-outcome\" : node.level === 1 ?\n            \"tooltip-add-intermediate-outcome\" : \"tooltip-add-output\";\n\n    const canAdd = node.level !== 3;\n    const canDelete = children.length === 0;\n    const isAnOputut = node.level === 3;\n\n    const handleRedirectToActivity = (id: string) => {\n        const formtabKey = tabsSchema.findChildByName(\"activitiesmatrix\").key;\n        const renderPage = tabsSchema.findChildByKey(latestMenuTab, formtabKey).render;\n        dispatch(setConfiguration({ key: latestMenuTab, tab: formtabKey, page: renderPage }));\n    }\n\n    // STYLES\n    const { palette } = useTheme();\n\n    const titleStyles: ITextStyles = {\n        root: {\n            padding: 4,\n            textAlign: \"left\",\n            border: `1px solid ${palette.neutralQuaternary}`,\n            borderBottom: \"none\",\n            borderRadius: \"2px 2px 0 0\",\n            backgroundColor: palette.neutralLighter,\n        },\n    };\n\n    const commandStyles: Partial<IButtonStyles> = {\n        root: {\n            height: 25,\n        },\n        rootHovered: {\n            backgroundColor: palette.neutralLight,\n        },\n        icon: {\n            fontSize: 13,\n            color: palette.black,\n        },\n    };\n\n    return <Stack\n        horizontal\n        styles={titleStyles}\n        horizontalAlign=\"space-between\"\n    >\n        <Stack.Item>\n            <Text variant=\"medium\">{node.id}</Text>\n        </Stack.Item>\n        <Stack.Item>\n\n            {isAnOputut ?\n                <>\n                    <TooltipHost content={t(\"tooltip-see-activities\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"SnapToGrid\" }}\n                            styles={commandStyles}\n                            onClick={() => handleRedirectToActivity(node.id)}\n                        />\n                    </TooltipHost>\n                    <TooltipHost content={t(\"tooltip-sintactic-struct\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"ShowResults\" }}\n                            styles={commandStyles}\n                            onClick={() => hanldeOpenOutputPanel()}\n                        />\n                    </TooltipHost>\n                    <TooltipHost content={t(\"tooltip-contextual-help\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"Help\" }}\n                            styles={commandStyles}\n                            onClick={() => handleOutputHelpPanel()}\n                        />\n                    </TooltipHost>\n                </> : <>\n                    <TooltipHost content={t(\"tooltip-sintactic-struct\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"ShowResults\" }}\n                            styles={commandStyles}\n                            onClick={() => hanldeOpenOutcomePanel()}\n                        />\n                    </TooltipHost>\n                    <TooltipHost content={t(\"contextual-help:tooltip-contextual-help\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"Help\" }}\n                            styles={commandStyles}\n                            onClick={() => handleOutcomeHelpPanel()}\n                        />\n                    </TooltipHost></>\n            }\n            {canAdd &&\n                <TooltipHost content={t(tooltipContent)}>\n                    <IconButton\n                        iconProps={{ iconName: \"Add\" }}\n                        styles={commandStyles}\n                        onClick={() => handleAddChild(node.id)}\n                    />\n                </TooltipHost>\n            }\n            {canDelete &&\n                <TooltipHost content={t(\"tooltip-delete\")}>\n                    <IconButton\n                        iconProps={{ iconName: \"Cancel\" }}\n                        styles={commandStyles}\n                        onClick={() => handleDelete(node.id)}\n                    />\n                </TooltipHost>\n            }\n        </Stack.Item>\n    </Stack>\n}\n\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { string, object } from \"yup\";\nimport { ObjectShape } from \"yup/lib/object\";\nimport { Formik, Form } from \"formik\";\nimport {\n  Stack,\n  Text,\n  IStackProps,\n  ITextStyles,\n  PrimaryButton,\n  DefaultButton,\n  Panel,\n  TooltipHost,\n} from \"@fluentui/react\";\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport LogicTextFieldInput from \"components/inputs/logictext\";\nimport LogicmodelGraph from \"models/canadian/logicmodel\";\nimport { selectProject } from \"store/slices/projectslice\";\nimport { LogicModelOutcomeFormPanel, LogicModelOutputFormPanel } from \"components/sidepanel/formcontents\"\nimport ContextualHelpContent from \"components/help/contextualhelp\"\n\ntype formValuesType = {\n  [key: string]: string;\n}\n\nexport default function LogicModelForm() {\n\n  // LOGIC\n  const project = useSelector(selectProject);\n  const currentForm = project.forms.find(form => form.name === \"logicModelActivities\")!;\n  const logicModelGraph = currentForm.structure as LogicmodelGraph;\n\n  const [graph, setGraph] = useState(logicModelGraph)\n  const [treeToRender, setTreeToRender] = useState(graph.buildTree())\n\n  const handleAddNode = (siblingId: string) => {\n    setGraph(graph.addNode(siblingId));\n    setTreeToRender(graph.buildTree());\n  }\n\n  const handleDeleteNode = (id: string) => {\n    setGraph(graph.deleteNode(id));\n    setTreeToRender(graph.buildTree());\n  }\n\n  // Panels\n  const [outputPanelIsOpen, { setTrue: openOutputPanel, setFalse: dismissOutputPanel }] = useBoolean(false);\n  const [outcomePanelIsOpen, { setTrue: openOutcomePanel, setFalse: dismissOutcomePanel }] = useBoolean(false);\n  const [outcomeHelpPanelIsOpen, { setTrue: openOutcomeHelpPanel, setFalse: dismissOutcomeHelpPanel }] = useBoolean(false);\n  const [outputHelpPanelIsOpen, { setTrue: openOutputHelpPanel, setFalse: dismissOutputHelpPanel }] = useBoolean(false);\n\n  // FORMIK\n  var initialValues: formValuesType = { \"verionMode\": \"\" }; // Take init value from DB\n  for (let v of graph.vertex) {\n    initialValues[`textFiled${v.id}`] = v.text;\n  }\n\n  var shape: ObjectShape = { \"verionMode\": string() };\n  for (let v of graph.vertex) {\n    shape[`textFiled${v.id}`] = string();\n  }\n\n  const validationSchema = object().shape(shape);\n\n  return <React.Fragment>\n    <Formik\n      initialValues={initialValues!}\n      validationSchema={validationSchema}\n      onSubmit={(values) => alert(values)}\n    >\n      <Form>\n        <Stack horizontal tokens={{ childrenGap: 20 }}>\n          {/* Labels */}\n          <Stack.Item>\n            <LogicmodelLabels />\n          </Stack.Item>\n\n          {/* Inputs */}\n          <Stack.Item style={{ width: \"100%\" }}>\n            <Stack tokens={{ childrenGap: 10 }} >\n              <LogicTextFieldInput\n                nodeTree={treeToRender}\n                handleAddChild={handleAddNode}\n                handleDelete={handleDeleteNode}\n                hanldeOpenOutputPanel={openOutputPanel}\n                hanldeOpenOutcomePanel={openOutcomePanel}\n                handleOutcomeHelpPanel={openOutcomeHelpPanel}\n                handleOutputHelpPanel={openOutputHelpPanel}\n              />\n            </Stack>\n          </Stack.Item>\n        </Stack>\n      </Form>\n    </Formik>\n\n    <PanelsRender\n      outcomePanelIsOpen={outcomePanelIsOpen}\n      dismissOutcomePanel={dismissOutcomePanel}\n      outputPanelIsOpen={outputPanelIsOpen}\n      dismissOutputPanel={dismissOutputPanel}\n      outcomeHelpPanelIsOpen={outcomeHelpPanelIsOpen}\n      dismissOutcomeHelpPanel={dismissOutcomeHelpPanel}\n      outputHelpPanelIsOpen={outputHelpPanelIsOpen}\n      dismissOutputHelpPanel={dismissOutputHelpPanel}\n    />\n  </React.Fragment>\n}\n\ntype PanelsRenderPros = {\n  outcomePanelIsOpen: boolean,\n  dismissOutcomePanel: () => void,\n  outputPanelIsOpen: boolean,\n  dismissOutputPanel: () => void,\n  outcomeHelpPanelIsOpen: boolean,\n  dismissOutcomeHelpPanel: () => void,\n  outputHelpPanelIsOpen: boolean,\n  dismissOutputHelpPanel: () => void,\n}\n\nfunction PanelsRender(props: PanelsRenderPros) {\n\n  // LOGIC\n  const { outcomePanelIsOpen,\n    dismissOutcomePanel,\n    outputPanelIsOpen,\n    dismissOutputPanel,\n    outcomeHelpPanelIsOpen,\n    dismissOutcomeHelpPanel,\n    outputHelpPanelIsOpen,\n    dismissOutputHelpPanel,\n  } = props;\n  const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\n\n\n  const handleDismissPanel = () => {\n    dismissOutputPanel();\n    dismissOutcomePanel();\n  }\n\n  // RENDER\n  const onRenderFooterContent = React.useCallback(\n    () => (\n      <div>\n        <TooltipHost content={t(\"tooltip-panel-concat\")}>\n          <PrimaryButton onClick={handleDismissPanel} styles={{ root: { marginRight: 8 } }}>\n            {t(\"concat-button-label\")}\n          </PrimaryButton>\n        </TooltipHost>\n        <TooltipHost content={t(\"tooltip-panel-save\")}>\n          <DefaultButton onClick={handleDismissPanel} styles={{ root: { marginRight: 8 } }}>\n            {t(\"sidepanel:save\")}\n          </DefaultButton>\n        </TooltipHost>\n      </div>\n    ),\n    [handleDismissPanel],\n  );\n\n  return <React.Fragment>\n    {/* Outcome Panel */}\n    <Panel\n      isOpen={outcomePanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"outcome-panel-header\")}\n      onDismiss={dismissOutcomePanel}\n      isFooterAtBottom={true}\n      onRenderFooterContent={onRenderFooterContent}\n    >\n      <LogicModelOutcomeFormPanel />\n    </Panel>\n\n    {/* Output Panel */}\n    <Panel\n      isOpen={outputPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"output-panel-header\")}\n      onDismiss={dismissOutputPanel}\n      isFooterAtBottom={true}\n      onRenderFooterContent={onRenderFooterContent}\n    >\n      <LogicModelOutputFormPanel />\n    </Panel>\n\n    {/* Outcome Help Panel */}\n    <Panel\n      isOpen={outcomeHelpPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"contextual-help:help-panel-header\")}\n      onDismiss={dismissOutcomeHelpPanel}\n      isFooterAtBottom={true}\n    >\n      <ContextualHelpContent\n        definition=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        example=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        format=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        guide=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        tips=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\n    </Panel>\n\n    {/* Output Help Panel */}\n    <Panel\n      isOpen={outputHelpPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"contextual-help:help-panel-header\")}\n      onDismiss={dismissOutputHelpPanel}\n      isFooterAtBottom={true}\n    >\n      <ContextualHelpContent\n        definition=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        example=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        format=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        guide=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        tips=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\n    </Panel>\n  </React.Fragment >\n}\n\nfunction LogicmodelLabels() {\n\n  // LOGIC\n  const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\n\n  // STYLES\n  const labelStackProps: IStackProps = {\n    verticalAlign: \"space-between\",\n    styles: {\n      root: {\n        width: 120,\n        height: \"100%\",\n        maxHeight: 530,\n        padding: \"20px 0 30px 0\",\n      },\n    },\n  };\n\n  const textStyles: ITextStyles = {\n    root: {\n      fontWeight: 600\n    }\n  }\n\n  const TextMediumPlus = (props: { label: string }) => {\n    return <Stack.Item>\n      <Text variant=\"mediumPlus\" styles={textStyles}>\n        {t(props.label)}\n      </Text>\n    </Stack.Item>\n  }\n\n  return <Stack {...labelStackProps}>\n    <TextMediumPlus label=\"ultimate-outcomes\" />\n    <TextMediumPlus label=\"intermediate-outcomes\" />\n    <TextMediumPlus label=\"intermediate-outcomes\" />\n    <TextMediumPlus label=\"outputs\" />\n  </Stack>\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { animated } from \"react-spring\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nconst Container = styled.div`\n  padding: 20px 5% 50px 5%;\n`;\n\ntype PagecontainerProps = {\n  className?: string;\n  spring: any;\n  scrollHeight: string | number | undefined;\n}\nconst PageContainer: React.FunctionComponent<PagecontainerProps> = (props) => {\n\n  const { className, spring, scrollHeight, children } = props;\n\n  return <animated.div style={spring}>\n    <Scrollbars autoHide autoHeight autoHeightMin={100} autoHeightMax={scrollHeight} >\n      <Container className={className} >\n        {children}\n      </Container>\n    </Scrollbars>\n  </animated.div>\n};\n\nexport default PageContainer\n\n\n\n\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst Fixed = styled.div.attrs(props => ({ direction: \"top\" || \"bottom\" }))`\n  position: fixed;\n  width: 100%;\n  z-index: 10;\n  ${props => props.direction === \"top\" ? \"top : 0\" : \"bottom : 0\"} \n`;\n\ntype StickyProps = {\n    direction: \"top\" | \"bottom\";\n}\n\nexport const Sticky: React.FunctionComponent<StickyProps> = (props) => {\n    return (\n        <Fixed direction={props.direction}>{props.children}</Fixed>\n    )\n}","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// import Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport English from \"languages/locales/en.json\";\nimport Spanish from \"languages/locales/es.json\";\n\ni18n\n  // .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    keySeparator: false,\n    // debug: true,\n    resources: {\n      en: English,\n      es: Spanish,\n    },\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","export function fullscreenToggler() {\n  var elem = document.documentElement;\n\n  if (document.fullscreenElement) {\n    document.exitFullscreen();\n  } else {\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    }\n  }\n}\n","import i18n from \"i18n\"\nimport {\n  ICommandBarItemProps,\n} from \"@fluentui/react\";\n\nimport { fullscreenToggler } from \"components/fullscreentoggler\";\n\ni18n.loadNamespaces(\"commands\");\n\nexport const items = (toggleHideDialog: Function) => {\n  return [\n    {\n      key: \"goback\",\n      iconProps: { iconName: \"Undo\" },\n      text: i18n.t('commands:undo'),\n      iconOnly: true,\n    },\n    {\n      key: \"goforward\",\n      iconProps: { iconName: \"Redo\" },\n      text: i18n.t('commands:redo'),\n      iconOnly: true,\n    },\n    {\n      key: \"share\",\n      iconProps: { iconName: \"Share\" },\n      text: i18n.t('commands:share'),\n      iconOnly: true,\n      onClick: () => alert(\"Share\"),\n    },\n    {\n      key: \"export\",\n      iconProps: { iconName: \"Export\" },\n      text: i18n.t('commands:export'),\n      iconOnly: true,\n      onClick: toggleHideDialog,\n    },\n  ] as ICommandBarItemProps[]\n}\n\nexport const overflowItems: ICommandBarItemProps[] = [\n  {\n    key: \"new\",\n    text: i18n.t(\"commands:newproject\"),\n    iconProps: { iconName: \"Document\" },\n    onClick: () => alert(\"Move to\"),\n  },\n  {\n    key: \"open\",\n    text: i18n.t(\"commands:openproject\"),\n    iconProps: { iconName: \"OpenFolderHorizontal\" },\n    onClick: () => alert(\"Open Project\"),\n  },\n  {\n    key: \"Destroy\",\n    text: i18n.t(\"commands:destroyproject\"),\n    iconProps: { iconName: \"PageRemove\" },\n    onClick: () => alert(\"Destroy project\"),\n  },\n  {\n    key: \"Duplicate\",\n    text: i18n.t(\"commands:duplicate\"),\n    iconProps: { iconName: \"Documentation\" },\n    onClick: () => alert(\"Duplicate project\"),\n  },\n  {\n    key: \"Print\",\n    text: i18n.t(\"commands:print\"),\n    iconProps: { iconName: \"Print\" },\n    onClick: () => alert(\"Print project\"),\n  },\n];\n\nexport const faritems = (OpenLanguagePanel: Function, OpenSettingsPanel: Function) => {\n  return [\n    {\n      key: \"fullscreen\",\n      text: i18n.t(\"commands:fullscreen\"),\n      ariaLabel: \"Full Screen\",\n      iconOnly: true,\n      iconProps: { iconName: \"FullScreen\" },\n      onClick: fullscreenToggler,\n    },\n    {\n      key: \"language\",\n      text: i18n.t(\"commands:language\"),\n      ariaLabel: \"Language\",\n      iconOnly: true,\n      iconProps: { iconName: \"LocaleLanguage\" },\n      onClick: OpenLanguagePanel,\n    },\n    {\n      key: \"settings\",\n      text: i18n.t(\"commands:settings\"),\n      ariaLabel: \"Change Settings\",\n      iconOnly: true,\n      iconProps: { iconName: \"Settings\" },\n      onClick: OpenSettingsPanel,\n    },\n    {\n      key: \"notifications\",\n      text: i18n.t(\"commands:notifications\"),\n      ariaLabel: \"Change Notifications\",\n      iconOnly: true,\n      iconProps: { iconName: \"Ringer\" },\n      onClick: () => alert(\"Notificactions\"),\n    },\n    {\n      key: \"user\",\n      text: \"Gabriela Rodríguez\",\n      ariaLabel: \"User name\",\n      iconOnly: true,\n      iconProps: { iconName: \"Contact\" },\n      onClick: () => alert(\"Contact\"),\n    },\n  ] as ICommandBarItemProps[];\n}\n\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport IState from \"models/state\";\nimport i18n from \"i18n\";\n\nconst LanguageSlice = createSlice({\n  name: \"language\",\n  initialState: i18n.language,\n  reducers: {\n    setLanguage: (state: string, action: PayloadAction<string>) => {\n      const { payload } = action;\n      i18n.changeLanguage(payload);\n      return state = payload;\n    },\n    setEnglish: (state: string) => {\n      state = \"en\";\n      i18n.changeLanguage(state);\n    },\n    setSpanish: (state: string) => {\n      state = \"es\";\n      i18n.changeLanguage(state);\n    },\n    setGerman: (state: string) => {\n      state = \"de\";\n      i18n.changeLanguage(state);\n    },\n  },\n});\n\nexport const selectLanguage = (state: IState) => state.language;\nexport const { setLanguage, setEnglish, setSpanish } = LanguageSlice.actions;\n\nexport default LanguageSlice.reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  IDropdownOption,\n  IStackProps,\n  Stack,\n} from \"@fluentui/react\";\n\nimport { setLanguage, selectLanguage } from \"store/slices/languageslice\";\n\nexport default function LanguagePanel() {\n  const { t } = useTranslation([\"sidepanel\", \"languages\"]);\n  const lang = useSelector(selectLanguage);\n\n  const dispatch = useDispatch();\n\n  const handleDataOnChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption<any>\n  ) => {\n    if (item) dispatch(setLanguage(item.key.toString()));\n  };\n\n  const stackProps: IStackProps = {\n    tokens: {\n      childrenGap: 15\n    },\n    styles: {\n      root: {\n        marginTop: 40\n      }\n    }\n  }\n\n  const suportedLangs = [\n    { key: \"en\", text: t(\"languages:en\") },\n    { key: \"es\", text: t(\"languages:es\") },\n    { key: \"de\", text: t(\"languages:de\") },\n  ];\n\n  return (\n    <Stack {...stackProps}>\n      <Stack.Item>\n        <Dropdown\n          label={t(\"language-ui\")}\n          defaultSelectedKey={lang ? lang : undefined}\n          placeholder={t(\"language-select\")}\n          options={suportedLangs}\n          onChange={handleDataOnChange}\n        />\n      </Stack.Item>\n      <Stack.Item>\n        <Dropdown\n          label={t(\"language-data\")}\n          placeholder={t(\"language-select\")}\n          options={suportedLangs}\n          onChange={() => { }}\n        />\n      </Stack.Item>\n    </Stack>\n  );\n}\n","import { createTheme, IColorCellProps } from \"@fluentui/react\";\n\nexport const themeWord = createTheme({\n  palette: {\n    themePrimary: \"#2b579a\",\n    themeLighterAlt: \"#f4f7fb\",\n    themeLighter: \"#d3deef\",\n    themeLight: \"#b0c3e0\",\n    themeTertiary: \"#6e90c2\",\n    themeSecondary: \"#3d66a5\",\n    themeDarkAlt: \"#274e8a\",\n    themeDark: \"#214274\",\n    themeDarker: \"#183156\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themeExcel = createTheme({\n  palette: {\n    themePrimary: \"#217346\",\n    themeLighterAlt: \"#f2f9f5\",\n    themeLighter: \"#cee9da\",\n    themeLight: \"#a8d5bc\",\n    themeTertiary: \"#62ab83\",\n    themeSecondary: \"#318456\",\n    themeDarkAlt: \"#1e673f\",\n    themeDark: \"#195735\",\n    themeDarker: \"#134027\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themePowerPoint = createTheme({\n  palette: {\n    themePrimary: \"#b7472a\",\n    themeLighterAlt: \"#fcf6f4\",\n    themeLighter: \"#f4dcd6\",\n    themeLight: \"#eabeb4\",\n    themeTertiary: \"#d48672\",\n    themeSecondary: \"#c0583e\",\n    themeDarkAlt: \"#a53f26\",\n    themeDark: \"#8c3620\",\n    themeDarker: \"#672718\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themeTeams = createTheme({\n  palette: {\n    themePrimary: \"#6264a7\",\n    themeLighterAlt: \"#f7f7fb\",\n    themeLighter: \"#e1e1f1\",\n    themeLight: \"#c8c9e4\",\n    themeTertiary: \"#989ac9\",\n    themeSecondary: \"#7173b0\",\n    themeDarkAlt: \"#585a95\",\n    themeDark: \"#4a4c7e\",\n    themeDarker: \"#37385d\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport default themeWord;\n\nexport const colorCells: IColorCellProps[] = [\n  { id: \"1\", label: \"word\", color: \"#2b579a\" },\n  { id: \"2\", label: \"excel\", color: \"#217346\" },\n  { id: \"3\", label: \"powerpoint\", color: \"#a92b1a\" },\n  { id: \"4\", label: \"teams\", color: \"#6264a7\" },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { IPartialTheme, ITheme, loadTheme } from \"@fluentui/react\";\nimport {\n  themeExcel,\n  themeWord,\n  themePowerPoint,\n  themeTeams,\n} from \"themes/office\";\nimport IState from \"models/state\";\n\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState: themeWord,\n  reducers: {\n    setTheme: (state: ITheme, action: PayloadAction<string>) => {\n      const { payload } = action;\n\n      switch (payload) {\n        case \"word\":\n          state = themeWord;\n          break;\n        case \"excel\":\n          state = themeExcel;\n          break;\n        case \"powerpoint\":\n          state = themePowerPoint;\n          break;\n        case \"teams\":\n          state = themeTeams;\n          break;\n      }\n      loadTheme(state as IPartialTheme);\n    },\n    setThemeWord: (state: ITheme) => {\n      state = themeWord;\n      loadTheme(themeWord);\n    },\n    setThemeExcel: (state: ITheme) => {\n      state = themeExcel;\n      loadTheme(themeExcel);\n    },\n    setThemePowerPoint: (state: ITheme) => {\n      state = themePowerPoint;\n      loadTheme(themePowerPoint);\n    },\n    setThemeTeams: (state: ITheme) => {\n      state = themeTeams;\n      loadTheme(themeTeams);\n    },\n  },\n});\n\nexport const selectCurrentTheme = (state: IState) => state.theme;\nexport const {\n  setTheme,\n  setThemeExcel,\n  setThemePowerPoint,\n  setThemeTeams,\n  setThemeWord,\n} = themeSlice.actions;\n\nexport default themeSlice.reducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\nimport { mergeStyleSets } from \"@fluentui/react\";\n\ninterface CircleProps {\n  ariaLabel?: string;\n  size: string;\n  color: string;\n  border: string;\n  className?: string;\n  onClick?: () => void;\n}\n\nconst StyledCircle = styled.div`\n  border-radius: 50%;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n`;\n\nexport function Circle(props: CircleProps) {\n  const classes = mergeStyleSets({\n    circleprops: {\n      height: props.size,\n      width: props.size,\n      backgroundColor: props.color,\n      border: \"4px solid \" + props.border,\n    },\n  });\n\n  return (\n    <StyledCircle\n      onClick={props.onClick}\n      className={classnames(props.className, classes.circleprops)}\n    />\n  );\n}\n","import React from \"react\";\nimport { IColorCellProps, mergeStyleSets, useTheme } from \"@fluentui/react\";\nimport { Circle } from \"components/styled/shapes\";\n\ntype SwatchThemePickerProps = {\n  colorCells: IColorCellProps[];\n  size: string;\n  handler: (id: string) => void;\n};\n\nexport default function ThemePicker(props: SwatchThemePickerProps) {\n  const { colorCells, handler, size } = props;\n\n  // STYLES\n  const { palette } = useTheme();\n  const classes = mergeStyleSets({\n    circle: {\n      \":hover\": {\n        cursor: \"pointer\",\n        border: \"solid 4px \" + palette.neutralLighter,\n      },\n    },\n  });\n\n  return (\n    <React.Fragment>\n      {colorCells.map((cell) => {\n        return (\n          <div key={cell.id}>\n            <Circle\n              ariaLabel={cell.label}\n              size={size}\n              color={cell.color}\n              border={palette.neutralQuaternaryAlt}\n              onClick={() => handler(cell.label || \"\")}\n              className={classes.circle}\n            />\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  ISeparatorProps,\n  IStackProps,\n  ITextFieldStyles,\n  Label,\n  Persona,\n  PersonaInitialsColor,\n  PersonaSize,\n  Separator,\n  Stack,\n  Text,\n  TextField,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { setTheme } from \"store/slices/themeslice\";\nimport ThemePicker from \"components/pickers/themepicker\";\nimport { colorCells } from \"themes/office\";\n\nexport default function SettingsPanel() {\n  // STYLES\n  const { palette } = useTheme();\n\n  // Stack Props\n  const stackProps: IStackProps = {\n    tokens: {\n      childrenGap: 15\n    },\n    styles: {\n      root: {\n        marginTop: 40\n      }\n    }\n  }\n\n  // TextField Styles\n  const nameTextFieldStyles: Partial<ITextFieldStyles> = {\n    fieldGroup: {\n      borderColor: palette.neutralTertiary,\n      \":hover\": {\n        borderColor: palette.neutralSecondary,\n      },\n    },\n  };\n\n  // Horizontal Separators\n  const separatorProps: ISeparatorProps = {\n    alignContent: \"end\",\n    styles: {\n      root: {\n        \"::before\": {\n          background: palette.neutralTertiaryAlt,\n          height: 0.4,\n        },\n      },\n    },\n  };\n\n  // LOGIC\n  const { t } = useTranslation([\"sidepanel\"]);\n  const dispatch = useDispatch();\n\n  return (\n    <Stack {...stackProps}>\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>{t(\"user\")}</b>\n        </Text>\n      </Separator>\n      {/* NAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"name\")}\n          defaultValue=\"Gabriela Rodríguez\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* NICKNAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"nick\")}\n          defaultValue=\"Gabi\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* COIN */}\n      <Stack.Item>\n        <Label>{t(\"coin\")}</Label>\n        <Persona\n          text=\"Gabriela Rodríguez\"\n          size={PersonaSize.size40}\n          initialsColor={PersonaInitialsColor.cyan}\n        />\n      </Stack.Item>\n      <br />\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>{t(\"theme\")}</b>\n        </Text>\n      </Separator>\n      {/* <Stack.Item>\n        <Toggle\n          label=\"Select a theme\"\n          defaultChecked\n          onText=\"Dark\"\n          offText=\"Light\"\n          onChange={handleChangeTheme}\n        />\n      </Stack.Item> */}\n      <Stack.Item>\n        <Label>{t(\"color-theme\")}</Label>\n        <Stack horizontal tokens={{ childrenGap: 5 }}>\n          <ThemePicker\n            colorCells={colorCells}\n            size=\"30px\"\n            handler={(key) => dispatch(setTheme(key))}\n          />\n        </Stack>\n      </Stack.Item>\n    </Stack>\n  );\n}\n","import React from 'react'\nimport { useTheme, \n    CommandBarButton, \n    IContextualMenuItemStyles, \n    IButtonProps, \n    concatStyleSets, \n    IPalette, \n    FontSizes \n} from '@fluentui/react';\n\nexport function CustomBarButton(props: IButtonProps) {\n\n    const { palette } = useTheme();\n\n    const itemStyles: IContextualMenuItemStyles = {\n        root: {\n            backgroundColor: palette.themePrimary\n        },\n        rootHovered: {\n            backgroundColor: palette.themeDark\n        },\n        rootPressed: {\n            backgroundColor: palette.themeDarker\n        },\n        icon: {\n            color: palette.white\n        },\n        iconHovered: {\n            color: palette.white\n        },\n        iconPressed: {\n            color: palette.white\n        },\n        label: {\n            color: palette.white\n        },\n        labelHovered: {\n            color: palette.white\n        },\n    };\n\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\n\n};\n\nexport function CustomOverflowButton(props: IButtonProps) {\n\n    const { palette } = useTheme();\n\n    const itemStyles: IContextualMenuItemStyles = {\n        root: {\n            backgroundColor: palette.themePrimary,\n\n        },\n        rootHovered: {\n            backgroundColor: palette.themeDark,\n        },\n        rootPressed: {\n            backgroundColor: palette.themeDarker,\n        },\n        rootExpanded: {\n            backgroundColor: palette.themeDarker,\n        },\n        rootExpandedHovered: {\n            backgroundColor: palette.themeDark,\n        },\n        menuIcon: {\n            color: palette.white + \" !important\",\n            fontSize: FontSizes.medium\n        },\n    };\n\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\n\n};\n\n// Overflow Buttons Props\nexport const overflowProps = (palette: IPalette) => {\n    return {\n        ariaLabel: \"More commands\",\n        menuProps: {\n            styles: {\n                subComponentStyles: {\n                    menuItem: {\n                        icon: { color: palette.black }\n                    }\n                }\n            },\n            items: [],\n        }\n    } as IButtonProps;\n};","import { ChoiceGroup, ContextualMenu,\n   DefaultButton,\n   Dialog,\n   DialogFooter,\n   DialogType,\n   IChoiceGroupOption,\n  //  IChoiceGroupStyles,\n   IDialogContentProps,\n   PrimaryButton } from '@fluentui/react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n\n\ntype CustomDialogProps = {\n    title: string,\n    text?: string,\n    hideDialog: boolean,\n    toggleHideDialog: () => void,\n    acceptOnClick: (option: string) => void,\n    primaryButtonText?: string,\n    options?: IChoiceGroupOption[],\n    optionsTitle? : string\n}\n\nexport default function CustomDialog(props : CustomDialogProps) {\n\n    // LOGIC\n    const {title, text, hideDialog, toggleHideDialog, acceptOnClick, primaryButtonText, options, optionsTitle} = props;\n    const [optionSelected, setOptionSelected] = useState('A')\n\n    const { t } = useTranslation(\"dialog\");\n    \n    // STYLES\n    // Modal\n    const dialogContentProps : IDialogContentProps = {\n        type: DialogType.normal,\n        title: title,\n        closeButtonAriaLabel: 'Close',\n        subText: text,\n      };\n\n    const modalProps = {\n          isBlocking: false,\n          dragOptions: {\n            moveMenuItemText: 'Move',\n            closeMenuItemText: 'Close',\n            menu: ContextualMenu,\n            keepInBounds: true,\n          },\n        }\n\n    // Options\n    // const optionStyles : IChoiceGroupStyles = {\n    //   root: {\n\n    //   }\n    // }\n\n    const onChange = (ev?: React.FormEvent<HTMLInputElement | HTMLElement>, option?: IChoiceGroupOption): void => {\n      setOptionSelected(option!.key);\n    };\n\n    return <Dialog\n        hidden={hideDialog}\n        onDismiss={toggleHideDialog}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n        \n    >\n      {options && \n        <ChoiceGroup\n        label={optionsTitle?? t(\"default-options-title\")}\n        options={options}\n        onChange={onChange}\n        // styles={}\n        required\n      />}\n    <DialogFooter>\n      <PrimaryButton onClick={() => acceptOnClick(optionSelected)} text={primaryButtonText?? t(\"default-accept\") } />\n      <DefaultButton onClick={toggleHideDialog} text=\"Cancel\" />\n    </DialogFooter>\n  </Dialog>\n}\n","import { IChoiceGroupOption, IChoiceGroupOptionStyles, IIconStyles } from '@fluentui/react';\nimport { useTranslation } from 'react-i18next';\n\nimport CustomDialog from './customDialog'\n\ntype ExportDialogProps = {\n    hideDialog: boolean,\n    toggleHideDialog: () => void\n}\n\nexport default function ExportDialog(props: ExportDialogProps) {\n\n    const {hideDialog, toggleHideDialog} = props;\n\n    const { t } = useTranslation(\"dialog\");\n\n\n    const choiceGroupStyle : IChoiceGroupOptionStyles = {\n        root: {\n            width: 70,\n            // height: 50,\n            marginBottom: 20,\n        },\n        choiceFieldWrapper: {\n            width: 70,\n            height: 70,\n            borderColor: \"red\",\n            paddingTop: 0,\n        },\n\n\n    }\n\n    const iconStyle : IIconStyles = {\n        root: {\n            fontSize: 20,\n          },\n    }\n\n    const options : IChoiceGroupOption[] = [\n        {\n          key: 'A',\n          iconProps: { iconName: 'WordDocument', styles: iconStyle },\n          text: 'Word',\n          styles: choiceGroupStyle\n        },\n        {\n          key: 'B',\n          iconProps: { iconName: 'ExcelDocument', styles: iconStyle },\n          text: 'Excell',\n          styles: choiceGroupStyle\n        },\n        {\n          key: 'C',\n          iconProps: { iconName: 'PDF', styles: iconStyle },\n          text: 'PDF',\n          styles: choiceGroupStyle\n        },\n      ];\n\n    const handleAccpetButtonOnClick = (option: string) => {\n        alert(option)\n        toggleHideDialog()\n    }\n\n    return <CustomDialog\n            title={t(\"export-title\")}\n            hideDialog={hideDialog}\n            toggleHideDialog={toggleHideDialog}\n            primaryButtonText={t(\"export-accept-label\")}\n            acceptOnClick={handleAccpetButtonOnClick}\n            options={options}\n            optionsTitle={t(\"export-options-title\")}\n      />\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  CommandBar,\n  ICommandBarStyles,\n  ITextStyles,\n  Text,\n  useTheme,\n  Panel\n} from \"@fluentui/react\";\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport { faritems, items, overflowItems } from \"./items\";\nimport LanguagePanel from \"components/sidepanel/languagepanel\";\nimport SettingsPanel from \"components/sidepanel/settingspanel\";\nimport { CustomBarButton, CustomOverflowButton, overflowProps } from \"./custombuttons\";\nimport ExportDialog from \"components/dialog/exportDialog\";\n\nexport default function CommandMenu() {\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const comandBarStyles: ICommandBarStyles = {\n    root: {\n      height: 36,\n      padding: 0,\n      backgroundColor: palette.themePrimary,\n    },\n  };\n\n  const textStyles: ITextStyles = {\n    root: {\n      position: \"absolute\",\n      top: 10,\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      color: palette.themeLight,\n    },\n  };\n\n  // Panels State\n  const { t } = useTranslation(\"methodologies\");\n\n  const [languagePanelOpen, { setTrue: openLanguagePanel, setFalse: dismissLanguagePanel }] = useBoolean(false);\n  const [settingsPanelOpen, { setTrue: openSettingsPanel, setFalse: dismissSettingsPanel }] = useBoolean(false);\n\n  // Dialog State\n  const [hideDialog, { toggle: toggleHideDialog }] = useBoolean(true);\n\n  return (\n    <React.Fragment>\n      <Text variant=\"small\" styles={textStyles}>\n        Project 1 - {t(\"methodologies:canadian\")}\n      </Text>\n\n      <CommandBar\n        buttonAs={CustomBarButton}\n        items={items(toggleHideDialog)}\n        farItems={faritems(openLanguagePanel, openSettingsPanel)}\n        overflowItems={overflowItems}\n        overflowButtonAs={CustomOverflowButton}\n        overflowButtonProps={overflowProps(palette)}\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n        styles={comandBarStyles}\n      />\n\n      <Panel\n        isOpen={languagePanelOpen}\n        closeButtonAriaLabel=\"Close\"\n        isHiddenOnDismiss={true}\n        headerText={t(\"sidepanel:language-header\")}\n        onDismiss={dismissLanguagePanel}>\n        <LanguagePanel />\n      </Panel>\n\n      <Panel\n        isOpen={settingsPanelOpen}\n        closeButtonAriaLabel=\"Close\"\n        isHiddenOnDismiss={true}\n        headerText={t(\"sidepanel:header-settings\")}\n        onDismiss={dismissSettingsPanel}>\n        <SettingsPanel />\n      </Panel>\n\n      <ExportDialog\n        hideDialog={hideDialog}\n        toggleHideDialog={toggleHideDialog}\n      />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  FontSizes,\n  IPivotStyles,\n  Pivot,\n  PivotItem,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { TabSchema } from \"models/workplace\";\nimport { setLatestMenuTab } from \"store/slices/workplaceslice\";\n\ntype PivotBarProps = {\n  schema: TabSchema;\n  setShowToolBar: Function;\n};\n\nexport default function PivotBar(props: PivotBarProps) {\n  const { schema, setShowToolBar } = props;\n  const { tabs } = schema;\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const pivotStyles: Partial<IPivotStyles> = {\n    root: {\n      height: 34,\n      backgroundColor: palette.themePrimary,\n      zIndex: 10,\n    },\n    link: {\n      height: \"inherit\",\n      backgroundColor: palette.themePrimary,\n      color: palette.white,\n      fontSize: FontSizes.small,\n      \":hover\": {\n        backgroundColor: palette.themeDarkAlt,\n        color: palette.white,\n      },\n      \":active\": {\n        backgroundColor: palette.themeDark,\n        color: palette.white,\n      },\n      \":focus\": {\n        backgroundColor: palette.themePrimary,\n        color: palette.white,\n      },\n    },\n    linkIsSelected: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralLighter + \" !important\",\n      color: palette.black + \" !important\",\n    },\n  };\n\n  // LOGIC\n  const { t } = useTranslation(\"menu\");\n\n  // Tabs State\n  const dispatch = useDispatch();\n\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\n    setShowToolBar(true)\n\n    if (item) {\n      const itemkey = item.props.itemKey!;\n      // Update current menu tab\n      dispatch(setLatestMenuTab({ tabKey: itemkey }));\n    }\n  }\n\n  return (\n    <Pivot\n      linkFormat=\"tabs\"\n      defaultSelectedKey=\"key2\"\n      styles={pivotStyles}\n      onLinkClick={handleMenuOnClick}\n    >\n      {tabs.map((tab) => {\n        return (\n          <PivotItem\n            key={tab.key}\n            itemKey={tab.key}\n            headerText={t(tab.name)}\n            itemIcon={tab.icon}\n          />\n        );\n      })}\n    </Pivot>\n  );\n}\n","import React from \"react\";\nimport {\n  Facepile,\n  OverflowButtonType,\n  IFacepilePersona,\n  IButtonProps,\n  PersonaInitialsColor,\n  IFacepileStyles,\n  PersonaSize,\n} from \"@fluentui/react\";\n\n// OverflowButton Props\nconst overflowButtonProps: IButtonProps = {\n  ariaLabel: \"More users\",\n  onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\n    alert(\"overflow icon clicked\"),\n};\n\n// AddButton Props\nconst addButtonProps = () => ({\n  ariaLabel: \"Add a new person\",\n  href: \"/\",\n});\n\n// STYLES\nconst FacePileStyles: Partial<IFacepileStyles> = {\n  root: {\n    position: \"absolute\",\n    top: 38,\n    right: 8,\n    zIndex: 10\n  },\n  itemButton: {\n    margin: \"0 -2px 0 -2px\",\n  },\n};\n\n// Data\nconst faces: IFacepilePersona[] = [\n  {\n    personaName: \"Gabriela Rodríguez\",\n    initialsColor: PersonaInitialsColor.gray,\n  },\n  {\n    personaName: \"Amaury Díaz\",\n    initialsColor: PersonaInitialsColor.gold,\n  },\n  {\n    personaName: \"Iliana Hernandez\",\n    initialsColor: PersonaInitialsColor.lightGreen,\n  },\n  {\n    personaName: \"Laura Rodríguez\",\n    initialsColor: PersonaInitialsColor.warmGray,\n  },\n  {\n    personaName: \"Lili Masters\",\n    initialsColor: PersonaInitialsColor.blue,\n  },\n  {\n    personaName: \"Susana Naranjo\",\n    initialsColor: PersonaInitialsColor.green,\n  },\n  {\n    personaName: \"Lupe Dantes\",\n    initialsColor: PersonaInitialsColor.darkBlue,\n  },\n  {\n    personaName: \"Karen Ganter\",\n    initialsColor: PersonaInitialsColor.lightGreen,\n  },\n  {\n    personaName: \"Josephine Filipie\",\n    initialsColor: PersonaInitialsColor.purple,\n  },\n  {\n    personaName: \"Daniel Hertys\",\n    initialsColor: PersonaInitialsColor.orange,\n  },\n];\n\nexport default function TeamPile() {\n  return (\n    <Facepile\n      personas={faces}\n      personaSize={PersonaSize.size24}\n      maxDisplayablePersonas={4}\n      overflowButtonProps={overflowButtonProps}\n      overflowButtonType={OverflowButtonType.descriptive}\n      addButtonProps={addButtonProps()}\n      ariaDescription=\"To move through the items use left and right arrow keys.\"\n      styles={FacePileStyles}\n    />\n  );\n}\n","import React from \"react\";\n\nimport PivotBar from \"components/menus/mainmenu/pivotbar\";\nimport TeamPile from \"components/menus/mainmenu/teampile\";\nimport { TabSchema } from \"models/workplace\";\n\ntype MenuProps = {\n  tabs: TabSchema;\n  setShowToolBar: Function;\n}\n\nexport default function MainMenu(props: MenuProps) {\n\n  const { setShowToolBar, tabs } = props;\n\n  return (\n    <React.Fragment>\n      <PivotBar schema={tabs} setShowToolBar={setShowToolBar} />\n      <TeamPile />\n    </React.Fragment>\n  );\n}\n","import {\n  useTheme,\n  IconButton,\n  Stack,\n  IStackItemProps,\n  IStackProps\n} from \"@fluentui/react\";\nimport { FunctionComponent, useEffect, useRef } from \"react\";\nimport { animated } from \"react-spring\";\n\ntype ToolBarProps = {\n  isFixed: boolean;\n  handleClose: () => void;\n  handleFix: () => void;\n  transition: Function;\n}\n\nconst ToolBar: FunctionComponent<ToolBarProps> = (props) => {\n  const { children, isFixed, handleClose, handleFix, transition } = props;\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const stackProps: IStackProps = {\n    horizontal: true,\n    horizontalAlign: \"space-between\",\n    styles: {\n      root: {\n        height: 94,\n        padding: \"0 10px 2px 10px\",\n        backgroundColor: palette.neutralLighter,\n        borderBottom: \"1px solid #E0E0E0\",\n        color: palette.black,\n      }\n    }\n  };\n\n  const stackPinProps: IStackItemProps = {\n    align: \"end\"\n  };\n\n  // LOGIC\n  function useOutsideAlerter(ref: any) {\n    useEffect(() => {\n      function handleClickOutside(event: any) {\n        if (ref.current && !ref.current.contains(event.target) && !isFixed) {\n          handleClose();\n        }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref, isFixed]);\n  }\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  return transition((style: any, item: any) => item &&\n    <animated.div style={style}>\n      <div ref={wrapperRef}>\n        <Stack {...stackProps} >\n          <Stack.Item >\n            {children}\n          </Stack.Item>\n\n          <Stack.Item {...stackPinProps}>\n            {isFixed ?\n              <IconButton iconProps={{ iconName: 'ChevronUp' }} title=\"Cancel\" ariaLabel=\"Cancel\" onClick={(item) => handleClose()} /> :\n              <IconButton iconProps={{ iconName: 'Pin' }} title=\"Pin\" ariaLabel=\"Cancel\" onClick={(item) => handleFix()} />\n            }\n          </Stack.Item>\n        </Stack>\n      </div>\n    </animated.div>\n  )\n};\n\nexport default ToolBar;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  FontSizes,\n  FontWeights,\n  IPivotStyles,\n  Pivot,\n  PivotItem,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { Tab } from \"models/workplace\";\n\ntype PagesTabProps = {\n  tabs?: Tab[];\n  defaultKey?: string;\n  parentKey: string;\n  onClick: (parentkey: string, item?: PivotItem) => void;\n};\n\nexport default function PagesTabs(props: PagesTabProps) {\n\n  // LOGIC\n  const { tabs, onClick, parentKey, defaultKey, } = props;\n\n  const { t } = useTranslation(\"pages\");\n\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement, MouseEvent>) => onClick(parentKey, item)\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const pivotStyles: Partial<IPivotStyles> = {\n    root: {\n      height: 34,\n      backgroundColor: palette.neutralLight,\n    },\n    link: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralLight,\n      color: palette.black,\n      fontSize: FontSizes.small,\n      \":hover\": {\n        backgroundColor: palette.neutralQuaternaryAlt,\n        color: palette.black,\n      },\n      \":active\": {\n        backgroundColor: palette.neutralTertiaryAlt,\n        color: palette.black,\n      },\n      \":focus\": {\n        backgroundColor: palette.neutralQuaternaryAlt,\n        color: palette.black,\n      },\n    },\n    linkIsSelected: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralTertiaryAlt + \" !important\",\n      color: palette.black + \" !important\",\n      fontWeight: FontWeights.semibold + \" !important\",\n    },\n  };\n\n  return (\n    <Pivot\n      linkFormat=\"tabs\"\n      selectedKey={defaultKey}\n      styles={pivotStyles}\n      onLinkClick={handleMenuOnClick}\n      headersOnly={true}\n    >\n      {tabs &&\n        tabs.map((tab) => {\n          return (\n            <PivotItem\n              key={tab.key}\n              itemKey={tab.key}\n              headerText={t(tab.name)}\n              itemIcon={tab.icon}\n            >\n              {tab.render}\n            </PivotItem>\n          );\n        })}\n    </Pivot>\n  );\n}\n","import { IconButton, useTheme } from \"@fluentui/react\";\n\nexport default function AddButton() {\n  const { palette } = useTheme();\n\n  return (\n    <IconButton\n      iconProps={{ iconName: \"CircleAddition\" }}\n      styles={{ root: { color: palette.black } }}\n      onClick={() => alert(\"Add an instrument\")}\n    />\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport {\n  ISeparatorStyles,\n  IStackProps,\n  PivotItem,\n  Separator,\n  Stack,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport PagesTabs from \"./pagestabs\";\nimport AddButton from \"./addbutton\";\nimport { Tab } from \"models/workplace\";\nimport { setConfiguration } from \"store/slices/workplaceslice\";\n\ntype FooterProps = {\n  tab: Tab;\n  selectedkey: string;\n};\n\nexport default function Footer(props: FooterProps) {\n\n  const { tab, selectedkey } = props;\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const stackProps: IStackProps = {\n    horizontal: true,\n    styles: {\n      root: {\n        height: 34,\n        position: \"fixed\",\n        bottom: 0,\n        width: \"100%\",\n        backgroundColor: palette.neutralLight,\n      },\n    },\n  };\n\n  const separatorStyles: Partial<ISeparatorStyles> = {\n    root: {\n      \"::after\": {\n        backgroundColor: palette.neutralQuaternary,\n      },\n    },\n  };\n\n  // LOGIC\n  const dispatch = useDispatch();\n\n  const handleTabOnClick = (parentkey: string, item?: PivotItem) => {\n    if (item) {\n      const itemkey = item.props.itemKey!;\n\n      // Update current configuration\n      dispatch(setConfiguration({ key: parentkey, tab: itemkey, page: item.props.children }))\n    }\n  };\n\n  return (\n    <Stack {...stackProps}>\n      <PagesTabs\n        tabs={tab.childtabs}\n        parentKey={tab.key}\n        defaultKey={selectedkey}\n        onClick={handleTabOnClick}\n      />\n      {tab.addtabs && <AddButton />}\n\n      <Separator vertical styles={separatorStyles} />\n\n      {/* Here goes the horizontal scrollbar when needed for the page */}\n    </Stack>\n  );\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useSpring, useTransition } from \"react-spring\";\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\n\nimport { selectWorkplaceConfig } from \"store/slices/workplaceslice\";\nimport PageContainer from \"components/styled/pagecontainer\";\nimport { Sticky } from \"components/styled/sticky\"\n\nimport CommandMenu from \"components/menus/commands/\";\nimport MainMenu from \"components/menus/mainmenu\";\nimport ToolBar from \"components/menus/mainmenu/toolbar\";\nimport Footer from \"components/menus/footer\";\n\nconst WorkplaceLayout: FunctionComponent = (props) => {\n\n  // Global state variables\n  const { latestMenuTab, configuration, tabsSchema } = useSelector(selectWorkplaceConfig);\n  const { tools } = configuration[latestMenuTab];\n  const { page } = configuration[latestMenuTab];\n  const footertab = tabsSchema.findByKey(latestMenuTab);\n  const selectedkey = configuration[latestMenuTab].tab;\n\n  // Toolbar Animation State & Controls\n  const [fixToolBar, setFixToolBar] = useState(true)\n\n  const [showToolBar, setShowToolBar] = useState(true)\n  const toolBarTransition = useTransition(showToolBar, {\n    from: { x: 0, y: -34, opacity: 0 },\n    enter: { x: 0, y: 0, opacity: 1 },\n    leave: { x: 0, y: -34, opacity: 0 },\n  })\n\n  const pageSpring = useSpring({\n    marginTop: showToolBar ? 180 : 80,\n    from: {\n      marginTop: 180,\n    },\n  })\n\n  const handleToolbarClose = () => {\n    setShowToolBar(false);\n    setFixToolBar(false);\n  }\n\n  const handleToolbarFix = () => {\n    setFixToolBar(true);\n  }\n\n  return (\n    <React.Fragment>\n      <RemoveScrollBar />\n\n      <Sticky direction=\"top\">\n        <CommandMenu />\n        <MainMenu tabs={tabsSchema} setShowToolBar={setShowToolBar} />\n        <ToolBar transition={toolBarTransition} isFixed={fixToolBar} handleClose={handleToolbarClose} handleFix={handleToolbarFix}>\n          {tools}\n        </ToolBar>\n      </Sticky>\n\n      <PageContainer spring={pageSpring} scrollHeight={showToolBar ? \"calc(100vh - 220px)\" : \"calc(100vh - 110px)\"}>\n        {page}\n      </PageContainer>\n\n      <Footer tab={footertab} selectedkey={selectedkey} />\n\n    </React.Fragment>\n  );\n};\n\nexport default WorkplaceLayout;\n","import React from 'react'\nimport { DocumentCard, \n    DocumentCardLogo, \n    DocumentCardTitle, \n    IDocumentCardLogoProps, \n    IDocumentCardStyles, \n    useTheme,\n    FontSizes,\n    IDocumentCardTitleStyles,\n    DocumentCardActivity,\n    DocumentCardActions,\n    IIconProps\n} from '@fluentui/react';\n\ntype StaredProjectsProps = {\n    projectName : string,\n    methodology: string\n}\n\nexport default function StaredProjects(props : StaredProjectsProps) {\n\n    // STYLES\n    const { palette } = useTheme();\n\n    const cardStyles: IDocumentCardStyles = {\n        root: { \n            display: 'inline-block', \n            margin: \"20px 20px 20px 0\", \n            width: 10\n        },\n\n      };\n\n    const cardTitleStyles: IDocumentCardTitleStyles = {\n        root: {\n            fontSize: FontSizes.mediumPlus,\n            height: 20,\n            paddingBottom: 2\n        }\n    }\n\n    const starIconProps: IIconProps = {\n        iconName: 'FavoriteStarFill',\n        styles: {\n            root: {\n                color: palette.yellowDark,\n            }\n        }\n    };\n\n    const documentCardActions = [\n        {\n          iconProps: starIconProps,\n          onClick: () => {},\n          ariaLabel: 'unstar',\n        },\n        {\n          iconProps: { iconName: 'Pin' },\n          onClick: () => {},\n          ariaLabel: 'pin action',\n        },\n        {\n          iconProps: { iconName: 'Ringer' },\n          onClick: () => {},\n          ariaLabel: 'notifications action',\n        },\n      ];\n\n    return (\n      <DocumentCard\n        styles={cardStyles}\n        onClickHref=\"#/workplace\"\n      >\n        {/* <DocumentCardLogo {...logoProps} /> */}\n\n        <DocumentCardTitle title={props.projectName} styles={cardTitleStyles}/>\n        <DocumentCardTitle title={props.methodology} showAsSecondaryTitle/>\n\n        <DocumentCardActivity\n            activity=\"Created Feb 23, 2016\"\n            people={[{ name: 'Annie Lindqvist', profileImageSrc: '', initials: 'RK'  }]}\n            />\n        <DocumentCardActions actions={documentCardActions} views={432} />\n      </DocumentCard>\n    )\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport { ISeparatorStyles, Separator, Stack, Text, useTheme } from '@fluentui/react'\n\n// import { useQuery } from '@apollo/client';\n// import { GET_USER_PROJECTS } from 'apollo/methodologies';\nimport StaredProjects from 'components/cards/staredprojects';\n\n// Home: star projects, visualizes teams, maybe notifications\n\ntype Example = {\n    project: string,\n    meth: string\n}\n\nexport default function HomePage() {\n\n    const { t } = useTranslation([\"navbar\", \"homepage\"]);\n    const { palette } = useTheme();\n\n    const exampledata : Example[] = [\n        {project: \"Agua y Sanamiento\", meth: \"Canadian Methodology\"},\n        {project: \"Reforestacion\", meth: \"German Methodology\"}\n    ] \n\n    const separatorStyles: Partial<ISeparatorStyles> = {\n        root: {\n            \"::before\": {\n                height: 0.4,\n                background: palette.neutralTertiaryAlt,\n            },\n        },\n    };\n    return (\n        <div>\n            <Text variant='xLarge' styles={{root: {marginBottom: 20}}} block>{t(\"home\")}</Text>\n\n            {/* Star Projects */}\n\n            <Stack>\n                <Text variant='mediumPlus'>{t(\"homepages:stared-projects\")}</Text>\n                <Stack horizontal>\n                    {exampledata.map(({project, meth} : Example) => (\n                        <StaredProjects projectName={project} methodology={meth}/>\n                    ))}\n                </Stack>\n                <Separator styles={separatorStyles}/>\n\n                {/* Visualize Teams */}\n                <Text variant='mediumPlus'>{t(\"homepages:teams\")}</Text>\n                <Separator styles={separatorStyles}/>\n\n                {/* Notifications */}\n                {/* Separator */}\n                <Text variant='mediumPlus'>{t(\"homepages:notifications\")}</Text>\n                <Separator styles={separatorStyles}/>\n            </Stack>\n        </div>\n    )\n}\n\n// const UserProjects = () => {\n\n//     const {loading, error, data} = useQuery(GET_USER_PROJECTS);\n  \n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>Error :(</p>;\n\n//     return data.methodologies.map(({ id , name, methodology } : any) =>  (\n//         <Stack.Item key={id} >\n//           <StaredProjects projectName={name} methodology={methodology}/>\n//         </Stack.Item>\n//         )\n//     )\n// }\n","import { INavLinkGroup, \n    INavStyles, \n    Nav, \n    useTheme, \n    FontSizes, \n    IIconProps,\n    ActionButton,\n    IButtonStyles,\n    Separator,\n    ISeparatorStyles,\n    mergeStyleSets,\n    INavLink\n} from '@fluentui/react';\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// const links = [\"home\", \"new\", \"open\"]\n// const footer_links = [\"info\", \"export\", \"print\", \"share\", \"about\"]\n\nexport default function FileMenu() {\n\n    // LOGIC\n    const { t } = useTranslation('navbar');\n    const { palette } = useTheme();\n\n    const [selectedKey, setSelectedKey] = useState(\"key1\")\n\n    const handleClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {\n        if (item) {\n            setSelectedKey(item.key || \"key1\")\n            window.localStorage.setItem('selectedKey', item.key || \"key1\")\n        }\n    }\n\n    useEffect(() => {\n        const storedSelectedOption = window.localStorage.getItem('selectedKey') || 'key1'\n        setSelectedKey(storedSelectedOption)\n      }, [])\n    \n    // STYLES\n    const classes = mergeStyleSets({\n        footer: {\n            \"a\": {\n            paddingLeft: 30!,\n            }\n        },\n      });\n\n    // Action Button Return\n    const buttonStyles: IButtonStyles = {\n        root: {\n            marginTop: 20,\n            marginBottom: 20,\n            width: '100%'\n        },\n        textContainer: {\n            width: '100%',\n            textAlign: 'left'\n        }\n    }\n\n    const iconProps : Partial<IIconProps> = {\n        iconName: 'NavigateBack',\n        styles: {\n            root: {\n                paddingLeft: 7,\n                marginRight: 10,\n                fontSize: FontSizes.mediumPlus,\n            }\n        }\n    }\n\n    // Main navigation\n    const navStyles: Partial<INavStyles> = {\n        root: {\n            height: \"inherit\",\n            boxSizing: 'border-box',\n            border: \"none\",\n            overflowY: 'auto',\n            color: palette.white!,\n        },\n        link: {\n            paddingLeft: 10,\n            fontSize: FontSizes.medium,\n            // color: palette.white!,\n\n            // '.ms-Nav-compositeLink:hover &': {\n            //     backgroundColor: palette.themePrimary,\n            //     color: palette.white\n            // },\n\n            // '.is-selected &': {\n            //     backgroundColor: palette.themeDarkAlt\n            // }\n\n        },\n        linkText: {\n            // color: palette.white!\n            paddingLeft: 10\n        },\n        groupContent: {\n            marginBottom: 2\n        }\n    };\n\n    // Separator\n    const separatorStyles: Partial<ISeparatorStyles> = {\n        root: {\n        \"::before\": {\n            margin: \"0px 10px\",\n            height: 0.4,\n            background: palette.neutralTertiaryAlt,\n            },\n        },\n    };\n\n    // VAR\n    const nav: INavLinkGroup[] = [\n        {\n            links: [\n                {\n                    name: t('home'),\n                    url: '#/',\n                    key: 'key1',\n                    // iconProps: iconProps,\n                    icon: 'Home',\n                },\n                {\n                    name: t('new'),\n                    url: '#/new',\n                    key: 'key2',\n                    icon: 'Page',\n                },\n                {\n                    name: t('open'),\n                    url: '#/open',\n                    key: 'key3',\n                    icon: 'OpenFolderHorizontal',\n                }\n            ],\n        },\n    ];\n    \n    const footer_nav: INavLinkGroup[] = [\n        {\n            links: [\n                {\n                    name: t('info'),\n                    url: '#/1/info',\n                    key: 'key4',\n                },\n                {\n                    name: t('export'),\n                    url: '#/1/export',\n                    key: 'key5',\n                },\n                {\n                    name: t('print'),\n                    url: '#/1/print',\n                    key: 'key6',\n                },\n                {\n                    name: t('share'),\n                    url: '#/1/share',\n                    key: 'key7',\n                },\n                {\n                    name: t('about'),\n                    url: '#/1/about',\n                    key: 'key8',\n                },        \n            ],\n        }\n    ]\n\n    return (\n        <div>\n            {/* close */}\n            <ActionButton \n                iconProps={iconProps} \n                styles={buttonStyles}\n                href=\"#/workplace\">\n                Return\n            </ActionButton>\n\n            {/* links */}\n            <Nav \n                selectedKey={selectedKey}\n                ariaLabel=\"File menu\" \n                styles={navStyles} \n                groups={nav} \n                onLinkClick={handleClick}/>\n\n            {/* Separator */}\n            <Separator styles={separatorStyles}/>\n\n            {/* footer */}\n            <Nav \n                selectedKey={selectedKey}\n                ariaLabel=\"File menu\" \n                styles={navStyles} \n                groups={footer_nav} \n                className={classes.footer}\n                onLinkClick={handleClick}/>\n        </div>\n    )\n}\n","import React, { FunctionComponent } from \"react\";\nimport { IStackStyles, Stack, useTheme } from \"@fluentui/react\";\n\nimport FileMenu from \"components/menus/homemenu/filemenu\";\n\nconst MainLayout: FunctionComponent = (props) => {\n  const { palette } = useTheme();\n  const { children } = props;\n  \n  const menuStackStyles: IStackStyles = {\n    root: {\n      height: \"100vh\",\n      width: 200,\n      // background: palette.themeSecondary,\n    },\n  };\n\n  const pageStackStyles: IStackStyles = {\n    root: {\n      height: \"100vh\",\n      width: \"100%\",\n      padding: 40,\n      background: palette.neutralLight,\n    },\n  };\n\n  return <React.Fragment>\n      {/* <Link to=\"/workplace\">Workplace</Link> */}\n      {/* <AutoSavingForm2 /> */}\n\n      <Stack horizontal>\n        <Stack \n          verticalAlign=\"space-between\" \n          styles={menuStackStyles}\n        >\n          <FileMenu />\n\n        </Stack>\n        <Stack styles={pageStackStyles}>\n          {children}\n          {/* <Apollo/> */}\n        </Stack>\n      </Stack>\n    </React.Fragment>\n}\n\nexport default MainLayout;\n\n","import { gql } from '@apollo/client'\n\nexport const GET_METHODOLOGIES = gql`{\n    methodologies {\n      id\n      name\n    }\n}`\n\n// export const GET_USER_PROJECTS = gql`\n//   query UserProjects($breed: String!) {\n//     projects(breed: $breed) {\n//       id\n//       name\n//       methodology: {\n//         name\n//       }\n//     }\n//   }\n// `;","import { DocumentCard, \n    DocumentCardDetails, \n    DocumentCardImage, \n    DocumentCardTitle, \n    IDocumentCardStyles, \n    ImageFit\n} from '@fluentui/react'\n\ntype MethodologyCardProps = {\n    name : string\n}\n\nexport default function MethodologyCard(props : MethodologyCardProps) {\n\n    const cardStyles: IDocumentCardStyles = {\n        root: { \n            display: 'inline-block', \n            margin: \"20px 20px 20px 0\", \n            width: 250 \n        },\n      };\n\n    return (\n      <DocumentCard\n        styles={cardStyles}\n        onClickHref=\"#/workplace\"\n      >\n        <DocumentCardImage \n          height={150} \n          imageFit={ImageFit.cover} \n          imageSrc=\"../../../public/australian.png\" \n        />\n        <DocumentCardDetails>\n          <DocumentCardTitle title={props.name} />\n        </DocumentCardDetails>\n        {/* <DocumentCardActivity activity=\"Modified March 13, 2018\" people={people.slice(0, 3)} /> */}\n      </DocumentCard>\n    )\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/client';\n\nimport { GET_METHODOLOGIES } from 'apollo/methodologies';\nimport { Stack, Text } from '@fluentui/react';\nimport MethodologyPage from 'components/cards/methodologycard';\nimport { useTranslation } from 'react-i18next';\n\nexport default function NewPage() {\n        \n    const { t } = useTranslation(\"navbar\");\n\n    return <React.Fragment>\n        <Text variant='xLarge'>{t(\"new\")}</Text>\n        <Stack horizontal>\n            <NewProjects />\n        </Stack>\n    </React.Fragment>\n}\n\nconst NewProjects = () => {\n\n    const {loading, error, data} = useQuery(GET_METHODOLOGIES);\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.methodologies.map(({ id , name } : any) =>  (\n        <Stack.Item key={id} >\n          <MethodologyPage name={name} />\n        </Stack.Item>\n        )\n    )\n}\n","import React from 'react'\n\n// Open: own projects, recent projects, new shared project (have been invited)\nexport default function OpenPage() {\n    return (\n        <div>\n            Open\n        </div>\n    )\n}\n","import React from 'react'\n\n// Info: project methodology, team, hos big the project is\nexport default function InfoPage() {\n    return (\n        <div>\n            Info\n        </div>\n    )\n}\n","import React from 'react'\n\n// About: about the platform, privacy and terms of use, privacy and cookies \nexport default function AboutPage() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SharePage() {\n    return (\n        <div>\n            Share\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function PrintPage() {\n    return (\n        <div>\n            Print\n        </div>\n    )\n}\n","import React from 'react'\n\n// Export: choose export file for each form and wether or not to export it\nexport default function ExportPage() {\n    return (\n        <div>\n            Export\n        </div>\n    )\n}\n","import { gql, useQuery } from '@apollo/client'\n\nexport default function Apollo() {\n\n    const METHODOLOGIES = gql`\n    query GetMethodologies {\n      methodologies {\n        id\n        name\n      }\n    }`;\n  \n    const {loading, error, data} = useQuery(METHODOLOGIES);\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.methodologies.map(({ id , name } : any) =>  (\n        <div key={id}>\n          <p>\n            {id}: {name}\n          </p>\n        </div>\n        )\n    )\n}\n","import React, { FunctionComponent } from \"react\";\nimport Apollo from \"apollo\";\nimport { Link } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n\n// import { AutoSavingForm2 } from \"./autosave\"\n\nconst Main : FunctionComponent = (props) => {\n\n  return <React.Fragment>\n      <Link to=\"/workplace\">Workplace</Link>\n      {/* <AutoSavingForm2 /> */}\n\n      <Apollo/>\n    </React.Fragment>\n}\n\nexport default Main\n","import { lazy } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport WorkplaceLayout from \"layouts/workplace\";\nimport HomePage from \"pages/home/home\";\nimport MainLayout from \"layouts/main\";\nimport NewPage from \"pages/home/new\";\nimport OpenPage from \"pages/home/open\";\nimport InfoPage from \"pages/home/info\";\nimport AboutPage from \"pages/home/about\";\nimport SharePage from \"pages/home/share\";\nimport PrintPage from \"pages/home/print\";\nimport ExportPage from \"pages/home/export\";\nimport Main from \"pages/main\";\n\n// Canaidan Methodology - Project Tab\nconst GeneralForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/generalform\"));\nconst StakeholdersForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/stakeholdersform\"));\nconst LogicModelForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/logicmodelform\"));\nconst ActivitiesMatrixForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/activitiesform\"));\nconst PerformanceMeasureForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/performanceform\"));\nconst RisksForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/risksform\"));\nconst BudgetForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/budgetform\"));\nconst ReportsForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/reportsform\"));\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/workplace\" render={WorkplaceSwitcher} />\n        <Route path=\"/main\" component={Main} />\n        <Route path=\"/\" component={MainSwitcher} />\n      </Switch>\n    </Router>\n  );\n}\n\n// WORKPLACE\nconst WorkplaceSwitcher = () => (\n  /* Projects, Methodologies, Licitaciones, Bases de Datos */\n  <WorkplaceLayout>\n    <Switch>\n      <Route path=\"/workplace/project\" render={ProjectSwitcher} />\n      {/* <Route path=\"/workplace/methodology\" render={MethodologySwitcher} /> */}\n      {/* <Route path=\"/workplace/licitations\" render={MethodologySwitcher} /> */}\n      {/* <Route path=\"/workplace/database\" render={MethodologySwitcher} /> */}\n    </Switch>\n  </WorkplaceLayout>\n);\n\n// PROJECT\nconst ProjectSwitcher = () => (\n  // After having users account and project id the url's format should be /workplace/#project_id/general\n  <Switch>\n    <Route path=\"/workplace/{p_id}/general\" component={GeneralForm} />\n    <Route path=\"/workplace/{p_id}/stakeholdres\" component={StakeholdersForm} />\n    <Route path=\"/workplace/{p_id}/logicmodel\" component={LogicModelForm} />\n    <Route path=\"/workplace/{p_id}/activitiesmatrix\" component={ActivitiesMatrixForm} />\n    <Route path=\"/workplace/{p_id}/performance\" component={PerformanceMeasureForm} />\n    <Route path=\"/workplace/{p_id}/risks\" component={RisksForm} />\n    <Route path=\"/workplace/{p_id}/budget\" component={BudgetForm} />\n    <Route path=\"/workplace/{p_id}/reports\" component={ReportsForm} />\n  </Switch>\n);\n\n// HOME\nconst MainSwitcher = () => (\n  // Home, New, Open\n  <MainLayout>\n    <Switch>\n      <Route path=\"/new\" component={NewPage} />\n      <Route path=\"/open\" component={OpenPage} />\n      <Route path=\"/:fileId\" render={FileSwitcher} />\n      <Route path=\"/\" component={HomePage} />\n    </Switch>\n\n  </MainLayout>\n);\n\nconst FileSwitcher = () => (\n  // Info, Export, Print, Share, About\n  <Switch>\n      <Route path=\"/:fileId/info\" component={InfoPage} />\n      <Route path=\"/:fileId/export\" component={ExportPage} />\n      <Route path=\"/:fileId/print\" component={PrintPage} />\n      <Route path=\"/:fileId/share\" component={SharePage} />\n      <Route path=\"/:fileId/about\" component={AboutPage} />\n  </Switch>\n)\n\n\n","import React, { Suspense } from \"react\";\nimport Routes from \"routes\";\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Routes />\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport IState from \"models/state\";\n\nconst HelpSlice = createSlice({\n  name: \"helpTooltips\",\n  initialState: true,\n  reducers: {\n    toggleHelp: (state: boolean) => {\n      return !state;\n    },\n    setHelp: (state: boolean) => {\n      return state = true;\n    },\n    removeHelp: (state: boolean) => {\n      return state = false;\n    },\n  },\n});\n\nexport const help = (state: IState) => state.helpTooltips;\nexport const { toggleHelp, setHelp, removeHelp } = HelpSlice.actions;\n\nexport default HelpSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport themeReducer from \"store/slices/themeslice\";\nimport languageReducer from \"store/slices/languageslice\";\nimport helpReducer from \"store/slices/settingslice\";\nimport projectReducer from \"store/slices/projectslice\";\nimport workplaceReducer from \"store/slices/workplaceslice\";\n\nconst store = configureStore({\n  reducer: {\n    theme: themeReducer,\n    language: languageReducer,\n    help: helpReducer,\n    project: projectReducer,\n    workplace: workplaceReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18n\";\n\nimport { initializeIcons, loadTheme } from \"@fluentui/react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n\n// Apollo\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'http://80.209.237.197:3000/graphql',\n  cache: new InMemoryCache()\n});\n\n// Styling\nloadTheme(store.getState().theme);\ninitializeIcons();\n\n// Render\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { TextField } from \"@fluentui/react\";\n\nconst TextFieldInput = ({ field, form, ...props }: any) => {\n  const handleGetError = (value: string) => {\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\n  };\n\n  return (\n    <TextField\n      {...field}\n      {...props}\n      onGetErrorMessage={handleGetError}\n      deferredValidationTime={500}\n    />\n  );\n};\n\nexport default TextFieldInput;\n\n\n","import React from \"react\";\n\nexport default function ChangeNarrativeForm() {\n    return <div>ChangeNarrative Form</div>;\n}\n","import React from \"react\";\n\nexport default function LotForm() {\n  return <div>Lot Form</div>;\n}\n","import React from \"react\";\n\nexport default function SpecificationsForm() {\n  return <div>Specification Form</div>;\n}\n","import React from \"react\";\n\nexport default function TechnicalOfferForm() {\n  return <div>Technical Offer Form</div>;\n}\n","import React from \"react\";\n\nexport default function FinancialOfferForm() {\n  return <div>Financial Offer Form</div>;\n}\n","import React from \"react\";\n\nexport default function FormsTutorials() {\n  return <div>Forms Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function SectorsTutorials() {\n  return <div>Sectors Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function GuidesTutorials() {\n  return <div>Guides Tutorials</div>;\n}\n","import React from \"react\";\n\nexport default function MethodologyTutorials() {\n  return <div>Methodology Tutorials</div>;\n}\n","import React from \"react\";\n\nexport default function OutcomesTutorial() {\n  return <div>Outcomes Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function IndicatorsTutorial() {\n  return <div>Indicators Tutorials</div>;\n}\n","import React from 'react'\n\nexport default function ActivitiesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function BudgetsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}","import React from 'react'\n\nexport default function CategoriesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function CoinsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function CountriesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function DevelopmentGoalsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function IndicatorsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function LanguagesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function MethodologiesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function OffersData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function OutcomesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ProductsServicesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ProgramsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ProjectGoalsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ProjectsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SectorsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SourcesData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function StakeholdersData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function AssumptionsData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function UsersData() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function EvaluationForm() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function ApplicationForm() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","\nimport { Redirect } from \"react-router\";\nimport { Label } from \"@fluentui/react\";\n\n// PROJECT FORMS\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\nimport StakeholdersForm from \"pages/methodologies/canadian/projectforms/stakeholdersform\";\nimport LogicModelForm from \"pages/methodologies/canadian/projectforms/logicmodelform\";\nimport ActivitiesMatrixForm from \"pages/methodologies/canadian/projectforms/activitiesform\";\nimport PerformanceMeasureForm from \"pages/methodologies/canadian/projectforms/performanceform\";\nimport RisksForm from \"pages/methodologies/canadian/projectforms/risksform\";\nimport BudgetForm from \"pages/methodologies/canadian/projectforms/budgetform\";\nimport ReportsForm from \"pages/methodologies/canadian/projectforms/reportsform\";\nimport ChangeNarrativeForm from \"pages/methodologies/canadian/projectforms/changenarrativeform\";\n\n// LICITATION FORMS\nimport LotForm from \"pages/methodologies/canadian/licitationforms/lotform\";\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\nimport TechnicalOfferForm from \"pages/methodologies/canadian/licitationforms/technicalofferform\";\nimport FinancialOfferForm from \"pages/methodologies/canadian/licitationforms/financialofferform\";\n\n// TUTORIALS\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\nimport SectorsTutorials from \"pages/methodologies/canadian/tutorials/sectorstutorial\";\nimport GuidesTutorials from \"pages/methodologies/canadian/tutorials/guidestutorial\";\nimport Tutorials from \"pages/methodologies/canadian/tutorials/methodologytutorials\";\nimport OutcomesTutorial from \"pages/methodologies/canadian/tutorials/outcomestutorial\";\nimport IndicatorsTutorial from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\nimport FinancingForm from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\n\n// DATABASE\nimport ActivitiesData from \"./database/activitiesdata\";\nimport BudgetsData from \"./database/budgetsdata\";\nimport CategoriesData from \"./database/categoriesdata\";\nimport CoinsData from \"./database/coinsdata\";\nimport CountriesData from \"./database/countriesdata\";\nimport DevelopmentGoalsData from \"./database/developmentgoalsdata\";\nimport IndicatorsData from \"./database/indicatorsdata\";\nimport LanguagesData from \"./database/languagesdata\";\nimport MethodologiesData from \"./database/methodologiesdata\";\nimport OffersData from \"./database/offersdata\";\nimport OutcomesData from \"./database/outcomesdata\";\nimport ProductsServicesData from \"./database/productsservicesdata\";\nimport ProgramsData from \"./database/programsdata\";\nimport ProjectGoalsData from \"./database/projectgoalsdata\";\nimport ProjectsData from \"./database/projectsdata\";\nimport SectorsData from \"./database/sectorsdata\";\nimport SourcesData from \"./database/sourcesdata\";\nimport StakeholdersData from \"./database/stakeholdersdata\";\nimport AssumptionsData from \"./database/assumptionsdata\";\nimport UsersData from \"./database/usersdata\";\n\nimport { TabSchema } from \"models/workplace\";\nimport EvaluationForm from \"./projectforms/evaluationform\";\nimport ApplicationForm from \"./projectforms/applicationform\";\n\nconst tabsConfiguration = new TabSchema([\n  {\n    key: \"key1\",\n    name: \"wikiml\",\n    icon: \"WebComponents\",\n    render: <Redirect to=\"/\" />,\n    // toolBar: \n  },\n  {\n    key: \"key2\",\n    name: \"project\",\n    icon: \"Page\",\n    render: <Label>ToolBar #1</Label>,\n    addtabs: true,\n    childtabs: [\n      {\n        key: \"key1\",\n        name: \"general\",\n        icon: \"Info\",\n        render: <GeneralForm />\n      },\n      {\n        key: \"key2\",\n        name: \"stakeholders\",\n        icon: \"Commitments\",\n        render: <StakeholdersForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"logicmodel\",\n        icon: \"LargeGrid\",\n        render: <LogicModelForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"activitiesmatrix\",\n        icon: \"GripperDotsVertical\",\n        render: <ActivitiesMatrixForm />,\n      },\n      {\n        key: \"key5\",\n        name: \"performance\",\n        icon: \"GripperDotsVertical\",\n        render: <PerformanceMeasureForm />,\n      },\n      {\n        key: \"key6\",\n        name: \"changenarrative\",\n        icon: \"GripperDotsVertical\",\n        render: <ChangeNarrativeForm />,\n      },\n      {\n        key: \"key7\",\n        name: \"risks\",\n        icon: \"DoubleDownArrow\",\n        render: <RisksForm />,\n      },\n      {\n        key: \"key8\",\n        name: \"budget\",\n        icon: \"PaymentCard\",\n        render: <BudgetForm />,\n      },\n      {\n        key: \"key9\",\n        name: \"financing\",\n        icon: \"People\",\n        render: <FinancingForm />,\n      },\n      {\n        key: \"key10\",\n        name: \"application\",\n        icon: \"GripperDotsVertical\",\n        render: <ApplicationForm />,\n      },\n      {\n        key: \"key11\",\n        name: \"reports\",\n        icon: \"ChartSeries\",\n        render: <ReportsForm />,\n      },\n      {\n        key: \"key12\",\n        name: \"evaluations\",\n        icon: \"AreaChart\",\n        render: <EvaluationForm />,\n      },\n    ],\n  },\n  {\n    key: \"key3\",\n    name: \"licitations\",\n    icon: \"Library\",\n    render: <Label>ToolBar #2</Label>,\n    childtabs: [\n      { key: \"key1\", name: \"lot\", icon: \"OEM\", render: <LotForm /> },\n      {\n        key: \"key2\",\n        name: \"specifications\",\n        icon: \"PageList\",\n        render: <SpecificationsForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"technical-offer\",\n        icon: \"PageListSolid\",\n        render: <TechnicalOfferForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"financial-offer\",\n        icon: \"Financial\",\n        render: <FinancialOfferForm />,\n      },\n    ],\n  },\n  {\n    key: \"key4\",\n    name: \"methodology\",\n    icon: \"StackIndicator\",\n    render: <Label>ToolBar #3</Label>,\n    childtabs: [\n      {\n        key: \"key1\",\n        name: \"forms\",\n        icon: \"PageData\",\n        render: <FormsTutorials />,\n      },\n      {\n        key: \"key2\",\n        name: \"sectors\",\n        icon: \"Sections\",\n        render: <SectorsTutorials />,\n      },\n      {\n        key: \"key3\",\n        name: \"guides\",\n        icon: \"GUID\",\n        render: <GuidesTutorials />,\n      },\n      {\n        key: \"key4\",\n        name: \"tutorials\",\n        icon: \"Video\",\n        render: <Tutorials />,\n      },\n      {\n        key: \"key5\",\n        name: \"outcomes\",\n        icon: \"ReportDocument\",\n        render: <OutcomesTutorial />,\n      },\n      {\n        key: \"key6\",\n        name: \"indicators\",\n        icon: \"CRMReport\",\n        render: <IndicatorsTutorial />,\n      },\n    ],\n  },\n  {\n    key: \"key5\",\n    name: \"database\",\n    icon: \"Database\",\n    render: <Label>ToolBar #4</Label>,\n    childtabs: [\n      {\n        key: \"key1\",\n        name: \"activities\",\n        icon: \"Database\",\n        render: <ActivitiesData/>,\n      },\n      {\n        key: \"key2\",\n        name: \"budgets\",\n        icon: \"Database\",\n        render: <BudgetsData/>,\n      },\n      {\n        key: \"key3\",\n        name: \"categories\",\n        icon: \"Database\",\n        render: <CategoriesData/>,\n      },\n      {\n        key: \"key4\",\n        name: \"coins\",\n        icon: \"Database\",\n        render: <CoinsData/>,\n      },\n      {\n        key: \"key5\",\n        name: \"countries\",\n        icon: \"Database\",\n        render: <CountriesData/>,\n      },\n      {\n        key: \"key6\",\n        name: \"developmentgoals\",\n        icon: \"Database\",\n        render: <DevelopmentGoalsData/>,\n      },\n      {\n        key: \"key7\",\n        name: \"indicators\",\n        icon: \"Database\",\n        render: <IndicatorsData/>,\n      },\n      {\n        key: \"key8\",\n        name: \"languages\",\n        icon: \"Database\",\n        render: <LanguagesData/>,\n      },\n      {\n        key: \"key9\",\n        name: \"methodologies\",\n        icon: \"Database\",\n        render: <MethodologiesData/>,\n      },\n      {\n        key: \"key10\",\n        name: \"offers\",\n        icon: \"Database\",\n        render: <OffersData/>,\n      },\n      {\n        key: \"key11\",\n        name: \"outcomes\",\n        icon: \"Database\",\n        render: <OutcomesData/>,\n      },\n      {\n        key: \"key12\",\n        name: \"productsservices\",\n        icon: \"Database\",\n        render: <ProductsServicesData/>,\n      },\n      {\n        key: \"key13\",\n        name: \"programs\",\n        icon: \"Database\",\n        render: <ProgramsData/>,\n      },\n      {\n        key: \"key14\",\n        name: \"projectgoals\",\n        icon: \"Database\",\n        render: <ProjectGoalsData/>,\n      },\n      {\n        key: \"key15\",\n        name: \"projects\",\n        icon: \"Database\",\n        render: <ProjectsData/>,\n      },\n      {\n        key: \"key16\",\n        name: \"sectors\",\n        icon: \"Database\",\n        render: <SectorsData/>,\n      },\n      {\n        key: \"key17\",\n        name: \"sources\",\n        icon: \"Database\",\n        render: <SourcesData/>,\n      },\n      {\n        key: \"key18\",\n        name: \"stakeholders\",\n        icon: \"Database\",\n        render: <StakeholdersData/>,\n      },\n      {\n        key: \"key19\",\n        name: \"assumptions\",\n        icon: \"Database\",\n        render: <AssumptionsData/>,\n      },\n      {\n        key: \"key20\",\n        name: \"users\",\n        icon: \"Database\",\n        render: <UsersData/>,\n      },\n    ],\n  },\n  {\n    key: \"key6\",\n    name: \"more\",\n    icon: \"MoreVertical\",\n    render: <Label>ToolBar #5</Label>,\n  },\n]);\n\nexport default tabsConfiguration;","import React, { ReactNode } from \"react\";\nimport { Label } from \"@fluentui/react\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport IState from \"models/state\";\nimport IWorkplaceConfiguration, { TabSchema } from \"models/workplace\";\nimport tabsConfiguration from \"pages/methodologies/canadian/tabsconfiguration\";\n\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\n\nconst initialState: IWorkplaceConfiguration = {\n    tabsSchema: tabsConfiguration,\n    latestMenuTab: \"key2\",\n    configuration: { // menuTabKey : { toolBarComponentToRender, latestFormTab, pageComponentToRender}\n        key1: { tools: <Label>ToolBar #1</Label>, tab: \"key1\", page: <React.Fragment /> },\n        key2: { tools: <Label>ToolBar #2</Label>, tab: \"key1\", page: <GeneralForm /> },\n        key3: { tools: <Label>ToolBar #3</Label>, tab: \"key1\", page: <SpecificationsForm /> },\n        key4: { tools: <Label>ToolBar #4</Label>, tab: \"key1\", page: <FormsTutorials /> },\n        key5: { tools: <Label>ToolBar #5</Label>, tab: \"key1\", page: <React.Fragment /> },\n        key6: { tools: <Label>ToolBar #6</Label>, tab: \"key1\", page: <React.Fragment /> },\n    }\n};\n\nconst workplaceSlice = createSlice({\n    name: \"workplace\",\n    initialState,\n    reducers: {\n        setTabSchema: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabs: TabSchema }>) => {\n            state.tabsSchema = action.payload.tabs;\n        },\n        setLatestMenuTab: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabKey: string }>) => {\n            state.latestMenuTab = action.payload.tabKey;\n        },\n        setConfiguration: (state: IWorkplaceConfiguration, action: PayloadAction<{ key: string, tab: string, page: ReactNode }>) => {\n            const { key, tab, page } = action.payload;\n            const { tools } = state.configuration[key];\n            state.configuration[key] = { tools, tab, page }\n        }\n    },\n});\n\nexport const selectWorkplaceConfig = (state: IState) => state.workplace;\nexport const { setTabSchema, setLatestMenuTab, setConfiguration } = workplaceSlice.actions;\n\nexport default workplaceSlice.reducer;\n","import { ReactNode } from \"react\"\n\n// Workplace Configuration\ntype FormRender = {\n  tab: string;\n  page: ReactNode;\n  tools: ReactNode;\n}\n\ntype FormRenderDictionary = {\n  [key: string]: FormRender\n}\n\nexport default interface IWorkplaceConfiguration {\n  tabsSchema: TabSchema,\n  latestMenuTab: string,\n  configuration: FormRenderDictionary\n}\n\n// tabSchema\nexport type Tab = {\n  key: string;\n  name: string;\n  icon: string;\n  render?: JSX.Element;\n  addtabs?: boolean;\n  childtabs?: Tab[];\n  onClick?: Function;\n};\n\nexport class TabSchema {\n\n  tabs: Tab[];\n\n  constructor(tabs: Tab[]) {\n    this.tabs = tabs\n  }\n\n  findByKey(key: string): Tab {\n    return this.tabs.find(tab => tab.key === key) || {} as Tab\n  }\n\n  findChildByKey(key: string, childkey: string): Tab {\n    const parenttab = this.tabs.find(tab => tab.key === key) || {} as Tab\n    let child;\n\n    if (parenttab.childtabs) {\n      child = parenttab.childtabs.find(tab => tab.key === childkey)\n    }\n    return child || {} as Tab\n  }\n\n  findByName(name: string): Tab {\n    return this.tabs.find(tab => tab.name === name) || {} as Tab\n  }\n\n  findChildByName(name: string): Tab {\n    for (let tab of this.tabs) {\n      if (tab.childtabs) {\n        const tabFound = tab.childtabs.find(childTab => childTab.name === name) || {} as Tab\n        if (tabFound) return tabFound;\n      }\n    }\n\n    return {} as Tab;\n  }\n\n  // getInitialConfiguration() : FormRenderDictionary {\n  //   this.tabs.map()\n  // } \n};","export enum ECanadianSector {\n    \"Agriculture and Nutrition\",\n    \"Economical Growth\",\n    \"Human Rights\",\n    \"Human Development\",\n    \"Energy\",\n    \"Infrastructure\",\n    \"Enviroment\",\n    \"Migration & Refuge\",\n    \"Information & Comunication Technology\",\n}\n\nexport enum EGermanSector {\n    \"Agriculture and Nutrition\",\n    \"Economical Growth\",\n    \"Human Rights\",\n    \"Human Development\",\n    \"Energy\",\n    \"Infrastructure\",\n    \"Enviroment\",\n    \"Migration & Refuge\",\n    \"Information & Comunication Technology\",\n}","import { IGroup } from '@fluentui/react';\nimport INodeInfo from 'models/nodeinfo';\n\nexport enum CategoryName { \"beneficiary\", \"intermediary\", \"implementer\", \"donor\", \"other\" }\n\nexport interface Category {\n    name: CategoryName,\n    minMain?: number,\n    hasNoMain?: boolean\n}\n\nexport const categories = {\n    beneficiary: { name: 0, minMain: 0 } as Category,\n    intermediary: { name: 1, minMain: 1 } as Category,\n    implementer: { name: 2, minMain: 1 } as Category,\n    donor: { name: 3, minMain: 1 } as Category,\n    other: { name: 4, hasNoMain: true } as Category,\n}\n\nexport interface IStakeholder {\n    id: number;\n    name: string;\n    category: Category;\n    main?: boolean;\n    orderInGroup: number;\n}\n\nexport default class Stakeholders {\n    list: IStakeholder[];\n\n    constructor(list: IStakeholder[]) {\n        this.list = list;\n    }\n\n    getStakeholdersByCategory(category: CategoryName): IStakeholder[] {\n        switch (category) {\n            case 0:\n                return this.getBeneficaries();\n            case 1:\n                return this.getIntermediaries();\n            case 2:\n                return this.getImplementors();\n            case 3:\n                return this.getDonors();\n            default:\n                return this.getOthers();\n        }\n    }\n\n    getBeneficaries(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 0);\n    }\n\n    getIntermediaries(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 1);\n    }\n\n    getImplementors(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 2);\n    }\n\n    getDonors(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 3);\n    }\n\n    getOthers(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 4);\n    }\n\n    addStakeholder(order: number, category: Category): Stakeholders {\n        // new Stakeholder\n        const newSh = {\n            id: this.list.length,\n            name: \"\",\n            category: category,\n            main: false,\n            orderInGroup: order + 1\n        } as IStakeholder;\n\n        // Fix rest of orders\n        this.getStakeholdersByCategory(category.name).forEach(sibling => {\n            if (sibling.orderInGroup >= newSh.orderInGroup) {\n                sibling.orderInGroup += 1;\n            }\n        })\n\n        // now push new element after orders have been fixed\n        this.list.push(newSh)\n        this.list = this.list.sort((a, b) => a.orderInGroup - b.orderInGroup)\n\n        return this;\n    }\n\n    deleteStakeholder(id: number): Stakeholders {\n        const node = this.list.find(sh => sh.id === id);\n\n        if (node) {\n            // Fix rest of orders\n            this.getStakeholdersByCategory(node.category.name).forEach(sibling => {\n                if (sibling.orderInGroup >= node.orderInGroup) {\n                    sibling.orderInGroup -= 1;\n                }\n            })\n\n            // if the removed node was the main stakeholder, then asign other stakeholder\n            if (node.main && node.category.minMain !== 0) {\n                this.getStakeholdersByCategory(node.category.name).find(sh => sh.orderInGroup === 0)!.main = true;\n            }\n\n            // Remove node\n            this.list = this.list.filter(sh => sh.id !== id).sort((a, b) => a.id - b.id);\n        }\n        return this;\n    }\n\n    setMainStakeholder(id: number): Stakeholders {\n        const newMain = this.list.find(sh => sh.id === id)!;\n        const previousMain = this.getStakeholdersByCategory(newMain.category.name).find(sh => sh.main === true)!\n\n        // Unset previous main if there is one\n        if(previousMain) previousMain.main = false;\n\n        // Set new main\n        newMain.main = true;\n\n        return this;\n    }\n\n    buidStakeholdersList(): IStakholderInfo[] {\n        // Sort items by category and then by id\n        return this.list.sort((a, b) => a.category.name - b.category.name || a.orderInGroup - b.orderInGroup).map(sh => {\n            return {\n                id: sh.id,\n                name: sh.name,\n                category: sh.category,\n                main: sh.main,\n                hasSiblings: this.getStakeholdersByCategory(sh.category.name).length > 1,\n                orderInGroup: sh.orderInGroup\n            } as IStakholderInfo\n        });\n    }\n\n    buildStakeholdersGroups(translator: Function): IGroup[] {\n        const benefCount = this.getBeneficaries().length;\n        const intermCount = this.getIntermediaries().length;\n        const inpemCount = this.getImplementors().length;\n        const donorCount = this.getDonors().length;\n        const otherCount = this.getOthers().length;\n\n        const counts = [benefCount, intermCount, inpemCount, donorCount, otherCount]\n        let index = 0;\n\n        let groups = [] as IGroup[];\n\n        for (var key in CategoryName) {\n            if (CategoryName[key]) {\n                groups.push({\n                    key: `stakeholder${key}`, name: translator(CategoryName[key]), startIndex: index, count: counts[key]\n                })\n                index += counts[key];\n            }\n            else break;\n        }\n        return groups;\n    }\n}\n\nexport interface IStakholderInfo extends INodeInfo {\n    id: number;\n    name: string;\n    category: Category;\n    main: boolean;\n    orderInGroup: number;\n    hasSiblings?: boolean;\n}","import { toNumber } from \"lodash\";\nimport { Graph, Edge } from \"../tree\";\n\nexport type LogicmodelVertex = {\n    id: string;\n    text: string;\n    level: number;\n}\n\nexport default class LogicmodelGraph extends Graph<LogicmodelVertex> {\n\n    setNodeText(id: string, char: string): LogicmodelGraph {\n        const node = this.vertex.find(v => v.id === id);\n\n        if (node) {\n            node.text += char;\n        }\n\n        return this;\n    }\n\n    getInmediateTree(id: string) {\n        const outputs = this.edges.filter(e => e.from === id).map(e => this.findNode(e.to));\n\n        return { node: this.findNode(id), outputs: outputs };\n    }\n\n    getParentId(id: string, level: number): string {\n        return id.slice(0, level).padEnd(4, \"0\");\n    }\n\n    addNode(parentId: string): LogicmodelGraph {\n        const parentNode = this.findNode(parentId)!;\n\n        const newNode = {\n            id: this.generateId(parentId, parentNode.level, this.findChildrenIds(parentId).length),\n            text: \"\",\n            level: parentNode.level + 1\n        } as LogicmodelVertex\n\n        // Add to graph\n        this.vertex.push(newNode);\n        this.edges.push({ from: parentNode.id, to: newNode.id } as Edge);\n\n        return this\n    }\n\n    addSibling(siblingId: string) {\n\n        const { id, level, order } = this.generateSiblingId(siblingId);\n\n        const newNode = {\n            id: id,\n            text: \"added node \" + id,\n            level: level\n        } as LogicmodelVertex\n\n        // Fix siblings ids\n        const parentId = this.getParentId(id.toString(), level);\n        const siblingsIds = this.findChildrenIds(parentId).sort();\n\n        // Updating siblings vertex and edges and its descendant's\n        for (let i = order - 1; i < siblingsIds.length; i++) {\n            const oldId = siblingsIds[i];\n\n            // Find sibling\n            const childNode = this.findNode(oldId);\n\n            if (childNode) {\n                // Update sibling vertex & edges\n                const newInfo = this.generateSiblingId(oldId);\n                childNode.id = newInfo.id;\n\n                this.edges = this.edges.map(e => ({\n                    from: e.from === oldId ? newInfo.id : e.from,\n                    to: e.to === oldId ? newInfo.id : e.to\n                } as Edge));\n\n                // Update descendants\n                const commonRoot = id.substr(0, level + 1);\n\n                const descendants = this.findAllDescendants(oldId);\n\n                descendants.forEach(desc => {\n                    // update vertex id\n                    const n = toNumber(desc.id.charAt(desc.level));\n                    const oldDescId = desc.id;\n                    desc.id = this.generateId(childNode.id, desc.level, n);\n\n                    // update\n                    this.edges = this.edges.map(e => ({\n                        from: e.from === oldDescId ? desc.id : e.from,\n                        to: e.to === oldDescId ? desc.id : e.to\n                    } as Edge));\n                })\n            }\n        }\n\n        // Add new sibling to graph\n        this.vertex.push(newNode);\n        this.edges.push({ from: parentId, to: newNode.id } as Edge);\n\n        this.vertex = this.vertex.sort((a, b) => toNumber(a.id) - toNumber(b.id));\n        return this\n    }\n\n    deleteNode(nodeId: string): LogicmodelGraph {\n        const node = this.findNode(nodeId);\n\n        if (node) {\n            // Remove from graph\n            this.vertex = this.vertex.filter(v => v.id !== nodeId);\n            this.edges = this.edges.filter(e => e.from !== nodeId && e.to !== nodeId);\n\n            // Update children ids\n            const parentId = this.getParentId(nodeId, node.level);\n            const childrenIds = this.findChildrenIds(parentId).sort();\n\n            // Updating vertex and edges\n            for (let i = 0; i < childrenIds.length; i++) {\n                const oldId = childrenIds[i];\n\n                const childNode = this.findNode(oldId);\n                if (childNode) {\n                    const newId = this.generateId(parentId, this.getNodeLevel(parentId), i);\n                    childNode.id = newId;\n\n                    this.edges = this.edges.map(e => ({\n                        from: e.from === oldId ? newId : e.from,\n                        to: e.to === oldId ? newId : e.to\n                    } as Edge));\n                }\n            }\n        }\n        return this;\n    }\n}\n\n// Examples\nexport const vertexExample: LogicmodelVertex[] = [\n    {\n        id: \"1000\",\n        text:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\n        level: 0,\n    },\n    {\n        id: \"1100\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1110\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1111\",\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\n        level: 3,\n    },\n    {\n        id: \"1120\",\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1121\",\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\n        level: 3,\n    },\n    {\n        id: \"1200\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1210\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1211\",\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\n        level: 3,\n    },\n    {\n        id: \"1220\",\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1221\",\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\n        level: 3,\n    },\n];\n\nexport const edgesExample: Edge[] = [\n    // Edges from 1\n    { from: \"1000\", to: \"1100\" },\n    { from: \"1000\", to: \"1200\" },\n\n    // Edges from 1.1\n    { from: \"1100\", to: \"1110\" },\n    { from: \"1100\", to: \"1120\" },\n\n    // Edges from 1.1.1\n    { from: \"1110\", to: \"1111\" },\n    // Edges from 1.1.2\n    { from: \"1120\", to: \"1121\" },\n\n    // Edges from 1.2\n    { from: \"1200\", to: \"1210\" },\n    { from: \"1200\", to: \"1220\" },\n\n    // Edges from 1.2.1\n    { from: \"1210\", to: \"1211\" },\n    // Edges from 1.2.2\n    { from: \"1220\", to: \"1221\" },\n];\n\nexport const logicmodelGraphExample = new LogicmodelGraph(vertexExample, edgesExample)\n","import { toNumber } from \"lodash\";\nimport { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\n\nexport type Vertex = {\n    id: string;\n}\n\nexport type Edge = {\n    from: string;\n    to: string;\n}\n\ninterface IGraph<T> {\n    vertex: T[];\n    edges: Edge[];\n}\n\nexport type Tree<T extends Vertex | LogicmodelVertex | ActivityVertex> = {\n    node: T;\n    children: Tree<T>[];\n}\n\nexport class Graph<T extends Vertex | LogicmodelVertex | ActivityVertex> implements IGraph<T> {\n\n    vertex: T[];\n    edges: Edge[];\n\n    constructor(vertex: T[], edges: Edge[]) {\n        this.vertex = vertex;\n        this.edges = edges;\n    };\n\n    findNode(id: string): T {\n        return this.vertex.find(v => v.id === id) || {} as T;\n    }\n\n    getNodeLevel(id: string): number {\n        return 3 - id.split(\"\").filter(c => c === \"0\").length;\n    }\n\n    findChildrenIds(parentId: string): string[] {\n        return this.edges.filter(e => e.from === parentId).map(e => e.to);\n    }\n\n    generateId(parentId: string, level: number, num: number): string {\n        return parentId.slice(0, level + 1).concat((num + 1).toString()).padEnd(4, \"0\");\n    }\n\n    generateSiblingId(siblingId: string, num?: number) {\n        // Get level\n        const level = this.getNodeLevel(siblingId);\n\n        // Generate new id\n        let id = siblingId.slice(0, level);\n        const order = num ? num : toNumber(siblingId[level]) + 1;\n        id += order.toString();\n        id = id.padEnd(4, \"0\");\n        return { id: id.toString(), level: level, order };\n    }\n\n    findAllDescendants(id: string) {\n        const level = this.getNodeLevel(id);\n        const commonRoot = id.substr(0, level + 1);\n\n        return this.vertex.filter(v => v.id.substr(0, level + 1) === commonRoot);\n    }\n\n    buildTree(): Tree<T> {\n        let tree: Tree<T> = { node: this.findNode(\"1000\")!, children: [] };\n\n        return this.buildTreeRec(tree);\n    }\n\n    private buildTreeRec(tree: Tree<T>) {\n\n        const childVertex = this.edges.filter(edge => edge.from === tree.node.id).map(edge => this.findNode(edge.to)!);\n\n        tree.children = childVertex.map(child => ({ node: child, children: [] } as Tree<T>));\n\n        tree.children.forEach(child => {\n            this.buildTreeRec(child);\n        })\n\n        return tree;\n    }\n}\n","import { toNumber } from \"lodash\";\nimport INodeInfo from \"models/nodeinfo\";\nimport { Edge } from \"../tree\";\nimport LogicmodelGraph, { LogicmodelVertex } from \"./logicmodel\"\n\nexport type ActivityVertex = {\n    outputId: string;\n    id: string;\n    text: string;\n}\n\nexport default class LogicModelActivitiesMatrix extends LogicmodelGraph {\n\n    activities: ActivityVertex[];\n\n    constructor(vertex: LogicmodelVertex[], edges: Edge[], activities: ActivityVertex[]) {\n        super(vertex, edges);\n        this.activities = activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\n    }\n\n    findActivitiesByOutput(outputId: string) {\n        return this.activities.filter(a => a.outputId === outputId);\n    }\n\n    addActivityToOutput(outputId: string, id: string): LogicModelActivitiesMatrix {\n        // Update siblingsIds below\n        let i = toNumber(id)\n        this.activities.filter(a => a.outputId === outputId && toNumber(a.id) >= i).sort().forEach((sibling, key) => {\n            sibling.id = (i + key + 1).toString();\n        })\n\n        // Create nwe activity\n        const newActivity = {\n            outputId: outputId,\n            id: id,\n            text: \"\",\n        } as ActivityVertex\n\n        // Add to graph\n        this.activities.push(newActivity);\n        this.activities = this.activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\n        return this\n    }\n\n    deleteActivity(outputId: string, id: string): LogicModelActivitiesMatrix {\n        // Delete from activities\n        this.activities = this.activities.filter(a => !(a.id === id && a.outputId === outputId));\n\n        // Update children ids\n        this.activities.filter(a => a.outputId === outputId).sort().forEach((child, key) => {\n            child.id = key.toString();\n        });\n\n        return this;\n    }\n\n    buidOutputsActivityList() {\n        // get all Inmediate Outcomes Ids\n        const inmediatesIds = this.vertex.filter(v => v.level === 2).sort((a, b) => toNumber(a.id) - toNumber(b.id)).map(v => v.id);\n        const items: IActivityInfo[] = [];\n\n        inmediatesIds.forEach(id => {\n            const { node, outputs } = this.getInmediateTree(id);\n\n            // Push Inmediate Outcome\n            items.push({\n                id: node.id,\n                name: \"inmediate-outcomes\",\n                level: 0,\n                description: node.text\n            } as IActivityInfo);\n\n            // Push Outputs & Activities\n            outputs.forEach(output => {\n                // Push Output\n                items.push({\n                    id: output.id,\n                    name: \"outputs\",\n                    level: 1,\n                    description: output.text\n                } as IActivityInfo)\n\n                // Push Activities\n                const siblings = this.findActivitiesByOutput(output.id);\n                siblings.forEach(activity => {\n                    items.push({\n                        id: output.id + activity.id,\n                        name: \"activity\",\n                        level: 2,\n                        description: activity.text,\n                        hasSiblings: siblings.length > 1\n                    } as IActivityInfo)\n                })\n            })\n        })\n\n        return items;\n    }\n}\n\nexport interface IActivityInfo extends INodeInfo {\n    id: string;\n    name: string;\n    level: number;\n    description: string;\n    hasSiblings?: boolean;\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport IState from \"models/state\";\nimport { IProjectInfo } from \"models/project\";\nimport { ECanadianSector } from \"models/sector\";\nimport IProject from \"models/project\";\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\nimport LogicModelActivitiesMatrix, { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\nimport { Edge } from \"models/tree\";\nimport Stakeholders, { categories } from \"models/canadian/stakeholders\";\n\n// Examples - Set initial in blank\nconst initialProjectInfoState: IProjectInfo<ECanadianSector> = {\n    name: \"Large Project Name Test\",\n    shortname: \"Short Project Name\",\n    description: \"Lorem ipsum dolre description asedore son lisiu tredo.\",\n    methodology: \"Canadian Test\",\n    status: \"pending\",\n    wikicode: \"X54S0\",\n    organization: \"Organization Test\",\n    intermediary: \"Intermediary Organization Test\",\n    duration: 34,\n    country: \"Country Test\",\n    program: \"Program Test\",\n    sector: ECanadianSector.Energy,\n    donorcode: \"2F8HT\",\n    leader: { name: \"Leader Test\", email: \"test@gmail.com\" },\n    team: [\n        { name: \"team1\", email: \"team-test@gmal.com\" },\n        { name: \"team2\", email: \"team-test@gmal.com\" },\n    ],\n    currency: \"Euro\",\n    budget: 200.00,\n    budgetItems: 22.00,\n    budgetAct: 33.00,\n    budgetFinanced: 150.00,\n    solicitedBudget: 44.00,\n    approvedBudget: 44.00,\n    approvedDate: new Date(),\n    finalDate: new Date(),\n    initialDate: new Date(),\n    donor: \"Donor Test\",\n    contribution: 1000.00,\n};\n\nconst vertexExample: LogicmodelVertex[] = [\n    {\n        id: \"1000\",\n        text:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\n        level: 0,\n    },\n    {\n        id: \"1100\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1110\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1111\",\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\n        level: 3,\n    },\n    {\n        id: \"1120\",\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1121\",\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\n        level: 3,\n    },\n    {\n        id: \"1200\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1210\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1211\",\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\n        level: 3,\n    },\n    {\n        id: \"1220\",\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1221\",\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\n        level: 3,\n    },\n];\n\nconst edgesExample: Edge[] = [\n    // Edges from 1\n    { from: \"1000\", to: \"1100\" },\n    { from: \"1000\", to: \"1200\" },\n\n    // Edges from 1.1\n    { from: \"1100\", to: \"1110\" },\n    { from: \"1100\", to: \"1120\" },\n\n    // Edges from 1.1.1\n    { from: \"1110\", to: \"1111\" },\n    // Edges from 1.1.2\n    { from: \"1120\", to: \"1121\" },\n\n    // Edges from 1.2\n    { from: \"1200\", to: \"1210\" },\n    { from: \"1200\", to: \"1220\" },\n\n    // Edges from 1.2.1\n    { from: \"1210\", to: \"1211\" },\n    // Edges from 1.2.2\n    { from: \"1220\", to: \"1221\" },\n];\n\nconst actvitiesExamples: ActivityVertex[] = [\n    {\n        outputId: \"1111\",\n        id: \"0\",\n        text: \"\"\n    },\n    {\n        outputId: \"1111\",\n        id: \"1\",\n        text: \"\"\n    },\n    {\n        outputId: \"1111\",\n        id: \"2\",\n        text: \"\"\n    },\n    {\n        outputId: \"1121\",\n        id: \"0\",\n        text: \"\"\n    },\n    {\n        outputId: \"1121\",\n        id: \"1\",\n        text: \"\"\n    },\n    {\n        outputId: \"1211\",\n        id: \"0\",\n        text: \"\"\n    },\n    {\n        outputId: \"1211\",\n        id: \"1\",\n        text: \"\"\n    },\n    {\n        outputId: \"1211\",\n        id: \"2\",\n        text: \"\"\n    },\n]\n\nconst actmatrixGraphExample = new LogicModelActivitiesMatrix(vertexExample, edgesExample, actvitiesExamples);\n\nconst stakeholders = new Stakeholders([\n    {\n        id: 0,\n        name: \"Stakeholder1 Ben\",\n        category: categories.beneficiary,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 1,\n        name: \"Stakeholder2 Ben\",\n        category: categories.beneficiary,\n        main: false,\n        orderInGroup: 1\n    },\n    {\n        id: 2,\n        name: \"Stakeholder3 Ben\",\n        category: categories.beneficiary,\n        main: false,\n        orderInGroup: 2\n    },\n    {\n        id: 3,\n        name: \"Stakeholder4 Don\",\n        category: categories.donor,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 4,\n        name: \"Stakeholder5 Imp\",\n        category: categories.implementer,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 5,\n        name: \"Stakeholder6 Int\",\n        category: categories.intermediary,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 6,\n        name: \"Stakeholder7 Int\",\n        category: categories.intermediary,\n        main: false,\n        orderInGroup: 1\n    },\n    {\n        id: 7,\n        name: \"Stakeholder8 Other\",\n        category: categories.other,\n        main: false,\n        orderInGroup: 0\n    },\n])\n\nconst initialState: IProject = {\n    info: initialProjectInfoState,\n    methodology: \"canadian\",\n    forms: [\n        { name: \"logicModelActivities\", structure: actmatrixGraphExample },\n        { name: \"stakeholders\", structure: stakeholders },\n    ],\n}\n\nconst projectSlice = createSlice({\n    name: \"project\",\n    initialState,\n    reducers: {\n        setCurrentProject: (state, action) => {\n            state = action.payload;\n        },\n    },\n});\n\nexport const selectProject = (state: IState) => state.project;\nexport const { setCurrentProject } = projectSlice.actions;\n\nexport default projectSlice.reducer;\n"],"sourceRoot":""}