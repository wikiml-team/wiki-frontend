{"version":3,"sources":["components/form/debugformik.tsx","components/sidepanel/formcontents.tsx","components/help/contextualhelp.tsx","components/form/autosaveform.tsx","components/inputs/dropdown.tsx","components/inputs/datepicker.tsx","pages/methodologies/canadian/projectforms/generalform.tsx","pages/methodologies/canadian/projectforms/stakeholdersform.tsx","pages/methodologies/canadian/projectforms/activitiesform.tsx","pages/methodologies/canadian/projectforms/performanceform.tsx","pages/methodologies/canadian/projectforms/risksform.tsx","pages/methodologies/canadian/projectforms/budgetform.tsx","pages/methodologies/canadian/projectforms/reportsform.tsx","components/inputs/logictext.tsx","pages/methodologies/canadian/projectforms/logicmodelform.tsx","pages/autosave.js","pages/main.tsx","components/styled/pagecontainer.tsx","components/styled/sticky.tsx","i18n.js","components/fullscreentoogler.js","components/menus/commands/items.tsx","store/slices/languageslice.tsx","components/sidepanel/languagepanel.tsx","themes/office.tsx","store/slices/themeslice.tsx","components/styled/shapes.tsx","components/pickers/themepicker.tsx","components/sidepanel/settingspanel.tsx","components/menus/commands/custombuttons.tsx","components/menus/commands/index.tsx","components/menus/mainmenu/pivotbar.tsx","components/menus/mainmenu/teampile.tsx","components/menus/mainmenu/index.tsx","components/menus/mainmenu/toolbar.tsx","components/menus/footer/pagestabs.tsx","components/menus/footer/addbutton.tsx","components/menus/footer/index.tsx","layouts/workplace.tsx","routes.tsx","App.tsx","reportWebVitals.ts","store/slices/settingslice.tsx","store/index.tsx","index.tsx","components/inputs/text.tsx","pages/methodologies/canadian/projectforms/changenarrativeform.tsx","pages/methodologies/canadian/licitationforms/lotform.tsx","pages/methodologies/canadian/licitationforms/specificationsform.tsx","pages/methodologies/canadian/licitationforms/technicalofferform.tsx","pages/methodologies/canadian/licitationforms/financialofferform.tsx","pages/methodologies/canadian/tutorials/formstutorial.tsx","pages/methodologies/canadian/tutorials/sectorstutorial.tsx","pages/methodologies/canadian/tutorials/guidestutorial.tsx","pages/methodologies/canadian/tutorials/methodologytutorials.tsx","pages/methodologies/canadian/tutorials/outcomestutorial.tsx","pages/methodologies/canadian/tutorials/indicatorstutorial.tsx","store/slices/workplaceslice.tsx","pages/methodologies/canadian/tabsconfiguration.tsx","models/workplace.ts","models/sector.ts","models/canadian/stakeholders.ts","models/canadian/logicmodel.ts","models/tree.ts","models/canadian/actvitiesmatrix.ts","store/slices/projectslice.tsx"],"names":["Debug","style","margin","borderRadius","background","boxShadow","textTransform","fontSize","borderTopLeftRadius","borderTopRightRadius","fontWeight","padding","color","letterSpacing","validationSchema","validate","rest","overflowX","JSON","stringify","StakehoderFormPanel","t","useTranslation","tokens","childrenGap","Item","label","options","LogicModelOutputFormPanel","LogicModelOutcomeFormPanel","ContextualHelpContent","content","definition","example","format","guide","tips","columns","key","name","fieldName","minWidth","data","onRender","item","isMultiline","base","titles","filter","i","items","groups","index","title","push","startIndex","count","autoHide","autoHeight","autoHeightMin","autoHeightMax","selectionMode","SelectionMode","none","isHeaderVisible","AutoSave","debounceMs","formik","useFormikContext","React","useState","lastSaved","setLastSaved","debouncedSubmit","useCallback","debounce","submitForm","then","Date","toISOString","useEffect","values","isSubmitting","AutoSaveFormik","props","initialValues","onSubmit","children","DropdownFieldInput","field","form","Dropdown","onGetErrorMessage","value","touched","errors","deferredValidationTime","DateFieldInput","DayPickerStrings","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","minDate","useConst","addMonths","now","DatePicker","placeholder","strings","styles","root","height","GeneralForm","classes","mergeStyleSets","circle","width","headerStackProps","horizontal","horizontalAlign","paddingRight","separatorProps","alignContent","generalInfo","useSelector","selectProject","info","initialDate","setInitialDate","approvedDate","setApprovedDate","initValues","shortName","shortname","largeName","description","country","impOrganization","organization","intOrganization","intermediary","budget","budgetPerItems","budgetItems","budgetPerAct","budgetAct","budgetFinanced","budgetSolicited","solicitedBudget","program","sector","duration","donor","approvedBudget","finalDate","contribution","object","shape","string","max","required","min","currency","number","setLocale","mixed","default","countries","text","setSubmitting","alert","dir","component","TextFieldInput","sizeLg","multiline","autoAdjustHeight","marginTop","sizeSm","sizeMd","Separator","PrimaryButton","className","Stack","Label","status","wikicode","suffix","prefix","readOnly","donorcode","onSelectDate","date","StandardField","TextField","grow","generalFormViewMode","StakeholdersForm","stakeholdersModel","forms","find","structure","initialItems","buidStakeholdersList","buildStakeholdersGroups","setItems","stakeholders","setStakeholders","useBoolean","panelIsOpen","openPanel","setTrue","dismissPanel","setFalse","maxWidth","mainStakeholderRender","ariaLabel","isResizable","isPadded","fieldRender","operatorsRender","palette","useTheme","dropdownStyles","dropdown","border","neutralLighter","selectors","red","commandStyles","alignSelf","rootHovered","backgroundColor","themeLighter","icon","black","defaultSelectedKey","id","toString","iconProps","iconName","onClick","bossIconStyles","FontWeights","bold","iconStyles","neutralSecondary","main","category","setMainStakeholder","handleChangeMainStakeholder","Fragment","addStakeholder","orderInGroup","handleAddStakeholder","hasSiblings","deleteStakeholder","handleDeleteStakeholder","onRenderFooterContent","marginRight","isOpen","isHiddenOnDismiss","headerText","onDismiss","isFooterAtBottom","ActivitiesMatrixForm","logicModelActivitiesMatrix","buidOutputsActivityList","activitiesMatrix","setActivitiesMatrix","textAlign","isRowHeader","codeRender","descriptionRender","helpPanelIsOpen","openHelpPanel","dismissHelpPanel","variant","level","html","textFieldProps","rows","resizable","defaultValue","fieldGroup","neutralTertiary","itemId","outputId","slice","activityId","addActivityToOutput","handleAddActivity","toNumber","deleteActivity","handleDeleteActivity","onRenderRow","customStyles","FontSizes","medium","themeLighterAlt","white","PerformanceMeasureForm","RisksForm","BudgetForm","ReportsForm","LogicTextFieldInput","nodeTree","handleAddChild","handleDelete","hanldeOpenOutputPanel","hanldeOpenOutcomePanel","handleOutcomeHelpPanel","handleOutputHelpPanel","node","rootStackItemProps","inputTextFieldProps","neutralQuaternary","borderTop","Icon","LogicTextFieldHeader","map","child","dispatch","useDispatch","selectWorkplaceConfig","tabsSchema","latestMenuTab","tooltipContent","canAdd","canDelete","length","isAnOputut","titleStyles","borderBottom","neutralLight","Text","TooltipHost","IconButton","formtabKey","findChildByName","renderPage","findChildByKey","render","setConfiguration","tab","page","handleRedirectToActivity","LogicModelForm","logicModelGraph","graph","setGraph","buildTree","treeToRender","setTreeToRender","outputPanelIsOpen","openOutputPanel","dismissOutputPanel","outcomePanelIsOpen","openOutcomePanel","dismissOutcomePanel","outcomeHelpPanelIsOpen","openOutcomeHelpPanel","dismissOutcomeHelpPanel","outputHelpPanelIsOpen","openOutputHelpPanel","dismissOutputHelpPanel","vertex","v","LogicmodelLabels","siblingId","addNode","deleteNode","PanelsRender","handleDismissPanel","DefaultButton","Panel","textStyles","TextMediumPlus","verticalAlign","maxHeight","AutoSavingForm2","firstName","lastName","email","colors","Promise","resolve","setTimeout","console","log","htmlFor","type","as","fieldProps","Main","to","Container","styled","div","PageContainer","spring","scrollHeight","Fixed","attrs","direction","Sticky","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","resources","en","English","es","Spanish","interpolation","escapeValue","fullscreenToggler","elem","document","documentElement","fullscreenElement","exitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","loadNamespaces","iconOnly","overflowItems","LanguageSlice","createSlice","initialState","language","reducers","setLanguage","state","action","payload","changeLanguage","setEnglish","setSpanish","setGerman","selectLanguage","actions","LanguagePanel","lang","suportedLangs","undefined","onChange","event","themeWord","createTheme","themePrimary","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralQuaternaryAlt","neutralTertiaryAlt","neutralPrimaryAlt","neutralPrimary","neutralDark","themeExcel","themePowerPoint","themeTeams","colorCells","themeSlice","setTheme","loadTheme","setThemeWord","setThemeExcel","setThemePowerPoint","setThemeTeams","StyledCircle","Circle","circleprops","size","classnames","ThemePicker","handler","cursor","cell","SettingsPanel","nameTextFieldStyles","borderColor","Persona","PersonaSize","size40","initialsColor","PersonaInitialsColor","cyan","CustomBarButton","itemStyles","rootPressed","iconHovered","iconPressed","labelHovered","CommandBarButton","concatStyleSets","CustomOverflowButton","rootExpanded","rootExpandedHovered","menuIcon","overflowProps","menuProps","subComponentStyles","menuItem","CommandMenu","OpenLanguagePanel","OpenSettingsPanel","comandBarStyles","position","top","left","transform","languagePanelOpen","openLanguagePanel","dismissLanguagePanel","settingsPanelOpen","openSettingsPanel","dismissSettingsPanel","CommandBar","buttonAs","farItems","overflowButtonAs","overflowButtonProps","PivotBar","schema","setShowToolBar","tabs","pivotStyles","zIndex","link","small","linkIsSelected","Pivot","linkFormat","onLinkClick","ev","itemkey","itemKey","setLatestMenuTab","tabKey","PivotItem","itemIcon","FacePileStyles","right","itemButton","faces","personaName","gray","gold","lightGreen","warmGray","blue","green","darkBlue","purple","orange","TeamPile","Facepile","personas","personaSize","size24","maxDisplayablePersonas","overflowButtonType","OverflowButtonType","descriptive","addButtonProps","href","ariaDescription","MainMenu","ToolBar","isFixed","handleClose","handleFix","transition","stackProps","stackPinProps","align","ref","wrapperRef","useRef","handleClickOutside","current","contains","target","addEventListener","removeEventListener","PagesTabs","parentKey","defaultKey","semibold","selectedKey","headersOnly","AddButton","Footer","selectedkey","bottom","separatorStyles","childtabs","parentkey","addtabs","vertical","WorkplaceLayout","configuration","tools","footertab","findByKey","fixToolBar","setFixToolBar","showToolBar","toolBarTransition","useTransition","from","x","y","opacity","enter","leave","pageSpring","useSpring","lazy","Routes","path","WorkplaceSwitcher","ProjectSwitcher","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","HelpSlice","toogleHelp","setHelp","removeHelp","store","configureStore","reducer","theme","themeReducer","languageReducer","help","helpReducer","project","projectReducer","workplace","workplaceReducer","getState","initializeIcons","ReactDOM","StrictMode","getElementById","ChangeNarrativeForm","LotForm","SpecificationsForm","TechnicalOfferForm","FinancialOfferForm","FormsTutorials","SectorsTutorials","GuidesTutorials","MethodologyTutorials","OutcomesTutorial","IndicatorsTutorial","this","childkey","parenttab","tabFound","childTab","key1","key2","key3","key4","key5","key6","workplaceSlice","setTabSchema","ECanadianSector","EGermanSector","CategoryName","LogicmodelGraph","char","outputs","edges","e","findNode","padEnd","parentId","parentNode","newNode","generateId","findChildrenIds","generateSiblingId","order","getParentId","siblingsIds","sort","oldId","childNode","newInfo","substr","findAllDescendants","forEach","desc","n","charAt","oldDescId","a","b","nodeId","childrenIds","newId","getNodeLevel","split","c","num","concat","commonRoot","tree","buildTreeRec","childVertex","edge","LogicModelActivitiesMatrix","activities","sibling","newActivity","inmediatesIds","getInmediateTree","output","siblings","findActivitiesByOutput","activity","categories","beneficiary","minMain","implementer","other","Stakeholders","list","getBeneficaries","getIntermediaries","getImplementors","getDonors","getOthers","sh","newSh","getStakeholdersByCategory","newMain","translator","counts","methodology","Energy","leader","team","projectSlice","setCurrentProject"],"mappings":"2JA0CeA,IAxCD,kBACV,sBACIC,MAAO,CACHC,OAAQ,YACRC,aAAc,EACdC,WAAY,UACZC,UAAW,uBALnB,UAQI,qBACIJ,MAAO,CACHK,cAAe,YACfC,SAAU,GACVC,oBAAqB,EACrBC,qBAAsB,EACtBC,WAAY,IACZC,QAAS,QACTP,WAAY,OACZQ,MAAO,OACPC,cAAe,OAVvB,0BAeA,cAAC,IAAD,UACK,cAAGC,iBAAH,EAAqBC,SAArB,IAAkCC,EAAlC,wBACG,qBACIf,MAAO,CACHM,SAAU,SACVI,QAAS,eACTM,UAAW,UAJnB,SAOKC,KAAKC,UAAUH,EAAM,KAAM,a,iCCnChD,wJAQO,SAASI,IACZ,IAAQC,EAAMC,YAAe,qBAArBD,EAER,OACI,eAAC,IAAD,CAAOE,OAAQ,CAAEC,YAAa,IAA9B,UACI,eAAC,IAAMC,KAAP,WACKJ,EAAE,qBACH,uBAAM,0BAGV,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIC,MAAOL,EAAE,yBAIjB,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIE,QAAS,GACTD,MAAOL,EAAE,wBAOtB,SAASO,IACZ,IAAQP,EAAMC,YAAe,kCAArBD,EAER,OACI,eAAC,IAAD,CAAOE,OAAQ,CAAEC,YAAa,IAA9B,UACI,eAAC,IAAMC,KAAP,WACKJ,EAAE,4BACH,uBAAM,0BAGV,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIC,MAAOL,EAAE,wBAIjB,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIC,MAAOL,EAAE,yBAIjB,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIC,MAAOL,EAAE,wBAIjB,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIE,QAAS,GACTD,MAAOL,EAAE,8BAOtB,SAASQ,IACZ,IAAQR,EAAMC,YAAe,kCAArBD,EAER,OACI,eAAC,IAAD,CAAOE,OAAQ,CAAEC,YAAa,IAA9B,UACI,eAAC,IAAMC,KAAP,WACKJ,EAAE,6BACH,uBAAM,0BAGV,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIE,QAAS,GACTD,MAAOL,EAAE,6BAIjB,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIC,MAAOL,EAAE,wBAIjB,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIE,QAAS,GACTD,MAAOL,EAAE,2BAIjB,cAAC,IAAMI,KAAP,UACI,cAAC,IAAD,CACIC,MAAOL,EAAE,8B,gIChGd,SAASS,EAAsBC,GAG1C,IAH2E,EAGnEC,EAA6CD,EAA7CC,WAAYC,EAAiCF,EAAjCE,QAASC,EAAwBH,EAAxBG,OAAQC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KACpCf,EAAMC,YAAe,mBAArBD,EAGFgB,EAAqB,CACvB,CACIC,IAAK,UACLC,KAAMlB,EAAE,gBACRmB,UAAW,WACXC,SAAU,IACVC,KAAM,SACNC,SAAU,SAACC,GAAD,OAAkBA,GAC5BC,aAAa,IAKfC,EAAO,CAACd,EAAYC,EAASC,EAAQC,EAAOC,GAG5CW,EAAS,CAAC,aAAc,UAAW,SAAU,QAAS,QACvDC,QAAO,SAAC3B,EAAG4B,GAAJ,MAAsB,KAAZH,EAAKG,MAErBC,EAAQJ,EAAKE,QAAO,SAAA3B,GAAC,MAAU,KAANA,KAE3B8B,EAAS,GACTC,EAAQ,EA7B+D,cA+BzDL,GA/ByD,IA+B3E,2BAA0B,CAAC,IAAlBM,EAAiB,QACtBF,EAAOG,KAAK,CACRhB,IAAI,YAAD,OAAce,GAASd,KAAMlB,EAAE,GAAD,OAAIgC,EAAJ,WAAoBE,WAAYH,IAASI,MAAO,KAjCd,8BAqC3E,OAAO,cAAC,aAAD,CAAYC,UAAQ,EAACC,YAAU,EAACC,cAAe,IAAKC,cAAc,qBAAlE,SACH,cAAC,IAAD,CACIV,MAAOA,EACPb,QAASA,EACTc,OAAQA,EAERU,cAAeC,IAAcC,KAC7BC,iBAAiB,Q,uGCzCvBC,EAAW,SAAC,GAA0C,IAAD,IAAvCC,kBAAuC,MAA1B,IAA0B,EACjDC,EAASC,cACf,EAAkCC,IAAMC,SAAS,IAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAkBJ,IAAMK,YAC1BC,KACI,kBACIR,EAAOS,aAAaC,MAAK,kBAAML,GAAa,IAAIM,MAAOC,oBAC3Db,GAEJ,CAACA,EAAYC,EAAOS,aAOxB,OAJAP,IAAMW,WAAU,WACZP,MACD,CAACA,EAAiBN,EAAOc,SAGxB,mCACOd,EAAOe,aACJ,YACc,KAAdX,EAAA,sBACmBA,GACf,QAwCPY,IAzBgD,SAACC,GAE5D,IAAQC,EAAwDD,EAAxDC,cAAeC,EAAyCF,EAAzCE,SAAUxE,EAA+BsE,EAA/BtE,iBAAkByE,EAAaH,EAAbG,SAEnD,OACI,cAAC,IAAD,CACIF,cAAeA,EACfC,SAAUA,EACVxE,iBAAkBA,EAHtB,SAKI,eAAC,IAAD,WACI,gDACmB,IACf,uBAAOb,MAAO,CAAEW,MAAO,OAAQL,SAAU,IAAzC,SACI,cAAC0D,EAAD,CAAUC,WAAY,WAG7BqB,EAED,cAAC,IAAD,W,oSClDDC,EAfY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAASN,EAAiB,iBAK7D,OACE,cAACO,EAAA,EAAD,uCACMF,GACAL,GAFN,IAGEQ,kBARmB,SAACC,GACtB,OAAOH,EAAKI,SAAWJ,EAAKK,OAASL,EAAKK,OAAON,EAAMlD,MAAQ,IAQ7DyD,uBAAwB,Q,oDCwFfC,EAhGQ,SAAC,GAAoC,IAAlCR,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAASN,EAAiB,iBACjD/D,EAAMC,YAAe,CAC3B,SACA,cACA,OACA,YACA,WACA,iBANMD,EASF6E,EAAuC,CAC3CC,OAAQ,CACN9E,EAAE,WACFA,EAAE,YACFA,EAAE,SACFA,EAAE,SACFA,EAAE,OACFA,EAAE,QACFA,EAAE,QACFA,EAAE,UACFA,EAAE,aACFA,EAAE,WACFA,EAAE,YACFA,EAAE,aAGJ+E,YAAa,CACX/E,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,mBACFA,EAAE,oBAGJgF,KAAM,CACJhF,EAAE,eACFA,EAAE,eACFA,EAAE,gBACFA,EAAE,kBACFA,EAAE,iBACFA,EAAE,eACFA,EAAE,kBAGJiF,UAAW,CACTjF,EAAE,oBACFA,EAAE,oBACFA,EAAE,qBACFA,EAAE,uBACFA,EAAE,sBACFA,EAAE,oBACFA,EAAE,uBAGJkF,UAAWlF,EAAE,sBACbmF,mBAAoBnF,EAAE,+BACtBoF,mBAAoBpF,EAAE,+BACtBqF,kBAAmBrF,EAAE,8BACrBsF,kBAAmBtF,EAAE,8BACrBuF,qBAAsBvF,EAAE,kCAOpBwF,EAAUC,YAASC,YAAU,IAAIjC,KAAKA,KAAKkC,QAAS,IAS1D,OACE,cAACC,EAAA,EAAD,yBACEC,YAAa7F,EAAE,iCACfwF,QAASA,EACTjB,kBAjBmB,SAACC,GACtB,OAAOH,EAAKI,SAAWJ,EAAKK,OAASL,EAAKK,OAAON,EAAMlD,MAAQ,IAiB7DyD,uBAAwB,IACxBmB,QAASjB,EACTkB,OAbiD,CACnDC,KAAM,CACJC,OAAQ,QAYJ7B,GACAL,K,oBC7CK,SAASmC,IAEtB,IAAMC,EAAUC,YAAe,CAC7BC,OAAQ,CACNJ,OAAQ,GACRK,MAAO,GACPxH,aAAc,MACdsC,SAAU,GACVlC,SAAU,MAmBRqH,EAAgC,CACpCrG,OAAQ,CAAEC,YAAa,KACvBqG,YAAY,EACZC,gBAAiB,gBACjBV,OAAQ,CACNC,KAAM,CACJU,aAAc,MAKdC,EAAkC,CACtCC,aAAc,SAIR5G,EAAMC,YAAe,CAAC,eAAgB,WAAtCD,EAEF6G,EADUC,YAAYC,KACAC,KAE5B,EAAsC/D,mBAAS4D,EAAYI,aAA3D,mBAAOA,EAAP,KAAoBC,EAApB,KACA,EAAwCjE,mBAAS4D,EAAYM,cAA7D,mBAAOA,EAAP,KAAqBC,EAArB,KAUMC,EAA6B,CACjCC,UAAWT,EAAYU,UACvBC,UAAWX,EAAY3F,KACvBuG,YAAaZ,EAAYY,YACzBC,QAASb,EAAYa,QACrBC,gBAAiBd,EAAYe,aAC7BC,gBAAiBhB,EAAYiB,aAC7BC,OAAQlB,EAAYkB,OACpBC,eAAgBnB,EAAYoB,YAC5BC,aAAcrB,EAAYsB,UAC1BC,eAAgBvB,EAAYuB,eAC5BC,gBAAiBxB,EAAYyB,gBAC7BC,QAAS1B,EAAY0B,QACrBC,OAAQ3B,EAAY2B,OACpBC,SAAU5B,EAAY4B,SACtBC,MAAO7B,EAAY6B,MACnBC,eAAgB9B,EAAY8B,eAC5BxB,aAAcN,EAAYM,aAC1BF,YAAaJ,EAAYI,YACzB2B,UAAW/B,EAAY+B,UACvBC,aAAchC,EAAYgC,cAGtBpJ,EAAmBqJ,cAASC,MAAM,CACtCzB,UAAW0B,cAASC,IAAI,GAAIjJ,EAAE,oBAAoBkJ,SAASlJ,EAAE,aAC7DwH,UAAWwB,cACRG,IAAI,GAAInJ,EAAE,oBACViJ,IAAI,IAAKjJ,EAAE,oBACXkJ,SAASlJ,EAAE,aACdyH,YAAauB,cACbtB,QAASsB,cAASE,SAASlJ,EAAE,aAC7B2H,gBAAiBqB,cAASE,SAASlJ,EAAE,aACrC6H,gBAAiBmB,cAASE,SAASlJ,EAAE,aACrCoJ,SAAUJ,cAASE,SAASlJ,EAAE,aAC9B+H,OAAQsB,cAASH,SAASlJ,EAAE,aAC5BgI,eAAgBqB,cAASH,SAASlJ,EAAE,aACpCkI,aAAcmB,cAASH,SAASlJ,EAAE,aAClCoI,eAAgBiB,cAASH,SAASlJ,EAAE,aACpCqI,gBAAiBgB,cAASH,SAASlJ,EAAE,aACrCuI,QAASS,cAASE,SAASlJ,EAAE,aAC7BwI,OAAQQ,cAASE,SAASlJ,EAAE,aAC5ByI,SAAUY,cAASH,SAASlJ,EAAE,aAC9B0I,MAAOM,cAASE,SAASlJ,EAAE,aAC3B2I,eAAgBU,cAASH,SAASlJ,EAAE,aACpCmH,aAAc6B,cAASE,SAASlJ,EAAE,aAClCiH,YAAa+B,cAASE,SAASlJ,EAAE,aACjC4I,UAAWI,cAASE,SAASlJ,EAAE,eAGjC2D,qBAAU,WACR2F,YAAU,CAERC,MAAO,CACLC,QAAS,iBAGXR,OAAQ,CACNQ,QAAS,aAEXH,OAAQ,CACNG,QAAS,gBAGZ,CAAC/J,IAEJ,IAIMgK,EAA+B,CACnC,CAAExI,IAAK,IAAKyI,KAAM,QAClB,CAAEzI,IAAK,IAAKyI,KAAM,WAClB,CAAEzI,IAAK,IAAKyI,KAAM,iBAClB,CAAEzI,IAAK,IAAKyI,KAAM,aAClB,CAAEzI,IAAK,IAAKyI,KAAM,WAGpB,OACE,cAAC,IAAD,CACE1F,cAAeqD,EACf5H,iBAAkBA,EAClBwE,SAhBiB,SAACL,EAAD,GAAoD,EAAzB+F,cAC9CC,MAAMhG,IAYN,SAKE,mCACE,eAAC,IAAD,CAAMiG,IAAI,MAAV,UAEE,eAAC,IAAD,WACE,cAAC,EAAD,CACEX,UAAQ,EACR7I,MAAOL,EAAE,mBACTkB,KAAK,YACL4I,UAAWC,IACXC,OAAQ,IAGV,cAAC,EAAD,CACEd,UAAQ,EACR7I,MAAOL,EAAE,mBACTkB,KAAK,YACL4I,UAAWC,IACXC,OAAQ,OAIZ,cAAC,IAAD,UACE,cAAC,EAAD,yBACE3J,MAAOL,EAAE,qBACTkB,KAAK,cACL4I,UAAWC,KA1J0B,CAC/Cb,UAAU,EACVe,WAAW,EACXC,kBAAkB,EAClBnE,OAAQ,CACNC,KAAM,CACJM,MAAO,OACP6D,UAAW,IAEb/F,MAAO,CACL6B,OAAQ,QA6IJ,IAKE+D,OAAQ,QAIZ,uBAEA,eAAC,IAAD,WAEE,eAAC,IAAD,CAAKI,OAAQ,GAAIC,OAAQ,EAAGL,OAAQ,EAApC,UACE,cAAC,IAAD,UACE,cAACM,EAAA,EAAD,2BAAe3D,GAAf,aACE,cAAC4D,EAAA,EAAD,CAAeb,KAAK,IAAIc,UAAWrE,EAAQE,cAI/C,eAACoE,EAAA,EAAD,2BAAWlE,GAAX,cACE,eAACkE,EAAA,EAAMrK,KAAP,WACE,cAACsK,EAAA,EAAD,UAAQ1K,EAAE,kBACTA,EAAE,UAAD,OAAW6G,EAAY8D,YAE3B,eAACF,EAAA,EAAMrK,KAAP,WACE,cAACsK,EAAA,EAAD,UAAQ1K,EAAE,oBACT6G,EAAY+D,gBAGjB,uBAEA,eAAC,IAAD,WACE,cAAC,EAAD,CACEvK,MAAOL,EAAE,iBACTkB,KAAK,UACL4I,UAAW3F,EACX7D,QAASmJ,IAEX,cAAC,EAAD,CACEpJ,MAAOL,EAAE,yBACTkB,KAAK,kBACL4I,UAAW3F,EACX7D,QAASmJ,IAEX,cAAC,EAAD,CACEpJ,MAAOL,EAAE,yBACTkB,KAAK,kBACL4I,UAAW3F,EACX7D,QAASmJ,OAIb,eAAC,IAAD,WACE,cAAC,EAAD,CACEpJ,MAAOL,EAAE,kBACTkB,KAAK,WACL4I,UAAW3F,IAEb,cAAC,EAAD,CACE9D,MAAOL,EAAE,iBACTkB,KAAK,UACL4I,UAAW3F,EACX7D,QAASmJ,IAEX,cAAC,EAAD,CACEpJ,MAAOL,EAAE,gBACTkB,KAAK,SACL4I,UAAW3F,EACX7D,QAASmJ,IAEX,cAAC,EAAD,CACEpJ,MAAOL,EAAE,kBACTkB,KAAK,WACL4I,UAAWC,IACXc,OAAQ7K,EAAE,wBAId,eAAC,IAAD,WAEE,cAAC,EAAD,CACEK,MAAOL,EAAE,gBACTkB,KAAK,SACL4I,UAAWC,IACXe,OAAQ9K,EAAE,mBAEZ,cAAC,EAAD,CACEK,MAAOL,EAAE,oBACTkB,KAAK,iBACL4I,UAAWC,IACXe,OAAQ9K,EAAE,sBACV+K,UAAQ,IAEV,cAAC,EAAD,CACE1K,MAAOL,EAAE,oBACTkB,KAAK,eACL4I,UAAWC,IACXe,OAAQ9K,EAAE,oBACV+K,UAAQ,IAEV,cAAC,EAAD,CACE1K,MAAOL,EAAE,kBACTkB,KAAK,iBACL4I,UAAWC,YAQjB,eAAC,IAAD,CAAKK,OAAQ,GAAIC,OAAQ,EAAGL,OAAQ,EAApC,UACE,cAAC,IAAD,UACE,cAACM,EAAA,EAAD,2BAAe3D,GAAf,aACE,cAAC4D,EAAA,EAAD,CAAeb,KAAK,IAAIc,UAAWrE,EAAQE,cAI/C,cAACoE,EAAA,EAAD,2BAAWlE,GAAX,aACE,eAACkE,EAAA,EAAMrK,KAAP,WACE,cAACsK,EAAA,EAAD,UAAQ1K,EAAE,qBACT6G,EAAYmE,gBAGjB,uBAEA,eAAC,IAAD,WACE,cAAC,EAAD,CACE3K,MAAOL,EAAE,eACTkB,KAAK,QACL4I,UAAW3F,EACX7D,QAASmJ,EACTO,OAAQ,IAEV,cAAC,EAAD,CACE3J,MAAOL,EAAE,qBACTkB,KAAK,cACL4I,UAAWlF,EACXqG,aAxPiB,SAACC,GAChC9D,EAAgB8D,IAwPFlB,OAAQ,OAIZ,eAAC,IAAD,WACE,cAAC,EAAD,CACE3J,MAAOL,EAAE,qBACTkB,KAAK,cACL4I,UAAWlF,EACXY,QAAS2B,EACT8D,aAvQgB,SAACC,GAC/BhE,EAAegE,IAuQDlB,OAAQ,IAEV,cAAC,EAAD,CACE3J,MAAOL,EAAE,mBACTkB,KAAK,YACL4I,UAAWlF,EACXY,QAASyB,EACT+C,OAAQ,OAIZ,eAAC,IAAD,WACE,cAAC,EAAD,CACE3J,MAAOL,EAAE,uBACTkB,KAAK,iBACL4I,UAAWC,IACXzJ,QAASmJ,EACToB,OAAQhE,EAAYuC,SACpBY,OAAQ,IAEV,cAAC,EAAD,CACE3J,MAAOL,EAAE,sBACTkB,KAAK,eACL4I,UAAWC,IACXC,OAAQ,oBAW1B,IAAMmB,EAAgB,SAACpH,GACrB,OACE,cAAC,IAAD,CAAKqG,OAAQrG,EAAMqG,QAAU,EAAGC,OAAQtG,EAAMsG,QAAU,EAAGL,OAAQjG,EAAMiG,QAAU,EAAnF,SACE,cAAC,IAAD,eAAWjG,OAKXqH,EAAY,SAAC,GAA4B,EAA1BC,KAA2B,IAAlBtH,EAAiB,iBAC7C,OACE,cAAC,IAAD,CAAKqG,OAAQrG,EAAMqG,QAAU,EAAGC,OAAQtG,EAAMsG,QAAU,EAAGL,OAAQjG,EAAMiG,QAAU,EAAnF,SACE,cAAC,IAAD,eAAWjG,OAKV,SAASuH,IACd,OAAO,gD,2PCtYM,SAASC,IAItB,IAAQvL,EAAMC,YAAe,qBAArBD,EAIFwL,EAFU1E,YAAYC,KACA0E,MAAMC,MAAK,SAAArH,GAAI,MAAkB,iBAAdA,EAAKnD,QACdyK,UAEhCC,EAAeJ,EAAkBK,uBACnC/J,EAAS0J,EAAkBM,wBAAwB9L,GAEvD,EAA0BiD,mBAAS2I,GAAnC,mBAAO/J,EAAP,KAAckK,EAAd,KACA,EAAwC9I,mBAASuI,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAEA,EAAsEC,aAAW,GAAjF,mBAAOC,EAAP,YAA+BC,EAA/B,EAAsBC,QAA8BC,EAApD,EAA0CC,SAEpCvL,EAAqB,CACzB,CACEC,IAAK,UACLC,KAAMlB,EAAE,cACRmB,UAAW,OACXC,SAAU,IACVoL,SAAU,IACVnL,KAAM,SACNC,SAAU,SAACC,GAAD,OAA2BkL,EAAsBlL,KAE7D,CACEN,IAAK,UACLC,KAAMlB,EAAE,cACR+F,OAAQ,CAAEC,KAAM,CAAE9G,SAAU,KAC5BwN,UAAW,aACXvL,UAAW,OACXC,SAAU,IACVuL,aAAa,EACbtL,KAAM,SACNuL,UAAU,EACVtL,SAAU,SAACC,GAAD,OAA2BsL,EAAYtL,KAEnD,CACEN,IAAK,UACLC,KAAM,aACNC,UAAW,YACXC,SAAU,GACVC,KAAM,SACNuL,UAAU,EAEVtL,SAAU,SAACC,GAAD,OAA2BuL,EAAgBvL,MAwBjDwL,EAAYC,cAAZD,QAEFF,EAAc,SAACtL,GACnB,IAaM0L,EAA2C,CAC/CjH,KAAM,CACJM,MAAO,OAET4G,SAAU,CACR9L,SAAU,KAEZY,MAAO,CACLlD,aAAc,cACdqO,OAAO,aAAD,OAAeJ,EAAQK,gBAC7BC,UAAW,CACT,UAAW,CACTF,OAAO,aAAD,OAAeJ,EAAQO,SAM/BC,EAAwC,CAC5CvH,KAAM,CACJwH,UAAW,UAEbC,YAAa,CACXC,gBAAiBX,EAAQY,cAE3BC,KAAM,CACJ1O,SAAU,GACVK,MAAOwN,EAAQc,QAInB,OACE,eAAC,IAAD,CAAOrH,YAAU,EAACT,OAAQ,CAAEC,KAAM,CAAE5E,SAAU,MAA9C,UACE,cAAC,IAAD,CACEyE,YAAa7F,EAAE,kCACf8N,mBAAoBvM,EAAKwM,GAAGC,WAC5B1N,QAjD6B,CACjC,CAAEW,IAAK,IAAKyI,KAAM,YAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,gBAClB,CAAEzI,IAAK,IAAKyI,KAAM,iBAwCd3D,OAAQkH,IAGV,cAAC,IAAD,CAAavM,QAASV,EAAE,8BAAxB,SACE,cAAC,IAAD,CACEiO,UAAW,CAAEC,SAAU,aACvBnI,OAAQwH,EACRY,QAAS/B,UAObK,EAAwB,SAAClL,GAC7B,IAAM6M,EAAyC,CAC7CpI,KAAM,CACJC,OAAQ,IAEVwH,YAAa,CACXC,gBAAiBX,EAAQK,gBAE3BQ,KAAM,CACJ1O,SAAU,GACVG,WAAYgP,IAAYC,KACxB/O,MAAOwN,EAAQc,QAIbU,EAAqC,CACzCvI,KAAM,CACJC,OAAQ,IAEVwH,YAAa,CACXC,gBAAiBX,EAAQK,gBAE3BQ,KAAM,CACJ1O,SAAU,GACVK,MAAOwN,EAAQyB,mBAInB,OAAOjN,EAAKkN,KACV,cAAC,IAAD,CAAa/N,QAASV,EAAE,4BAAD,OAA6BuB,EAAKmN,SAASxN,OAAlE,SACE,cAAC,IAAD,CACE+M,UAAW,CAAEC,SAAU,eACvBnI,OAAQqI,MAGZ,cAAC,IAAD,CAAa1N,QAASV,EAAE,mCAAD,OAAoCuB,EAAKmN,SAASxN,OAAzE,SACE,cAAC,IAAD,CACE+M,UAAW,CAAEC,SAAU,WACvBnI,OAAQwI,EACRJ,QAAS,kBAjHmB,SAAC5M,GACnC0K,EAAgBD,EAAa2C,mBAAmBpN,EAAKwM,KACrDhC,EAASC,EAAaH,wBACtB/J,EAAS0J,EAAkBM,wBAAwB9L,GA8G9B4O,CAA4BrN,SAK7CuL,EAAkB,SAACvL,GACvB,IAAMgM,EAAwC,CAC5CvH,KAAM,CACJC,OAAQ,IAEVwH,YAAa,CACXC,gBAAiBX,EAAQK,gBAE3BQ,KAAM,CACJ1O,SAAU,GACVK,MAAOwN,EAAQc,QAInB,OAAO,eAAC,IAAMgB,SAAP,WACL,cAAC,IAAD,CAAanO,QAASV,EAAE,2BAAxB,SACE,cAAC,IAAD,CACEiO,UAAW,CAAEC,SAAU,OACvBnI,OAAQwH,EACRY,QAAS,kBArJY,SAAC5M,GAC5B0K,EAAgBD,EAAa8C,eAAevN,EAAKwN,aAAcxN,EAAKmN,WACpE3C,EAASC,EAAaH,wBACtB/J,EAAS0J,EAAkBM,wBAAwB9L,GAkJ9BgP,CAAqBzN,QAGvCA,EAAK0N,aACJ,cAAC,IAAD,CAAavO,QAASV,EAAE,8BAAxB,SACE,cAAC,IAAD,CACEiO,UAAW,CAAEC,SAAU,UACvBnI,OAAQwH,EACRY,QAAS,kBAvJa,SAAC5M,GAC/B0K,EAAgBD,EAAakD,kBAAkB3N,EAAKwM,KACpDhC,EAASC,EAAaH,wBACtB/J,EAAS0J,EAAkBM,wBAAwB9L,GAoJ5BmP,CAAwB5N,YAO3C6N,EAAwBpM,IAAMK,aAClC,kBACE,gCACE,cAAC,IAAD,CAAe8K,QAAS7B,EAAcvG,OAAQ,CAAEC,KAAM,CAAEqJ,YAAa,IAArE,kBAGA,cAAC,IAAD,CAAelB,QAAS7B,EAAxB,yBAGJ,CAACA,IAGH,OAAO,eAAC,IAAMuC,SAAP,WAEL,cAAC,IAAD,CACEhN,MAAOA,EACPb,QAASA,EACTc,OAAQA,EACRU,cAAeC,IAAcC,KAC7BC,iBAAiB,IAGnB,cAAC,IAAD,CACE2M,OAAQnD,EACR5G,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,gBACdyP,UAAWnD,EACXoD,kBAAkB,EAClBN,sBAAuBA,EAPzB,SASE,cAAC,IAAD,W,iQCtPS,SAASO,IAItB,IAEMC,EAFU9I,YAAYC,KACA0E,MAAMC,MAAK,SAAArH,GAAI,MAAkB,yBAAdA,EAAKnD,QACLyK,UAEzCC,EAAegE,EAA2BC,0BAEhD,EAA0B5M,mBAAS2I,GAAnC,mBAAO/J,EAAP,KAAckK,EAAd,KACA,EAAgD9I,mBAAS2M,GAAzD,mBAAOE,EAAP,KAAyBC,EAAzB,KAEQ/P,EAAMC,YAAe,CAAC,iCAAkC,oBAAxDD,EAEFgB,EAAqB,CACzB,CACEC,IAAK,UACLC,KAAM,QACN6E,OAAQ,CAAEC,KAAM,CAAEgK,UAAW,QAAS9Q,SAAU,KAChDwN,UAAW,mCACXvL,UAAW,QACXC,SAAU,GACVoL,SAAU,IACVnL,KAAM,SACNC,SAAU,SAACC,GAAD,OAAyBsL,EAAYtL,KAEjD,CACEN,IAAK,UACLC,KAAM,OACNC,UAAW,OACXuL,UAAW,OACXtL,SAAU,EACVoL,SAAU,IACVyD,aAAa,EACb5O,KAAM,SACNC,SAAU,SAACC,GAAD,OAAyB2O,EAAW3O,KAEhD,CACEN,IAAK,UACLC,KAAM,cACNC,UAAW,cACXC,SAAU,GACVC,KAAM,SACNsL,aAAa,EACbC,UAAU,EACVpL,aAAa,EAEbF,SAAU,SAACC,GAAD,OAAyB4O,EAAkB5O,KAEvD,CACEN,IAAK,UACLC,KAAM,GACNC,UAAW,YACXC,SAAU,IACVC,KAAM,SACNuL,UAAU,EACVtL,SAAU,SAACC,GAAD,OAAyBuL,EAAgBvL,MAsBvD,EAAkF2K,aAAW,GAA7F,mBAAOkE,EAAP,YAAmCC,EAAnC,EAA0BhE,QAAkCiE,EAA5D,EAAkD/D,SAI1CQ,EAAYC,cAAZD,QAuCFF,EAAc,SAACtL,GACnB,IAKMgP,EAAyB,IAAfhP,EAAKiP,MAAc,aAA8B,IAAfjP,EAAKiP,MAAc,SAAW,QAEhF,OACE,qBAAK5R,MAAO,CAAEoR,UAAW,MAAOzQ,MAAO,SAAvC,SACE,cAAC,IAAD,CAAMgR,QAASA,EAASxK,OATI,CAC9BC,KAAM,CACJ3G,WAAY,MAOZ,SAA6CW,EAAEuB,EAAKL,WAKpDgP,EAAa,SAAC3O,GAClB,OAAOA,EAAKwM,IAGRoC,EAAoB,SAAC5O,GAEzB,IAsBIkP,EAtBEC,EAAkC,CACtCC,KAAM,EACN1G,WAAW,EACX2G,WAAW,EACXC,aAActP,EAAKkG,YACnB1B,OAAQ,CACNC,KAAM,CACJ5E,SAAU,KAEZ0P,WAAY,CACVhS,aAAc,cACdqO,OAAO,aAAD,OAAeJ,EAAQK,gBAC7BC,UAAW,CACT,SAAU,CACRF,OAAO,aAAD,OAAeJ,EAAQgE,sBASvC,OAAQxP,EAAKiP,OACX,KAAK,EACHC,EAAO,cAAC,IAAD,2BAAeC,GAAf,aACJnP,EAAKkG,eAER,MACF,QACEgJ,EAAO,+BAAOlP,EAAKkG,cAIvB,OAAOgJ,GAGH3D,EAAkB,SAACvL,GACvB,IAAMgM,EAAwC,CAC5CvH,KAAM,CACJC,OAAQ,IAEVwH,YAAa,CACXC,gBAAiBX,EAAQK,gBAE3BQ,KAAM,CACJ1O,SAAU,GACVK,MAAOwN,EAAQc,QAInB,OAAuB,IAAftM,EAAKiP,OACX,eAAC,IAAM3B,SAAP,WACE,cAAC,IAAD,CAAanO,QAASV,EAAE,2CAAxB,SACE,cAAC,IAAD,CACEiO,UAAW,CAAEC,SAAU,QACvBnI,OAAQwH,EACRY,QAAS,kBAAMkC,SAGnB,cAAC,IAAD,CAAa3P,QAASV,EAAE,mBAAxB,SACE,cAAC,IAAD,CACEiO,UAAW,CAAEC,SAAU,OACvBnI,OAAQwH,EACRY,QAAS,kBAjJO,SAAC6C,GACzB,IAAMC,EAAWD,EAAOE,MAAM,EAAG,GAC3BC,EAAaH,EAAO,GAE1BjB,EAAoBD,EAAiBsB,oBAAoBH,EAAUE,IACnEpF,EAAS+D,EAAiBD,2BA4IHwB,CAAkB9P,EAAKwM,SAGzCxM,EAAK0N,aACJ,cAAC,IAAD,CAAavO,QAASV,EAAE,sBAAxB,SACE,cAAC,IAAD,CACEiO,UAAW,CAAEC,SAAU,UACvBnI,OAAQwH,EACRY,QAAS,kBAjJQ,SAAC6C,GAC5B,IAAMC,EAAWD,EAAOE,MAAM,EAAG,GAC3BC,GAAcG,mBAASN,EAAO,IAAM,GAAGhD,WAE7C+B,EAAoBD,EAAiByB,eAAeN,EAAUE,IAC9DpF,EAAS+D,EAAiBD,2BA4ID2B,CAAqBjQ,EAAKwM,aAQrD,OAAO,eAAC,IAAMc,SAAP,WACL,cAAC,IAAD,CACEhN,MAAOA,EACPb,QAASA,EACTyQ,YA9IkD,SAAA1N,GACpD,IAAM2N,EAA2C,GAEjD,GAAI3N,EAAO,CAET,OADiBA,EAATxC,KACKiP,OACX,KAAK,EACHkB,EAAa1L,KAAO,CAClB0H,gBAAiBX,EAAQY,aACzBzO,SAAUyS,IAAUC,OACpB,SAAU,CACRlE,gBAAiBX,EAAQY,eAG7B,MACF,KAAK,EACH+D,EAAa1L,KAAO,CAClB0H,gBAAiBX,EAAQ8E,gBACzB,SAAU,CACRnE,gBAAiBX,EAAQ8E,kBAG7B,MACF,KAAK,EACHH,EAAa1L,KAAO,CAClB,SAAU,CACR0H,gBAAiBX,EAAQ+E,QAMjC,OAAO,cAAC,IAAD,2BAAgB/N,GAAhB,IAAuBgC,OAAQ2L,KAExC,OAAO,MA6GLlP,cAAeC,IAAcC,KAC7BC,iBAAiB,IAEnB,cAAC,IAAD,CACE2M,OAAQc,EACR7K,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,qCACdyP,UAAWa,EACXZ,kBAAkB,EANpB,SAQE,cAAC,IAAD,CACE/O,WAAW,gIACXC,QAAQ,GACRC,OAAO,gDACPC,MAAM,kIACNC,KAAK,0I,iCChRb,+DAEe,SAASgR,IACtB,OAAO,6D,iCCHT,+DAEe,SAASC,IACtB,OAAO,+C,iCCHT,+DAEe,SAASC,IACtB,OAAO,gD,iCCHT,+DAEe,SAASC,IACtB,OAAO,iD,g1bC+BM,SAASC,EAAoBpO,GAGxC,IACIqO,EAOArO,EAPAqO,SACAC,EAMAtO,EANAsO,eACAC,EAKAvO,EALAuO,aACAC,EAIAxO,EAJAwO,sBACAC,EAGAzO,EAHAyO,uBACAC,EAEA1O,EAFA0O,uBACAC,EACA3O,EADA2O,sBAEIC,EAAmBP,EAAnBO,KAAMzO,EAAakO,EAAblO,SAGN6I,EAAYC,cAAZD,QAEF6F,EAAsC,CACxCvH,KAAM,EACNtF,OAAQ,CACJC,KAAM,CACFgK,UAAW,SACX7F,UAAW,oBAWjB0I,EAAuC,CACzClC,KAAM,EACN1G,WAAW,EACX2G,WAAW,EACX7K,OAAQ,CACJC,KAAM,CACF5E,SAAU,KAEd0P,WAAY,CACRhS,aAAc,cACdqO,OAAO,aAAD,OAAeJ,EAAQ+F,mBAC7BC,UAAU,aAAD,OAAehG,EAAQK,gBAChCC,UAAW,CACP,SAAU,CACNF,OAAO,aAAD,OAAeJ,EAAQgE,sBAiBjD,OACI,eAAC,IAAMlC,SAAP,WACI,eAACpE,EAAA,EAAMrK,KAAP,2BAAgBwS,GAAhB,cACKD,EAAKnC,MAAQ,GAAK,cAACwC,EAAA,EAAD,eAbA,CAC3B9E,SAAU,SACVxB,UAAW,aACX3G,OAAQ,CACJC,KAAM,CACFnH,OAAQ,gBASR,cAACoU,EAAD,CACIb,SAAUA,EACVC,eAAgBA,EAChBC,aAAcA,EACdC,sBAAuBA,EACvBC,uBAAwBA,EACxBC,uBAAwBA,EACxBC,sBAAuBA,IAE3B,cAAC,IAAD,aACIxR,KAAI,mBAAcyR,EAAK5E,IACvBjE,UAAWC,KACP8I,QAIZ,cAACpI,EAAA,EAAMrK,KAAP,2BAAgBwS,GAAhB,aACI,cAACnI,EAAA,EAAD,2BA1D4B,CACpCjE,YAAY,EACZC,gBAAiB,gBACjBvG,OAAQ,CAAEC,YAAa,MAuDf,aACK+D,GAAYA,EAASgP,KAAI,SAAAC,GAAK,OAC3B,cAAC1I,EAAA,EAAMrK,KAAP,CAAgCiL,MAAI,EAApC,SACI,cAAC8G,EAAD,CACIC,SAAUe,EACVd,eAAgBA,EAChBC,aAAcA,EACdC,sBAAuBA,EACvBC,uBAAwBA,EACxBC,uBAAwBA,EACxBC,sBAAuBA,KARdS,EAAMR,KAAK5E,gBAkBpD,SAASkF,EAAqBlP,GAG1B,IAAQqO,EAMsBrO,EANtBqO,SACJC,EAK0BtO,EAL1BsO,eACAC,EAI0BvO,EAJ1BuO,aACAC,EAG0BxO,EAH1BwO,sBACAC,EAE0BzO,EAF1ByO,uBACAC,EAC0B1O,EAD1B0O,uBACAC,EAA0B3O,EAA1B2O,sBACIC,EAAmBP,EAAnBO,KAAMzO,EAAakO,EAAblO,SAENlE,EAAMC,YAAe,CAAC,iCAAkC,oBAAxDD,EACFoT,EAAWC,cACjB,EAAsCvM,YAAYwM,KAA1CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAGdC,EAAgC,IAAfd,EAAKnC,MACxB,gCAAiD,IAAfmC,EAAKnC,MACnC,mCAAqC,qBAEvCkD,EAAwB,IAAff,EAAKnC,MACdmD,EAAgC,IAApBzP,EAAS0P,OACrBC,EAA4B,IAAflB,EAAKnC,MAShBzD,EAAYC,cAAZD,QAEF+G,EAA2B,CAC7B9N,KAAM,CACF1G,QAAS,EACT0Q,UAAW,OACX7C,OAAO,aAAD,OAAeJ,EAAQ+F,mBAC7BiB,aAAc,OACdjV,aAAc,cACd4O,gBAAiBX,EAAQK,iBAI3BG,EAAwC,CAC1CvH,KAAM,CACFC,OAAQ,IAEZwH,YAAa,CACTC,gBAAiBX,EAAQiH,cAE7BpG,KAAM,CACF1O,SAAU,GACVK,MAAOwN,EAAQc,QAIvB,OAAO,eAACpD,EAAA,EAAD,CACHjE,YAAU,EACVT,OAAQ+N,EACRrN,gBAAgB,gBAHb,UAKH,cAACgE,EAAA,EAAMrK,KAAP,UACI,cAAC6T,EAAA,EAAD,CAAM1D,QAAQ,SAAd,SAAwBoC,EAAK5E,OAEjC,eAACtD,EAAA,EAAMrK,KAAP,WAEKyT,EACG,qCACI,cAACK,EAAA,EAAD,CAAaxT,QAASV,EAAE,0BAAxB,SACI,cAACmU,EAAA,EAAD,CACIlG,UAAW,CAAEC,SAAU,cACvBnI,OAAQwH,EACRY,QAAS,kBAjDA,SAACJ,GAC9B,IAAMqG,EAAab,EAAWc,gBAAgB,oBAAoBpT,IAC5DqT,EAAaf,EAAWgB,eAAef,EAAeY,GAAYI,OACxEpB,EAASqB,YAAiB,CAAExT,IAAKuS,EAAekB,IAAKN,EAAYO,KAAML,KA8CpCM,CAAyBjC,EAAK5E,SAGrD,cAACmG,EAAA,EAAD,CAAaxT,QAASV,EAAE,4BAAxB,SACI,cAACmU,EAAA,EAAD,CACIlG,UAAW,CAAEC,SAAU,eACvBnI,OAAQwH,EACRY,QAAS,kBAAMoE,SAGvB,cAAC2B,EAAA,EAAD,CAAaxT,QAASV,EAAE,2BAAxB,SACI,cAACmU,EAAA,EAAD,CACIlG,UAAW,CAAEC,SAAU,QACvBnI,OAAQwH,EACRY,QAAS,kBAAMuE,YAGrB,qCACF,cAACwB,EAAA,EAAD,CAAaxT,QAASV,EAAE,4BAAxB,SACI,cAACmU,EAAA,EAAD,CACIlG,UAAW,CAAEC,SAAU,eACvBnI,OAAQwH,EACRY,QAAS,kBAAMqE,SAGvB,cAAC0B,EAAA,EAAD,CAAaxT,QAASV,EAAE,2CAAxB,SACI,cAACmU,EAAA,EAAD,CACIlG,UAAW,CAAEC,SAAU,QACvBnI,OAAQwH,EACRY,QAAS,kBAAMsE,YAI9BiB,GACG,cAACQ,EAAA,EAAD,CAAaxT,QAASV,EAAEyT,GAAxB,SACI,cAACU,EAAA,EAAD,CACIlG,UAAW,CAAEC,SAAU,OACvBnI,OAAQwH,EACRY,QAAS,kBAAMkE,EAAeM,EAAK5E,SAI9C4F,GACG,cAACO,EAAA,EAAD,CAAaxT,QAASV,EAAE,kBAAxB,SACI,cAACmU,EAAA,EAAD,CACIlG,UAAW,CAAEC,SAAU,UACvBnI,OAAQwH,EACRY,QAAS,kBAAMmE,EAAaK,EAAK5E,e,8BCxO1C,SAAS8G,IAGR5U,YAAe,CAAC,iCAAkC,cAAxDD,EAAR,IAHuC,EAOjC8U,EAFUhO,YAAYC,KACA0E,MAAMC,MAAK,SAAArH,GAAI,MAAkB,yBAAdA,EAAKnD,QAChByK,UAEpC,EAA0B1I,mBAAS6R,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwC/R,mBAAS8R,EAAME,aAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KAaA,EAAwFjJ,aAAW,GAAnG,mBAAOkJ,EAAP,YAAqCC,EAArC,EAA4BhJ,QAAoCiJ,EAAhE,EAAsD/I,SACtD,EAA2FL,aAAW,GAAtG,mBAAOqJ,EAAP,YAAsCC,EAAtC,EAA6BnJ,QAAqCoJ,EAAlE,EAAwDlJ,SACxD,EAAuGL,aAAW,GAAlH,mBAAOwJ,EAAP,YAA0CC,EAA1C,EAAiCtJ,QAAyCuJ,EAA1E,EAAgErJ,SAChE,EAAoGL,aAAW,GAA/G,mBAAO2J,EAAP,YAAyCC,EAAzC,EAAgCzJ,QAAwC0J,EAAxE,EAA8DxJ,SAG1DvI,EAAgC,CAAE,WAAc,IA7Bb,cA8BzB+Q,EAAMiB,QA9BmB,IA8BvC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjS,EAAc,YAAD,OAAaiS,EAAElI,KAAQkI,EAAEvM,MA/BD,gCAkCvC,IAlCuC,EAkCnCX,EAAqB,CAAE,WAAcC,eAlCF,eAmCzB+L,EAAMiB,QAnCmB,IAmCvC,6BAA4B,CAAC,IAApBC,GAAmB,QAC1BlN,EAAM,YAAD,OAAakN,GAAElI,KAAQ/E,eApCS,kCAuCvC,IAAMvJ,GAAmBqJ,cAASC,MAAMA,GAExC,OAAO,eAAC,IAAM8F,SAAP,WACL,cAAC,IAAD,CACE7K,cAAeA,EACfvE,iBAAkBA,GAClBwE,SAAU,SAACL,GAAD,OAAYgG,MAAMhG,IAH9B,SAKE,cAAC,IAAD,UACE,eAAC6G,EAAA,EAAD,CAAOjE,YAAU,EAACtG,OAAQ,CAAEC,YAAa,IAAzC,UAEE,cAACsK,EAAA,EAAMrK,KAAP,UACE,cAAC8V,EAAD,MAIF,cAACzL,EAAA,EAAMrK,KAAP,CAAYxB,MAAO,CAAE0H,MAAO,QAA5B,SACE,cAACmE,EAAA,EAAD,CAAOvK,OAAQ,CAAEC,YAAa,IAA9B,SACE,cAACgS,EAAD,CACEC,SAAU8C,EACV7C,eA/CQ,SAAC8D,GACrBnB,EAASD,EAAMqB,QAAQD,IACvBhB,EAAgBJ,EAAME,cA8CV3C,aA3CW,SAACvE,GACxBiH,EAASD,EAAMsB,WAAWtI,IAC1BoH,EAAgBJ,EAAME,cA0CV1C,sBAAuB8C,EACvB7C,uBAAwBgD,EACxB/C,uBAAwBkD,EACxBjD,sBAAuBoD,eAQnC,cAACQ,EAAD,CACEf,mBAAoBA,EACpBE,oBAAqBA,EACrBL,kBAAmBA,EACnBE,mBAAoBA,EACpBI,uBAAwBA,EACxBE,wBAAyBA,EACzBC,sBAAuBA,EACvBE,uBAAwBA,OAgB9B,SAASO,EAAavS,GAGpB,IAAQwR,EAQJxR,EARIwR,mBACNE,EAOE1R,EAPF0R,oBACAL,EAMErR,EANFqR,kBACAE,EAKEvR,EALFuR,mBACAI,EAIE3R,EAJF2R,uBACAE,EAGE7R,EAHF6R,wBACAC,EAEE9R,EAFF8R,sBACAE,EACEhS,EADFgS,uBAEM/V,EAAMC,YAAe,CAAC,iCAAkC,oBAAxDD,EAGFuW,EAAqB,WACzBjB,IACAG,KAIIrG,EAAwBpM,IAAMK,aAClC,kBACE,gCACE,cAAC6Q,EAAA,EAAD,CAAaxT,QAASV,EAAE,wBAAxB,SACE,cAACuK,EAAA,EAAD,CAAe4D,QAASoI,EAAoBxQ,OAAQ,CAAEC,KAAM,CAAEqJ,YAAa,IAA3E,SACGrP,EAAE,2BAGP,cAACkU,EAAA,EAAD,CAAaxT,QAASV,EAAE,sBAAxB,SACE,cAACwW,EAAA,EAAD,CAAerI,QAASoI,EAAoBxQ,OAAQ,CAAEC,KAAM,CAAEqJ,YAAa,IAA3E,SACGrP,EAAE,2BAKX,CAACsV,EAAoBG,IAGvB,OAAO,eAAC,IAAM5G,SAAP,WAEL,cAAC4H,EAAA,EAAD,CACEnH,OAAQiG,EACRhQ,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,wBACdyP,UAAWgG,EACX/F,kBAAkB,EAClBN,sBAAuBA,EAPzB,SASE,cAAC,IAAD,MAIF,cAACqH,EAAA,EAAD,CACEnH,OAAQ8F,EACR7P,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,uBACdyP,UAAW6F,EACX5F,kBAAkB,EAClBN,sBAAuBA,EAPzB,SASE,cAAC,IAAD,MAIF,cAACqH,EAAA,EAAD,CACEnH,OAAQoG,EACRnQ,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,qCACdyP,UAAWmG,EACXlG,kBAAkB,EANpB,SAQE,cAAC,IAAD,CACE/O,WAAW,4HACXC,QAAQ,4HACRC,OAAO,4HACPC,MAAM,4HACNC,KAAK,gIAIT,cAAC0V,EAAA,EAAD,CACEnH,OAAQuG,EACRtQ,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,qCACdyP,UAAWsG,EACXrG,kBAAkB,EANpB,SAQE,cAAC,IAAD,CACE/O,WAAW,4HACXC,QAAQ,4HACRC,OAAO,4HACPC,MAAM,4HACNC,KAAK,mIAKb,SAASmV,IAGP,IAAQlW,EAAMC,YAAe,kCAArBD,EAeF0W,EAA0B,CAC9B1Q,KAAM,CACJ3G,WAAY,MAIVsX,EAAiB,SAAC5S,GACtB,OAAO,cAAC0G,EAAA,EAAMrK,KAAP,UACL,cAAC6T,EAAA,EAAD,CAAM1D,QAAQ,aAAaxK,OAAQ2Q,EAAnC,SACG1W,EAAE+D,EAAM1D,YAKf,OAAO,eAACoK,EAAA,EAAD,2BA1B8B,CACnCmM,cAAe,gBACf7Q,OAAQ,CACNC,KAAM,CACJM,MAAO,IACPL,OAAQ,OACR4Q,UAAW,IACXvX,QAAS,oBAmBR,cACL,cAACqX,EAAD,CAAgBtW,MAAM,sBACtB,cAACsW,EAAD,CAAgBtW,MAAM,0BACtB,cAACsW,EAAD,CAAgBtW,MAAM,0BACtB,cAACsW,EAAD,CAAgBtW,MAAM,kB,gLCvLbyW,EAAkB,kBAC3B,cAAC,IAAD,CACI9S,cAAe,CACX+S,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRhM,KAAMzH,KAAKkC,OAEf1B,SAAU,SAACL,EAAD,GAAgC,IAArB+F,EAAoB,EAApBA,cACjB,OAAO,IAAIwN,SAAQ,SAAAC,GAAO,OACtBC,YAAW,WACPC,QAAQC,IAAI,YAAa1X,KAAKC,UAAU8D,EAAQ,KAAM,IACtD+F,GAAc,GACd2N,QAAQC,IAAI,YAAaH,GACzBA,MACD,SAff,SAkBI,qCACI,uBAAOI,QAAQ,YAAf,wBACA,cAAC,IAAD,CAAOtW,KAAK,YAAY2E,YAAY,SAEpC,uBAAO2R,QAAQ,WAAf,uBACA,cAAC,IAAD,CAAOtW,KAAK,WAAW2E,YAAY,QAEnC,uBAAO2R,QAAQ,QAAf,mBACA,cAAC,IAAD,CAAOtW,KAAK,QAAQ2E,YAAY,gBAAgB4R,KAAK,UAErD,eAAC,IAAD,CAAOvW,KAAK,SAASwW,GAAG,SAASlN,UAAU,YAA3C,UACI,wBAAQhG,MAAM,MAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,qBAGJ,cAAC,IAAD,CACItD,KAAK,OACLsT,OAAQ,SAAAmD,GAAU,OACd,cAAC/R,EAAA,EAAD,OAOR,cAAC,IAAD,UCxHG,SAASgS,IACtB,OACE,eAAC,IAAM/I,SAAP,WACE,cAAC,IAAD,CAAMgJ,GAAG,aAAT,uBACA,cAAC,EAAD,O,4ECHAC,EAAYC,IAAOC,IAAV,yDAsBAC,EAboD,SAAClU,GAElE,IAAQyG,EAA8CzG,EAA9CyG,UAAW0N,EAAmCnU,EAAnCmU,OAAQC,EAA2BpU,EAA3BoU,aAAcjU,EAAaH,EAAbG,SAEzC,OAAO,cAAC,WAAS8T,IAAV,CAAcpZ,MAAOsZ,EAArB,SACL,cAAC,aAAD,CAAY9V,UAAQ,EAACC,YAAU,EAACC,cAAe,IAAKC,cAAe4V,EAAnE,SACE,cAACL,EAAD,CAAWtN,UAAWA,EAAtB,SACGtG,SClBHkU,EAAQL,IAAOC,IAAIK,OAAM,SAAAtU,GAAK,MAAK,CAAEuU,UAAW,SAAxCP,CAAH,wFAIP,SAAAhU,GAAK,MAAwB,QAApBA,EAAMuU,UAAsB,UAAY,gBAOxCC,EAA+C,SAACxU,GACzD,OACI,cAACqU,EAAD,CAAOE,UAAWvU,EAAMuU,UAAxB,SAAoCvU,EAAMG,Y,mGCPlDsU,IAEGC,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACJC,YAAa,KACbC,cAAc,EAEdC,UAAW,CACTC,GAAIC,EACJC,GAAIC,GAENC,cAAe,CACbC,aAAa,KAIJb,QAAf,EC1BO,SAASc,IACd,IAAIC,EAAOC,SAASC,gBAEhBD,SAASE,kBACXF,SAASG,iBAELJ,EAAKK,kBACPL,EAAKK,oBACIL,EAAKM,oBACdN,EAAKM,sBACIN,EAAKO,qBACdP,EAAKO,uBACIP,EAAKQ,yBACdR,EAAKQ,0BCNXvB,EAAKwB,eAAe,YAEb,IAAMnY,EAAgC,CAC3C,CACEZ,IAAK,SACLgN,UAAW,CAAEC,SAAU,QACvBxE,KAAM8O,EAAKxY,EAAE,iBACbia,UAAU,GAEZ,CACEhZ,IAAK,YACLgN,UAAW,CAAEC,SAAU,QACvBxE,KAAM8O,EAAKxY,EAAE,iBACbia,UAAU,GAEZ,CACEhZ,IAAK,QACLgN,UAAW,CAAEC,SAAU,SACvBxE,KAAM8O,EAAKxY,EAAE,kBACbia,UAAU,EACV9L,QAAS,kBAAMvE,MAAM,WAEvB,CACE3I,IAAK,SACLgN,UAAW,CAAEC,SAAU,UACvBxE,KAAM8O,EAAKxY,EAAE,mBACbia,UAAU,EACV9L,QAAS,kBAAMvE,MAAM,aAIZsQ,EAAwC,CACnD,CACEjZ,IAAK,MACLyI,KAAM8O,EAAKxY,EAAE,uBACbiO,UAAW,CAAEC,SAAU,YACvBC,QAAS,kBAAMvE,MAAM,aAEvB,CACE3I,IAAK,OACLyI,KAAM8O,EAAKxY,EAAE,wBACbiO,UAAW,CAAEC,SAAU,wBACvBC,QAAS,kBAAMvE,MAAM,kBAEvB,CACE3I,IAAK,UACLyI,KAAM8O,EAAKxY,EAAE,2BACbiO,UAAW,CAAEC,SAAU,cACvBC,QAAS,kBAAMvE,MAAM,qBAEvB,CACE3I,IAAK,YACLyI,KAAM8O,EAAKxY,EAAE,sBACbiO,UAAW,CAAEC,SAAU,iBACvBC,QAAS,kBAAMvE,MAAM,uBAEvB,CACE3I,IAAK,QACLyI,KAAM8O,EAAKxY,EAAE,kBACbiO,UAAW,CAAEC,SAAU,SACvBC,QAAS,kBAAMvE,MAAM,oB,gCC/DnBuQ,EAAgBC,YAAY,CAChClZ,KAAM,WACNmZ,aAAc7B,EAAK8B,SACnBC,SAAU,CACRC,YAAa,SAACC,EAAeC,GAC3B,IAAQC,EAAYD,EAAZC,QAER,OADAnC,EAAKoC,eAAeD,GACLA,GAEjBE,WAAY,SAACJ,GAEXjC,EAAKoC,eADG,OAGVE,WAAY,SAACL,GAEXjC,EAAKoC,eADG,OAGVG,UAAW,SAACN,GAEVjC,EAAKoC,eADG,UAMDI,EAAiB,SAACP,GAAD,OAAmBA,EAAMH,UAChD,EAAgDH,EAAcc,QAAtDT,EAAR,EAAQA,YAEAL,GAFR,EAAqBU,WAArB,EAAiCC,WAEzBX,EAAf,SCpBe,SAASe,KACtB,IAAQlb,EAAMC,YAAe,CAAC,YAAa,cAAnCD,EACFmb,EAAOrU,YAAYkU,GAEnB5H,EAAWC,cAoBX+H,EAAgB,CACpB,CAAEna,IAAK,KAAMyI,KAAM1J,EAAE,iBACrB,CAAEiB,IAAK,KAAMyI,KAAM1J,EAAE,iBACrB,CAAEiB,IAAK,KAAMyI,KAAM1J,EAAE,kBAGvB,OACE,eAACyK,EAAA,EAAD,2BAlB8B,CAC9BvK,OAAQ,CACNC,YAAa,IAEf4F,OAAQ,CACNC,KAAM,CACJmE,UAAW,OAYf,cACE,cAACM,EAAA,EAAMrK,KAAP,UACE,cAACkE,EAAA,EAAD,CACEjE,MAAOL,EAAE,eACT8N,mBAAoBqN,QAAcE,EAClCxV,YAAa7F,EAAE,mBACfM,QAAS8a,EACTE,SAhCmB,SACzBC,EACAha,GAEIA,GAAM6R,EAASoH,EAAYjZ,EAAKN,IAAI+M,kBA+BtC,cAACvD,EAAA,EAAMrK,KAAP,UACE,cAACkE,EAAA,EAAD,CACEjE,MAAOL,EAAE,iBACT6F,YAAa7F,EAAE,mBACfM,QAAS8a,EACTE,SAAU,qB,8DCvDPE,GAAYC,aAAY,CACnC1O,QAAS,CACP2O,aAAc,UACd7J,gBAAiB,UACjBlE,aAAc,UACdgO,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnB7O,eAAgB,UAChB4G,aAAc,UACdkI,qBAAsB,UACtBpJ,kBAAmB,UACnBqJ,mBAAoB,UACpBpL,gBAAiB,UACjBvC,iBAAkB,UAClB4N,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbzO,MAAO,UACPiE,MAAO,aAIEyK,GAAad,aAAY,CACpC1O,QAAS,CACP2O,aAAc,UACd7J,gBAAiB,UACjBlE,aAAc,UACdgO,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnB7O,eAAgB,UAChB4G,aAAc,UACdkI,qBAAsB,UACtBpJ,kBAAmB,UACnBqJ,mBAAoB,UACpBpL,gBAAiB,UACjBvC,iBAAkB,UAClB4N,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbzO,MAAO,UACPiE,MAAO,aAIE0K,GAAkBf,aAAY,CACzC1O,QAAS,CACP2O,aAAc,UACd7J,gBAAiB,UACjBlE,aAAc,UACdgO,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnB7O,eAAgB,UAChB4G,aAAc,UACdkI,qBAAsB,UACtBpJ,kBAAmB,UACnBqJ,mBAAoB,UACpBpL,gBAAiB,UACjBvC,iBAAkB,UAClB4N,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbzO,MAAO,UACPiE,MAAO,aAIE2K,GAAahB,aAAY,CACpC1O,QAAS,CACP2O,aAAc,UACd7J,gBAAiB,UACjBlE,aAAc,UACdgO,WAAY,UACZC,cAAe,UACfC,eAAgB,UAChBC,aAAc,UACdC,UAAW,UACXC,YAAa,UACbC,kBAAmB,UACnB7O,eAAgB,UAChB4G,aAAc,UACdkI,qBAAsB,UACtBpJ,kBAAmB,UACnBqJ,mBAAoB,UACpBpL,gBAAiB,UACjBvC,iBAAkB,UAClB4N,kBAAmB,UACnBC,eAAgB,UAChBC,YAAa,UACbzO,MAAO,UACPiE,MAAO,aAME4K,GAAgC,CAC3C,CAAE3O,GAAI,IAAK1N,MAAO,OAAQd,MAAO,WACjC,CAAEwO,GAAI,IAAK1N,MAAO,QAASd,MAAO,WAClC,CAAEwO,GAAI,IAAK1N,MAAO,aAAcd,MAAO,WACvC,CAAEwO,GAAI,IAAK1N,MAAO,QAASd,MAAO,YC1G9Bod,GAAavC,YAAY,CAC7BlZ,KAAM,QACNmZ,aAAcmB,GACdjB,SAAU,CACRqC,SAAU,SAACnC,EAAeC,GAGxB,OAFoBA,EAAZC,SAGN,IAAK,OACHF,EAAQe,GACR,MACF,IAAK,QACHf,EAAQ8B,GACR,MACF,IAAK,aACH9B,EAAQ+B,GACR,MACF,IAAK,QACH/B,EAAQgC,GAGZI,aAAUpC,IAEZqC,aAAc,SAACrC,GAEboC,aAAUrB,KAEZuB,cAAe,SAACtC,GAEdoC,aAAUN,KAEZS,mBAAoB,SAACvC,GAEnBoC,aAAUL,KAEZS,cAAe,SAACxC,GAEdoC,aAAUJ,QAMT,GAMHE,GAAW1B,QALb2B,GADK,GACLA,SAOaD,IARR,GAELI,cAFK,GAGLC,mBAHK,GAILC,cAJK,GAKLH,aAGaH,GAAf,S,qBC/CMO,GAAenF,IAAOC,IAAV,iIAOX,SAASmF,GAAOpZ,GACrB,IAAMoC,EAAUC,aAAe,CAC7BgX,YAAa,CACXnX,OAAQlC,EAAMsZ,KACd/W,MAAOvC,EAAMsZ,KACb3P,gBAAiB3J,EAAMxE,MACvB4N,OAAQ,aAAepJ,EAAMoJ,UAIjC,OACE,cAAC+P,GAAD,CACE/O,QAASpK,EAAMoK,QACf3D,UAAW8S,KAAWvZ,EAAMyG,UAAWrE,EAAQiX,eCxBtC,SAASG,GAAYxZ,GAClC,IAAQ2Y,EAA8B3Y,EAA9B2Y,WAAYc,EAAkBzZ,EAAlByZ,QAASH,EAAStZ,EAATsZ,KAGrBtQ,EAAYC,cAAZD,QACF5G,EAAUC,aAAe,CAC7BC,OAAQ,CACN,SAAU,CACRoX,OAAQ,UACRtQ,OAAQ,aAAeJ,EAAQK,mBAKrC,OACE,cAAC,IAAMyB,SAAP,UACG6N,EAAWxJ,KAAI,SAACwK,GACf,OACE,8BACE,cAACP,GAAD,CACEzQ,UAAWgR,EAAKrd,MAChBgd,KAAMA,EACN9d,MAAOme,EAAKne,MACZ4N,OAAQJ,EAAQmP,qBAChB/N,QAAS,kBAAMqP,EAAQE,EAAKrd,OAAS,KACrCmK,UAAWrE,EAAQE,UAPbqX,EAAK3P,SCPV,SAAS4P,KAEtB,IAAQ5Q,EAAYC,cAAZD,QAeF6Q,EAAiD,CACrD9M,WAAY,CACV+M,YAAa9Q,EAAQgE,gBACrB,SAAU,CACR8M,YAAa9Q,EAAQyB,oBAMrB7H,EAAkC,CACtCC,aAAc,MACdb,OAAQ,CACNC,KAAM,CACJ,WAAY,CACVjH,WAAYgO,EAAQoP,mBACpBlW,OAAQ,OAORjG,EAAMC,YAAe,CAAC,cAAtBD,EACFoT,EAAWC,cAEjB,OACE,eAAC5I,EAAA,EAAD,2BAvC8B,CAC9BvK,OAAQ,CACNC,YAAa,IAEf4F,OAAQ,CACNC,KAAM,CACJmE,UAAW,OAiCf,cACE,cAACG,GAAA,EAAD,2BAAe3D,GAAf,aACE,cAACsN,EAAA,EAAD,CAAM1D,QAAQ,aAAd,SACE,4BAAIvQ,EAAE,eAIV,cAACyK,EAAA,EAAMrK,KAAP,UACE,cAACgL,GAAA,EAAD,CACE/K,MAAOL,EAAE,QACT6Q,aAAa,wBACb9K,OAAQ6X,MAIZ,cAACnT,EAAA,EAAMrK,KAAP,UACE,cAACgL,GAAA,EAAD,CACE/K,MAAOL,EAAE,QACT6Q,aAAa,OACb9K,OAAQ6X,MAIZ,eAACnT,EAAA,EAAMrK,KAAP,WACE,cAACsK,GAAA,EAAD,UAAQ1K,EAAE,UACV,cAAC8d,GAAA,EAAD,CACEpU,KAAK,wBACL2T,KAAMU,KAAYC,OAClBC,cAAeC,KAAqBC,UAGxC,uBACA,cAAC7T,GAAA,EAAD,2BAAe3D,GAAf,aACE,cAACsN,EAAA,EAAD,CAAM1D,QAAQ,aAAd,SACE,4BAAIvQ,EAAE,gBAYV,eAACyK,EAAA,EAAMrK,KAAP,WACE,cAACsK,GAAA,EAAD,UAAQ1K,EAAE,iBACV,cAACyK,EAAA,EAAD,CAAOjE,YAAU,EAACtG,OAAQ,CAAEC,YAAa,GAAzC,SACE,cAACod,GAAD,CACEb,WAAYA,GACZW,KAAK,OACLG,QAAS,SAACvc,GAAD,OAASmS,EAASwJ,GAAS3b,gB,cClHzC,SAASmd,GAAgBra,GAE5B,IAAQgJ,EAAYC,cAAZD,QAEFsR,EAAwC,CAC1CrY,KAAM,CACF0H,gBAAiBX,EAAQ2O,cAE7BjO,YAAa,CACTC,gBAAiBX,EAAQgP,WAE7BuC,YAAa,CACT5Q,gBAAiBX,EAAQiP,aAE7BpO,KAAM,CACFrO,MAAOwN,EAAQ+E,OAEnByM,YAAa,CACThf,MAAOwN,EAAQ+E,OAEnB0M,YAAa,CACTjf,MAAOwN,EAAQ+E,OAEnBzR,MAAO,CACHd,MAAOwN,EAAQ+E,OAEnB2M,aAAc,CACVlf,MAAOwN,EAAQ+E,QAIvB,OAAO,cAAC4M,GAAA,EAAD,2BAAsB3a,GAAtB,IAA6BgC,OAAQ4Y,aAAgB5a,EAAMgC,OAAQsY,MAIvE,SAASO,GAAqB7a,GAEjC,IAAQgJ,EAAYC,cAAZD,QAEFsR,EAAwC,CAC1CrY,KAAM,CACF0H,gBAAiBX,EAAQ2O,cAG7BjO,YAAa,CACTC,gBAAiBX,EAAQgP,WAE7BuC,YAAa,CACT5Q,gBAAiBX,EAAQiP,aAE7B6C,aAAc,CACVnR,gBAAiBX,EAAQiP,aAE7B8C,oBAAqB,CACjBpR,gBAAiBX,EAAQgP,WAE7BgD,SAAU,CACNxf,MAAOwN,EAAQ+E,MAAQ,cACvB5S,SAAUyS,KAAUC,SAI5B,OAAO,cAAC8M,GAAA,EAAD,2BAAsB3a,GAAtB,IAA6BgC,OAAQ4Y,aAAgB5a,EAAMgC,OAAQsY,MAKvE,IAAMW,GAAgB,SAACjS,GAC1B,MAAO,CACHL,UAAW,gBACXuS,UAAW,CACPlZ,OAAQ,CACJmZ,mBAAoB,CAChBC,SAAU,CACNvR,KAAM,CAAErO,MAAOwN,EAAQc,UAInChM,MAAO,MChEJ,SAASud,KAGtB,ITmDuBC,EAA6BC,ESnD5CvS,EAAYC,cAAZD,QAEFwS,EAAqC,CACzCvZ,KAAM,CACJC,OAAQ,GACR3G,QAAS,EACToO,gBAAiBX,EAAQ2O,eAIvBhF,EAA0B,CAC9B1Q,KAAM,CACJwZ,SAAU,WACVC,IAAK,GACLC,KAAM,MACNC,UAAW,mBACXpgB,MAAOwN,EAAQ4O,aAKX3b,EAAMC,YAAe,iBAArBD,EAER,EAA4FkM,aAAW,GAAvG,mBAAO0T,EAAP,YAAqCC,EAArC,EAA4BxT,QAAsCyT,EAAlE,EAAwDvT,SACxD,EAA4FL,aAAW,GAAvG,mBAAO6T,EAAP,YAAqCC,EAArC,EAA4B3T,QAAsC4T,EAAlE,EAAwD1T,SAExD,OACE,eAAC,IAAMsC,SAAP,WACE,eAACoF,EAAA,EAAD,CAAM1D,QAAQ,QAAQxK,OAAQ2Q,EAA9B,yBACe1W,EAAE,6BAGjB,cAACkgB,EAAA,EAAD,CACEC,SAAU/B,GACVvc,MAAOA,EACPue,UTgBiBf,EShBEQ,ETgB2BP,EShBRU,ETiBrC,CACL,CACE/e,IAAK,aACLyI,KAAM8O,EAAKxY,EAAE,uBACb0M,UAAW,cACXuN,UAAU,EACVhM,UAAW,CAAEC,SAAU,cACvBC,QAASmL,GAEX,CACErY,IAAK,WACLyI,KAAM8O,EAAKxY,EAAE,qBACb0M,UAAW,WACXuN,UAAU,EACVhM,UAAW,CAAEC,SAAU,kBACvBC,QAASkR,GAEX,CACEpe,IAAK,WACLyI,KAAM8O,EAAKxY,EAAE,qBACb0M,UAAW,kBACXuN,UAAU,EACVhM,UAAW,CAAEC,SAAU,YACvBC,QAASmR,GAEX,CACEre,IAAK,gBACLyI,KAAM8O,EAAKxY,EAAE,0BACb0M,UAAW,uBACXuN,UAAU,EACVhM,UAAW,CAAEC,SAAU,UACvBC,QAAS,kBAAMvE,MAAM,oBAEvB,CACE3I,IAAK,OACLyI,KAAM,wBACNgD,UAAW,YACXuN,UAAU,EACVhM,UAAW,CAAEC,SAAU,WACvBC,QAAS,kBAAMvE,MAAM,eSvDnBsQ,cAAeA,EACfmG,iBAAkBzB,GAClB0B,oBAAqBtB,GAAcjS,GACnCL,UAAU,6DACV3G,OAAQwZ,IAGV,cAAC9I,EAAA,EAAD,CACEnH,OAAQsQ,EACRra,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,6BACdyP,UAAWqQ,EALb,SAME,cAAC5E,GAAD,MAGF,cAACzE,EAAA,EAAD,CACEnH,OAAQyQ,EACRxa,qBAAqB,QACrBgK,mBAAmB,EACnBC,WAAYxP,EAAE,6BACdyP,UAAWwQ,EALb,SAME,cAACtC,GAAD,S,wBC3DO,SAAS4C,GAASxc,GAC/B,IAAQyc,EAA2Bzc,EAA3Byc,OAAQC,EAAmB1c,EAAnB0c,eACRC,EAASF,EAATE,KAGA3T,EAAYC,cAAZD,QAEF4T,EAAqC,CACzC3a,KAAM,CACJC,OAAQ,GACRyH,gBAAiBX,EAAQ2O,aACzBkF,OAAQ,IAEVC,KAAM,CACJ5a,OAAQ,UACRyH,gBAAiBX,EAAQ2O,aACzBnc,MAAOwN,EAAQ+E,MACf5S,SAAUyS,KAAUmP,MACpB,SAAU,CACRpT,gBAAiBX,EAAQ+O,aACzBvc,MAAOwN,EAAQ+E,OAEjB,UAAW,CACTpE,gBAAiBX,EAAQgP,UACzBxc,MAAOwN,EAAQ+E,OAEjB,SAAU,CACRpE,gBAAiBX,EAAQ2O,aACzBnc,MAAOwN,EAAQ+E,QAGnBiP,eAAgB,CACd9a,OAAQ,UACRyH,gBAAiBX,EAAQK,eAAiB,cAC1C7N,MAAOwN,EAAQc,MAAQ,gBAKnB7N,EAAMC,YAAe,QAArBD,EAGFoT,EAAWC,cAYjB,OACE,cAAC2N,GAAA,EAAD,CACEC,WAAW,OACXnT,mBAAmB,OACnB/H,OAAQ4a,EACRO,YAfsB,SAAC3f,EAAkB4f,GAG3C,GAFAV,GAAe,GAEXlf,EAAM,CACR,IAAM6f,EAAU7f,EAAKwC,MAAMsd,QAE3BjO,EAASkO,YAAiB,CAAEC,OAAQH,OAKtC,SAMGV,EAAKxN,KAAI,SAACwB,GACT,OACE,cAAC8M,GAAA,EAAD,CAEEH,QAAS3M,EAAIzT,IACbuO,WAAYxP,EAAE0U,EAAIxT,MAClBugB,SAAU/M,EAAI9G,MAHT8G,EAAIzT,U,wBCvEfqf,GAAoC,CACxC5T,UAAW,aACXyB,QAAS,SAACgT,GAAD,OACPvX,MAAM,2BAUJ8X,GAA2C,CAC/C1b,KAAM,CACJwZ,SAAU,WACVC,IAAK,GACLkC,MAAO,EACPf,OAAQ,IAEVgB,WAAY,CACV/iB,OAAQ,kBAKNgjB,GAA4B,CAChC,CACEC,YAAa,wBACb7D,cAAeC,KAAqB6D,MAEtC,CACED,YAAa,iBACb7D,cAAeC,KAAqB8D,MAEtC,CACEF,YAAa,mBACb7D,cAAeC,KAAqB+D,YAEtC,CACEH,YAAa,qBACb7D,cAAeC,KAAqBgE,UAEtC,CACEJ,YAAa,eACb7D,cAAeC,KAAqBiE,MAEtC,CACEL,YAAa,iBACb7D,cAAeC,KAAqBkE,OAEtC,CACEN,YAAa,cACb7D,cAAeC,KAAqBmE,UAEtC,CACEP,YAAa,eACb7D,cAAeC,KAAqB+D,YAEtC,CACEH,YAAa,oBACb7D,cAAeC,KAAqBoE,QAEtC,CACER,YAAa,gBACb7D,cAAeC,KAAqBqE,SAIzB,SAASC,KACtB,OACE,cAACC,GAAA,EAAD,CACEC,SAAUb,GACVc,YAAa5E,KAAY6E,OACzBC,uBAAwB,EACxBvC,oBAAqBA,GACrBwC,mBAAoBC,KAAmBC,YACvCC,eAtEwB,CAC5BvW,UAAW,mBACXwW,KAAM,KAqEFC,gBAAgB,2DAChBpd,OAAQ2b,KChFC,SAAS0B,GAASrf,GAE/B,IAAQ0c,EAAyB1c,EAAzB0c,eAAgBC,EAAS3c,EAAT2c,KAExB,OACE,eAAC,IAAM7R,SAAP,WACE,cAAC0R,GAAD,CAAUC,OAAQE,EAAMD,eAAgBA,IACxC,cAAC+B,GAAD,O,aCgESa,GAjEkC,SAACtf,GAChD,IAAQG,EAA0DH,EAA1DG,SAAUof,EAAgDvf,EAAhDuf,QAASC,EAAuCxf,EAAvCwf,YAAaC,EAA0Bzf,EAA1Byf,UAAWC,EAAe1f,EAAf0f,WAG3C1W,EAAYC,cAAZD,QAEF2W,EAA0B,CAC9Bld,YAAY,EACZC,gBAAiB,gBACjBV,OAAQ,CACNC,KAAM,CACJC,OAAQ,GACR3G,QAAS,kBACToO,gBAAiBX,EAAQK,eACzB2G,aAAc,oBACdxU,MAAOwN,EAAQc,SAKf8V,EAAiC,CACrCC,MAAO,OAqBT,IAjB2BC,EAiBrBC,EAAaC,iBAAO,MAG1B,OApB2BF,EAkBTC,EAjBhBngB,qBAAU,WACR,SAASqgB,EAAmBzI,IACtBsI,EAAII,SAAYJ,EAAII,QAAQC,SAAS3I,EAAM4I,SAAYb,GACzDC,IAMJ,OADA/J,SAAS4K,iBAAiB,YAAaJ,GAChC,WAELxK,SAAS6K,oBAAoB,YAAaL,MAE3C,CAACH,EAAKP,IAMJG,GAAW,SAAC7kB,EAAY2C,GAAb,OAA2BA,GAC3C,cAAC,WAASyW,IAAV,CAAcpZ,MAAOA,EAArB,SACE,qBAAKilB,IAAKC,EAAV,SACE,eAACrZ,EAAA,EAAD,2BAAWiZ,GAAX,cACE,cAACjZ,EAAA,EAAMrK,KAAP,UACG8D,IAGH,cAACuG,EAAA,EAAMrK,KAAP,2BAAgBujB,GAAhB,aACGL,EACC,cAACnP,GAAA,EAAD,CAAYlG,UAAW,CAAEC,SAAU,aAAelM,MAAM,SAAS0K,UAAU,SAASyB,QAAS,SAAC5M,GAAD,OAAUgiB,OACvG,cAACpP,GAAA,EAAD,CAAYlG,UAAW,CAAEC,SAAU,OAASlM,MAAM,MAAM0K,UAAU,SAASyB,QAAS,SAAC5M,GAAD,OAAUiiB,sBCrD7F,SAASc,GAAUvgB,GAGhC,IAAQ2c,EAA0C3c,EAA1C2c,KAAMvS,EAAoCpK,EAApCoK,QAASoW,EAA2BxgB,EAA3BwgB,UAAWC,EAAgBzgB,EAAhBygB,WAE1BxkB,EAAMC,YAAe,SAArBD,EAKA+M,EAAYC,cAAZD,QAEF4T,EAAqC,CACzC3a,KAAM,CACJC,OAAQ,GACRyH,gBAAiBX,EAAQiH,cAE3B6M,KAAM,CACJ5a,OAAQ,UACRyH,gBAAiBX,EAAQiH,aACzBzU,MAAOwN,EAAQc,MACf3O,SAAUyS,KAAUmP,MACpB,SAAU,CACRpT,gBAAiBX,EAAQmP,qBACzB3c,MAAOwN,EAAQc,OAEjB,UAAW,CACTH,gBAAiBX,EAAQoP,mBACzB5c,MAAOwN,EAAQc,OAEjB,SAAU,CACRH,gBAAiBX,EAAQmP,qBACzB3c,MAAOwN,EAAQc,QAGnBkT,eAAgB,CACd9a,OAAQ,UACRyH,gBAAiBX,EAAQoP,mBAAqB,cAC9C5c,MAAOwN,EAAQc,MAAQ,cACvBxO,WAAYgP,KAAYoW,SAAW,gBAIvC,OACE,cAACzD,GAAA,EAAD,CACEC,WAAW,OACXyD,YAAaF,EACbze,OAAQ4a,EACRO,YAzCsB,SAAC3f,EAAkB4f,GAAnB,OAAsEhT,EAAQoW,EAAWhjB,IA0C/GojB,aAAa,EALf,SAOGjE,GACCA,EAAKxN,KAAI,SAACwB,GACR,OACE,cAAC8M,GAAA,EAAD,CAEEH,QAAS3M,EAAIzT,IACbuO,WAAYxP,EAAE0U,EAAIxT,MAClBugB,SAAU/M,EAAI9G,KAJhB,SAMG8G,EAAIF,QALAE,EAAIzT,UCzER,SAAS2jB,KACtB,IAAQ7X,EAAYC,cAAZD,QAER,OACE,cAACoH,GAAA,EAAD,CACElG,UAAW,CAAEC,SAAU,kBACvBnI,OAAQ,CAAEC,KAAM,CAAEzG,MAAOwN,EAAQc,QACjCM,QAAS,kBAAMvE,MAAM,wBCWZ,SAASib,GAAO9gB,GAE7B,IAAQ2Q,EAAqB3Q,EAArB2Q,IAAKoQ,EAAgB/gB,EAAhB+gB,YAGL/X,EAAYC,cAAZD,QAEF2W,EAA0B,CAC9Bld,YAAY,EACZT,OAAQ,CACNC,KAAM,CACJC,OAAQ,GACRuZ,SAAU,QACVuF,OAAQ,EACRze,MAAO,OACPoH,gBAAiBX,EAAQiH,gBAKzBgR,EAA6C,CACjDhf,KAAM,CACJ,UAAW,CACT0H,gBAAiBX,EAAQ+F,qBAMzBM,EAAWC,cAWjB,OACE,eAAC5I,EAAA,EAAD,2BAAWiZ,GAAX,cACE,cAACY,GAAD,CACE5D,KAAMhM,EAAIuQ,UACVV,UAAW7P,EAAIzT,IACfujB,WAAYM,EACZ3W,QAfmB,SAAC+W,EAAmB3jB,GAC3C,GAAIA,EAAM,CACR,IAAM6f,EAAU7f,EAAKwC,MAAMsd,QAG3BjO,EAASqB,YAAiB,CAAExT,IAAKikB,EAAWxQ,IAAK0M,EAASzM,KAAMpT,EAAKwC,MAAMG,gBAY1EwQ,EAAIyQ,SAAW,cAACP,GAAD,IAEhB,cAACta,GAAA,EAAD,CAAW8a,UAAQ,EAACrf,OAAQif,QCxDlC,IAyDeK,GAzD4B,SAACthB,GAG1C,MAAqD+C,YAAYwM,KAAzDE,EAAR,EAAQA,cAAe8R,EAAvB,EAAuBA,cAAe/R,EAAtC,EAAsCA,WAC9BgS,EAAUD,EAAc9R,GAAxB+R,MACA5Q,EAAS2Q,EAAc9R,GAAvBmB,KACF6Q,EAAYjS,EAAWkS,UAAUjS,GACjCsR,EAAcQ,EAAc9R,GAAekB,IAGjD,EAAoCzR,oBAAS,GAA7C,mBAAOyiB,EAAP,KAAmBC,EAAnB,KAEA,EAAsC1iB,oBAAS,GAA/C,mBAAO2iB,EAAP,KAAoBnF,EAApB,KACMoF,EAAoBC,wBAAcF,EAAa,CACnDG,KAAM,CAAEC,EAAG,EAAGC,GAAI,GAAIC,QAAS,GAC/BC,MAAO,CAAEH,EAAG,EAAGC,EAAG,EAAGC,QAAS,GAC9BE,MAAO,CAAEJ,EAAG,EAAGC,GAAI,GAAIC,QAAS,KAG5BG,EAAaC,oBAAU,CAC3Bnc,UAAWyb,EAAc,IAAM,GAC/BG,KAAM,CACJ5b,UAAW,OAaf,OACE,eAAC,IAAM0E,SAAP,WACE,cAAC,IAAD,IAEA,eAAC,EAAD,CAAQyJ,UAAU,MAAlB,UACE,cAAC8G,GAAD,IACA,cAACgE,GAAD,CAAU1C,KAAMnN,EAAYkN,eAAgBA,IAC5C,cAAC,GAAD,CAASgD,WAAYoC,EAAmBvC,QAASoC,EAAYnC,YAhBxC,WACzB9C,GAAe,GACfkF,GAAc,IAcoFnC,UAX3E,WACvBmC,GAAc,IAUV,SACGJ,OAIL,cAAC,EAAD,CAAerN,OAAQmO,EAAYlO,aAAcyN,EAAc,sBAAwB,sBAAvF,SACGjR,IAGH,cAACkQ,GAAD,CAAQnQ,IAAK8Q,EAAWV,YAAaA,QC1DrC5e,GAAcqgB,gBAAK,kBAAM,4CACzBhb,GAAmBgb,gBAAK,kBAAM,4CAC9B1R,GAAiB0R,gBAAK,kBAAM,4CAC5B5W,GAAuB4W,gBAAK,kBAAM,4CAClCxU,GAAyBwU,gBAAK,kBAAM,4CACpCvU,GAAYuU,gBAAK,kBAAM,4CACvBtU,GAAasU,gBAAK,kBAAM,4CACxBrU,GAAcqU,gBAAK,kBAAM,4CAEhB,SAASC,KACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAajS,OAAQkS,KACjC,cAAC,IAAD,CAAOD,KAAK,IAAIjS,OAAQ/F,SAMhC,IAAMiY,GAAoB,kBAExB,aADA,CACC,GAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOD,KAAK,qBAAqBjS,OAAQmS,UAQzCA,GAAkB,kBAGtB,cAFA,CAEC,IAAD,WACE,cAAC,IAAD,CAAOF,KAAK,6BAA6B3c,UAAW5D,KACpD,cAAC,IAAD,CAAOugB,KAAK,kCAAkC3c,UAAWyB,KACzD,cAAC,IAAD,CAAOkb,KAAK,gCAAgC3c,UAAW+K,KACvD,cAAC,IAAD,CAAO4R,KAAK,sCAAsC3c,UAAW6F,KAC7D,cAAC,IAAD,CAAO8W,KAAK,iCAAiC3c,UAAWiI,KACxD,cAAC,IAAD,CAAO0U,KAAK,2BAA2B3c,UAAWkI,KAClD,cAAC,IAAD,CAAOyU,KAAK,4BAA4B3c,UAAWmI,KACnD,cAAC,IAAD,CAAOwU,KAAK,6BAA6B3c,UAAWoI,SCvCzC0U,OARf,WACE,OACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAACL,GAAD,OCQSM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBxjB,MAAK,YAAkD,IAA/CyjB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCNRO,GAAYlN,YAAY,CAC5BlZ,KAAM,eACNmZ,cAAc,EACdE,SAAU,CACRgN,WAAY,SAAC9M,GACX,OAAQA,GAEV+M,QAAS,SAAC/M,GACR,OAAe,GAEjBgN,WAAY,SAAChN,GACX,OAAe,MAMd,GAA4C6M,GAAUrM,QAE9CqM,IAFR,GAAQC,WAAR,GAAoBC,QAApB,GAA6BC,WAErBH,GAAf,S,SCLeI,GAVDC,YAAe,CAC3BC,QAAS,CACPC,MAAOC,GACPxN,SAAUyN,EACVC,KAAMC,GACNC,QAASC,KACTC,UAAWC,OCDfxL,aAAU6K,GAAMY,WAAWT,OAC3BU,eAEAC,IAAShU,OACP,cAAC,IAAMiU,WAAP,UACE,cAAC,IAAD,CAAUf,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJlO,SAASkP,eAAe,SAM1B5B,M,qFCVe/c,IAfQ,SAAC,GAAoC,IAAlC3F,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAASN,EAAiB,iBAKzD,OACE,cAAC,IAAD,uCACMK,GACAL,GAFN,IAGEQ,kBARmB,SAACC,GACtB,OAAOH,EAAKI,SAAWJ,EAAKK,OAASL,EAAKK,OAAON,EAAMlD,MAAQ,IAQ7DyD,uBAAwB,S,kQCVf,SAASgkB,IACpB,OAAO,uDCDI,SAASC,IACtB,OAAO,2CCDM,SAASC,IACtB,OAAO,qDCDM,SAASC,IACtB,OAAO,uDCDM,SAASC,IACtB,OAAO,uDCDM,SAASC,IACtB,OAAO,iDCDM,SAASC,IACtB,OAAO,mDCDM,SAASC,IACtB,OAAO,mDCDM,SAASC,IACtB,OAAO,wDCDM,SAASC,IACtB,OAAO,oDCDM,SAASC,IACtB,OAAO,uD,2BCSHhP,EAAwC,CAC1C9G,WCasB,ICI1B,WAIE,WAAYmN,GAAc,yBAF1BA,UAEyB,EACvB4I,KAAK5I,KAAOA,EALhB,6CAQE,SAAUzf,GACR,OAAOqoB,KAAK5I,KAAKhV,MAAK,SAAAgJ,GAAG,OAAIA,EAAIzT,MAAQA,MAAQ,KATrD,4BAYE,SAAeA,EAAasoB,GAC1B,IACIpW,EADEqW,EAAYF,KAAK5I,KAAKhV,MAAK,SAAAgJ,GAAG,OAAIA,EAAIzT,MAAQA,MAAQ,GAM5D,OAHIuoB,EAAUvE,YACZ9R,EAAQqW,EAAUvE,UAAUvZ,MAAK,SAAAgJ,GAAG,OAAIA,EAAIzT,MAAQsoB,MAE/CpW,GAAS,KAnBpB,wBAsBE,SAAWjS,GACT,OAAOooB,KAAK5I,KAAKhV,MAAK,SAAAgJ,GAAG,OAAIA,EAAIxT,OAASA,MAAS,KAvBvD,6BA0BE,SAAgBA,GAAoB,IAAD,gBACjBooB,KAAK5I,MADY,IACjC,2BAA2B,CAAC,IAAnBhM,EAAkB,QACzB,GAAIA,EAAIuQ,UAAW,CACjB,IAAMwE,EAAW/U,EAAIuQ,UAAUvZ,MAAK,SAAAge,GAAQ,OAAIA,EAASxoB,OAASA,MAAS,GAC3E,GAAIuoB,EAAU,OAAOA,IAJQ,8BAQjC,MAAO,OAlCX,KDJ0B,CAAc,CACtC,CACExoB,IAAK,OACLC,KAAM,SACN0M,KAAM,gBACN4G,OAAQ,cAAC,IAAD,CAAUqD,GAAG,OAGvB,CACE5W,IAAK,OACLC,KAAM,UACN0M,KAAM,OACN4G,OAAQ,cAAC9J,EAAA,EAAD,yBACRya,SAAS,EACTF,UAAW,CACT,CACEhkB,IAAK,OACLC,KAAM,UACN0M,KAAM,OACN4G,OAAQ,cAAC,UAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,eACN0M,KAAM,cACN4G,OAAQ,cAAC,UAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,aACN0M,KAAM,YACN4G,OAAQ,cAAC,UAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,mBACN0M,KAAM,sBACN4G,OAAQ,cAAC,UAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,cACN0M,KAAM,sBACN4G,OAAQ,cAAC,UAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,kBACN0M,KAAM,sBACN4G,OAAQ,cAACmU,EAAD,KAEV,CACE1nB,IAAK,OACLC,KAAM,QACN0M,KAAM,kBACN4G,OAAQ,cAAC,UAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,SACN0M,KAAM,cACN4G,OAAQ,cAAC,UAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,YACN0M,KAAM,mBACN4G,OAAQ,cAAC,EAAD,KAEV,CACEvT,IAAK,QACLC,KAAM,UACN0M,KAAM,YACN4G,OAAQ,cAAC,UAAD,OAId,CACEvT,IAAK,OACLC,KAAM,cACN0M,KAAM,UACN4G,OAAQ,cAAC9J,EAAA,EAAD,yBACRua,UAAW,CACT,CAAEhkB,IAAK,OAAQC,KAAM,MAAO0M,KAAM,MAAO4G,OAAQ,cAACoU,EAAD,KACjD,CACE3nB,IAAK,OACLC,KAAM,iBACN0M,KAAM,WACN4G,OAAQ,cAACqU,EAAD,KAEV,CACE5nB,IAAK,OACLC,KAAM,WACN0M,KAAM,gBACN4G,OAAQ,cAACsU,EAAD,KAEV,CACE7nB,IAAK,OACLC,KAAM,WACN0M,KAAM,YACN4G,OAAQ,cAACuU,EAAD,OAId,CACE9nB,IAAK,OACLC,KAAM,cACN0M,KAAM,iBACN4G,OAAQ,cAAC9J,EAAA,EAAD,yBACRua,UAAW,CACT,CACEhkB,IAAK,OACLC,KAAM,QACN0M,KAAM,WACN4G,OAAQ,cAACwU,EAAD,KAEV,CACE/nB,IAAK,OACLC,KAAM,UACN0M,KAAM,WACN4G,OAAQ,cAACyU,EAAD,KAEV,CACEhoB,IAAK,OACLC,KAAM,SACN0M,KAAM,OACN4G,OAAQ,cAAC0U,EAAD,KAEV,CACEjoB,IAAK,OACLC,KAAM,YACN0M,KAAM,QACN4G,OAAQ,cAAC,EAAD,KAEV,CACEvT,IAAK,OACLC,KAAM,WACN0M,KAAM,iBACN4G,OAAQ,cAAC4U,EAAD,KAEV,CACEnoB,IAAK,OACLC,KAAM,aACN0M,KAAM,YACN4G,OAAQ,cAAC6U,EAAD,OAId,CACEpoB,IAAK,OACLC,KAAM,WACN0M,KAAM,WACN4G,OAAQ,cAAC9J,EAAA,EAAD,0BAEV,CACEzJ,IAAK,OACLC,KAAM,OACN0M,KAAM,eACN4G,OAAQ,cAAC9J,EAAA,EAAD,4BD1KR8I,cAAe,OACf8R,cAAe,CACXqE,KAAM,CAAEpE,MAAO,cAAC7a,EAAA,EAAD,yBAA2BgK,IAAK,OAAQC,KAAM,cAAC,IAAM9F,SAAP,KAC7D+a,KAAM,CAAErE,MAAO,cAAC7a,EAAA,EAAD,yBAA2BgK,IAAK,OAAQC,KAAM,cAAC,UAAD,KAC7DkV,KAAM,CAAEtE,MAAO,cAAC7a,EAAA,EAAD,yBAA2BgK,IAAK,OAAQC,KAAM,cAACkU,EAAD,KAC7DiB,KAAM,CAAEvE,MAAO,cAAC7a,EAAA,EAAD,yBAA2BgK,IAAK,OAAQC,KAAM,cAACqU,EAAD,KAC7De,KAAM,CAAExE,MAAO,cAAC7a,EAAA,EAAD,yBAA2BgK,IAAK,OAAQC,KAAM,cAAC,IAAM9F,SAAP,KAC7Dmb,KAAM,CAAEzE,MAAO,cAAC7a,EAAA,EAAD,yBAA2BgK,IAAK,OAAQC,KAAM,cAAC,IAAM9F,SAAP,OAI/Dob,EAAiB7P,YAAY,CAC/BlZ,KAAM,YACNmZ,eACAE,SAAU,CACN2P,aAAc,SAACzP,EAAgCC,GAC3CD,EAAMlH,WAAamH,EAAOC,QAAQ+F,MAEtCY,iBAAkB,SAAC7G,EAAgCC,GAC/CD,EAAMjH,cAAgBkH,EAAOC,QAAQ4G,QAEzC9M,iBAAkB,SAACgG,EAAgCC,GAC/C,MAA2BA,EAAOC,QAA1B1Z,EAAR,EAAQA,IAAKyT,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,KACV4Q,EAAU9K,EAAM6K,cAAcrkB,GAA9BskB,MACR9K,EAAM6K,cAAcrkB,GAAO,CAAEskB,QAAO7Q,MAAKC,YAKxCrB,EAAwB,SAACmH,GAAD,OAAmBA,EAAM2N,WACvD,EAA6D6B,EAAehP,QAAtDqG,GAAtB,EAAQ4I,aAAR,EAAsB5I,kBAAkB7M,EAAxC,EAAwCA,iBAEhCwV,MAAf,S,sEG9CYE,EAYAC,E,kBAZAD,O,4DAAAA,I,4CAAAA,I,kCAAAA,I,4CAAAA,I,mBAAAA,I,mCAAAA,I,2BAAAA,I,8CAAAA,I,qFAAAA,M,cAYAC,O,4DAAAA,I,4CAAAA,I,kCAAAA,I,4CAAAA,I,mBAAAA,I,mCAAAA,I,2BAAAA,I,8CAAAA,I,qFAAAA,M,SCTAC,E,uCCMSC,E,iKAEjB,SAAYvc,EAAYwc,GACpB,IAAM5X,EAAO2W,KAAKtT,OAAOtK,MAAK,SAAAuK,GAAC,OAAIA,EAAElI,KAAOA,KAM5C,OAJI4E,IACAA,EAAKjJ,MAAQ6gB,GAGVjB,O,8BAGX,SAAiBvb,GAAa,IAAD,OACnByc,EAAUlB,KAAKmB,MAAM9oB,QAAO,SAAA+oB,GAAC,OAAIA,EAAE3E,OAAShY,KAAImF,KAAI,SAAAwX,GAAC,OAAI,EAAKC,SAASD,EAAE7S,OAE/E,MAAO,CAAElF,KAAM2W,KAAKqB,SAAS5c,GAAKyc,QAASA,K,yBAG/C,SAAYzc,EAAYyC,GACpB,OAAOzC,EAAGmD,MAAM,EAAGV,GAAOoa,OAAO,EAAG,O,qBAGxC,SAAQC,GACJ,IAAMC,EAAaxB,KAAKqB,SAASE,GAE3BE,EAAU,CACZhd,GAAIub,KAAK0B,WAAWH,EAAUC,EAAWta,MAAO8Y,KAAK2B,gBAAgBJ,GAAUjX,QAC/ElK,KAAM,GACN8G,MAAOsa,EAAWta,MAAQ,GAO9B,OAHA8Y,KAAKtT,OAAO/T,KAAK8oB,GACjBzB,KAAKmB,MAAMxoB,KAAK,CAAE8jB,KAAM+E,EAAW/c,GAAI8J,GAAIkT,EAAQhd,KAE5Cub,O,wBAGX,SAAWnT,GAeP,IAf2B,IAAD,OAE1B,EAA6BmT,KAAK4B,kBAAkB/U,GAA5CpI,EAAR,EAAQA,GAAIyC,EAAZ,EAAYA,MAAO2a,EAAnB,EAAmBA,MAEbJ,EAAU,CACZhd,GAAIA,EACJrE,KAAM,cAAgBqE,EACtByC,MAAOA,GAILqa,EAAWvB,KAAK8B,YAAYrd,EAAGC,WAAYwC,GAC3C6a,EAAc/B,KAAK2B,gBAAgBJ,GAAUS,OAZzB,WAejB1pB,GACL,IAAM2pB,EAAQF,EAAYzpB,GAGpB4pB,EAAY,EAAKb,SAASY,GAEhC,GAAIC,EAAW,CAEX,IAAMC,EAAU,EAAKP,kBAAkBK,GACvCC,EAAUzd,GAAK0d,EAAQ1d,GAEvB,EAAK0c,MAAQ,EAAKA,MAAMvX,KAAI,SAAAwX,GAAC,MAAK,CAC9B3E,KAAM2E,EAAE3E,OAASwF,EAAQE,EAAQ1d,GAAK2c,EAAE3E,KACxClO,GAAI6S,EAAE7S,KAAO0T,EAAQE,EAAQ1d,GAAK2c,EAAE7S,OAIrB9J,EAAG2d,OAAO,EAAGlb,EAAQ,GAEpB,EAAKmb,mBAAmBJ,GAEhCK,SAAQ,SAAAC,GAEhB,IAAMC,EAAIxa,mBAASua,EAAK9d,GAAGge,OAAOF,EAAKrb,QACjCwb,EAAYH,EAAK9d,GACvB8d,EAAK9d,GAAK,EAAKid,WAAWQ,EAAUzd,GAAI8d,EAAKrb,MAAOsb,GAGpD,EAAKrB,MAAQ,EAAKA,MAAMvX,KAAI,SAAAwX,GAAC,MAAK,CAC9B3E,KAAM2E,EAAE3E,OAASiG,EAAYH,EAAK9d,GAAK2c,EAAE3E,KACzClO,GAAI6S,EAAE7S,KAAOmU,EAAYH,EAAK9d,GAAK2c,EAAE7S,YA9B5CjW,EAAIupB,EAAQ,EAAGvpB,EAAIypB,EAAYzX,OAAQhS,IAAM,EAA7CA,GAyCT,OAJA0nB,KAAKtT,OAAO/T,KAAK8oB,GACjBzB,KAAKmB,MAAMxoB,KAAK,CAAE8jB,KAAM8E,EAAUhT,GAAIkT,EAAQhd,KAE9Cub,KAAKtT,OAASsT,KAAKtT,OAAOsV,MAAK,SAACW,EAAGC,GAAJ,OAAU5a,mBAAS2a,EAAEle,IAAMuD,mBAAS4a,EAAEne,OAC9Dub,O,wBAGX,SAAW6C,GAAkC,IAAD,OAClCxZ,EAAO2W,KAAKqB,SAASwB,GAE3B,GAAIxZ,EAAM,CAEN2W,KAAKtT,OAASsT,KAAKtT,OAAOrU,QAAO,SAAAsU,GAAC,OAAIA,EAAElI,KAAOoe,KAC/C7C,KAAKmB,MAAQnB,KAAKmB,MAAM9oB,QAAO,SAAA+oB,GAAC,OAAIA,EAAE3E,OAASoG,GAAUzB,EAAE7S,KAAOsU,KAOlE,IAJA,IAAMtB,EAAWvB,KAAK8B,YAAYe,EAAQxZ,EAAKnC,OACzC4b,EAAc9C,KAAK2B,gBAAgBJ,GAAUS,OAP7C,WAUG1pB,GACL,IAAM2pB,EAAQa,EAAYxqB,GAEpB4pB,EAAY,EAAKb,SAASY,GAChC,GAAIC,EAAW,CACX,IAAMa,EAAQ,EAAKrB,WAAWH,EAAU,EAAKyB,aAAazB,GAAWjpB,GACrE4pB,EAAUzd,GAAKse,EAEf,EAAK5B,MAAQ,EAAKA,MAAMvX,KAAI,SAAAwX,GAAC,MAAK,CAC9B3E,KAAM2E,EAAE3E,OAASwF,EAAQc,EAAQ3B,EAAE3E,KACnClO,GAAI6S,EAAE7S,KAAO0T,EAAQc,EAAQ3B,EAAE7S,SAVlCjW,EAAI,EAAGA,EAAIwqB,EAAYxY,OAAQhS,IAAM,EAArCA,GAeb,OAAO0nB,S,GC/Gf,WAKI,WAAYtT,EAAayU,GAAgB,yBAHzCzU,YAGwC,OAFxCyU,WAEwC,EACpCnB,KAAKtT,OAASA,EACdsT,KAAKmB,MAAQA,EAPrB,4CAUI,SAAS1c,GACL,OAAOub,KAAKtT,OAAOtK,MAAK,SAAAuK,GAAC,OAAIA,EAAElI,KAAOA,MAAO,KAXrD,0BAcI,SAAaA,GACT,OAAO,EAAIA,EAAGwe,MAAM,IAAI5qB,QAAO,SAAA6qB,GAAC,MAAU,MAANA,KAAW5Y,SAfvD,6BAkBI,SAAgBiX,GACZ,OAAOvB,KAAKmB,MAAM9oB,QAAO,SAAA+oB,GAAC,OAAIA,EAAE3E,OAAS8E,KAAU3X,KAAI,SAAAwX,GAAC,OAAIA,EAAE7S,QAnBtE,wBAsBI,SAAWgT,EAAkBra,EAAeic,GACxC,OAAO5B,EAAS3Z,MAAM,EAAGV,EAAQ,GAAGkc,QAAQD,EAAM,GAAGze,YAAY4c,OAAO,EAAG,OAvBnF,+BA0BI,SAAkBzU,EAAmBsW,GAEjC,IAAMjc,EAAQ8Y,KAAKgD,aAAanW,GAG5BpI,EAAKoI,EAAUjF,MAAM,EAAGV,GACtB2a,EAAQsB,GAAYnb,mBAAS6E,EAAU3F,IAAU,EAGvD,MAAO,CAAEzC,IADTA,GADAA,GAAMod,EAAMnd,YACJ4c,OAAO,EAAG,MACF5c,WAAYwC,MAAOA,EAAO2a,WAnClD,gCAsCI,SAAmBpd,GACf,IAAMyC,EAAQ8Y,KAAKgD,aAAave,GAC1B4e,EAAa5e,EAAG2d,OAAO,EAAGlb,EAAQ,GAExC,OAAO8Y,KAAKtT,OAAOrU,QAAO,SAAAsU,GAAC,OAAIA,EAAElI,GAAG2d,OAAO,EAAGlb,EAAQ,KAAOmc,OA1CrE,uBA6CI,WACI,IAAIC,EAAgB,CAAEja,KAAM2W,KAAKqB,SAAS,QAAUzmB,SAAU,IAE9D,OAAOolB,KAAKuD,aAAaD,KAhDjC,0BAmDI,SAAqBA,GAAgB,IAAD,OAE1BE,EAAcxD,KAAKmB,MAAM9oB,QAAO,SAAAorB,GAAI,OAAIA,EAAKhH,OAAS6G,EAAKja,KAAK5E,MAAImF,KAAI,SAAA6Z,GAAI,OAAI,EAAKpC,SAASoC,EAAKlV,OAQzG,OANA+U,EAAK1oB,SAAW4oB,EAAY5Z,KAAI,SAAAC,GAAK,MAAK,CAAER,KAAMQ,EAAOjP,SAAU,OAEnE0oB,EAAK1oB,SAAS0nB,SAAQ,SAAAzY,GAClB,EAAK0Z,aAAa1Z,MAGfyZ,MA7Df,MCZqBI,GFmNiB,IAAI1C,EAnFO,CAC7C,CACIvc,GAAI,OACJrE,KACI,kUACJ8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,iOACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,sIACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,oHACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,gJACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,gEACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,sKACN8G,MAAO,IAIqB,CAEhC,CAAEuV,KAAM,OAAQlO,GAAI,QACpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QACpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QAEpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QACpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QAEpB,CAAEkO,KAAM,OAAQlO,GAAI,U,kDE5MpB,WAAY7B,EAA4ByU,EAAewC,GAA+B,IAAD,8BACjF,cAAMjX,EAAQyU,IAHlBwC,gBAEqF,EAEjF,EAAKA,WAAaA,EAAW3B,MAAK,SAACW,EAAGC,GAAJ,OAAU5a,mBAAS2a,EAAEle,IAAMuD,mBAAS4a,EAAEne,OAFS,E,0DAKrF,SAAuBkD,GACnB,OAAOqY,KAAK2D,WAAWtrB,QAAO,SAAAsqB,GAAC,OAAIA,EAAEhb,WAAaA,O,iCAGtD,SAAoBA,EAAkBlD,GAElC,IAAInM,EAAI0P,mBAASvD,GACjBub,KAAK2D,WAAWtrB,QAAO,SAAAsqB,GAAC,OAAIA,EAAEhb,WAAaA,GAAYK,mBAAS2a,EAAEle,KAAOnM,KAAG0pB,OAAOM,SAAQ,SAACsB,EAASjsB,GACjGisB,EAAQnf,IAAMnM,EAAIX,EAAM,GAAG+M,cAI/B,IAAMmf,EAAc,CAChBlc,SAAUA,EACVlD,GAAIA,EACJrE,KAAM,IAMV,OAFA4f,KAAK2D,WAAWhrB,KAAKkrB,GACrB7D,KAAK2D,WAAa3D,KAAK2D,WAAW3B,MAAK,SAACW,EAAGC,GAAJ,OAAU5a,mBAAS2a,EAAEle,IAAMuD,mBAAS4a,EAAEne,OACtEub,O,4BAGX,SAAerY,EAAkBlD,GAS7B,OAPAub,KAAK2D,WAAa3D,KAAK2D,WAAWtrB,QAAO,SAAAsqB,GAAC,QAAMA,EAAEle,KAAOA,GAAMke,EAAEhb,WAAaA,MAG9EqY,KAAK2D,WAAWtrB,QAAO,SAAAsqB,GAAC,OAAIA,EAAEhb,WAAaA,KAAUqa,OAAOM,SAAQ,SAACzY,EAAOlS,GACxEkS,EAAMpF,GAAK9M,EAAI+M,cAGZsb,O,qCAGX,WAA2B,IAAD,OAEhB8D,EAAgB9D,KAAKtT,OAAOrU,QAAO,SAAAsU,GAAC,OAAgB,IAAZA,EAAEzF,SAAa8a,MAAK,SAACW,EAAGC,GAAJ,OAAU5a,mBAAS2a,EAAEle,IAAMuD,mBAAS4a,EAAEne,OAAKmF,KAAI,SAAA+C,GAAC,OAAIA,EAAElI,MAClHlM,EAAyB,GAqC/B,OAnCAurB,EAAcxB,SAAQ,SAAA7d,GAClB,MAA0B,EAAKsf,iBAAiBtf,GAAxC4E,EAAR,EAAQA,KAAM6X,EAAd,EAAcA,QAGd3oB,EAAMI,KAAK,CACP8L,GAAI4E,EAAK5E,GACT7M,KAAM,qBACNsP,MAAO,EACP/I,YAAakL,EAAKjJ,OAItB8gB,EAAQoB,SAAQ,SAAA0B,GAEZzrB,EAAMI,KAAK,CACP8L,GAAIuf,EAAOvf,GACX7M,KAAM,UACNsP,MAAO,EACP/I,YAAa6lB,EAAO5jB,OAIxB,IAAM6jB,EAAW,EAAKC,uBAAuBF,EAAOvf,IACpDwf,EAAS3B,SAAQ,SAAA6B,GACb5rB,EAAMI,KAAK,CACP8L,GAAIuf,EAAOvf,GAAK0f,EAAS1f,GACzB7M,KAAM,WACNsP,MAAO,EACP/I,YAAagmB,EAAS/jB,KACtBuF,YAAase,EAAS3Z,OAAS,aAMxC/R,M,GArFyCyoB,K,SHR5CD,O,6BAAAA,I,+BAAAA,I,6BAAAA,I,iBAAAA,I,kBAAAA,M,KAOL,IAAMqD,EAAa,CACtBC,YAAa,CAAEzsB,KAAM,EAAG0sB,QAAS,GACjC9lB,aAAc,CAAE5G,KAAM,EAAG0sB,QAAS,GAClCC,YAAa,CAAE3sB,KAAM,EAAG0sB,QAAS,GACjCllB,MAAO,CAAExH,KAAM,EAAG0sB,QAAS,GAC3BE,MAAO,CAAE5sB,KAAM,EAAG0sB,QAAS,IAWVG,E,WAGjB,WAAYC,GAAuB,yBAFnCA,UAEkC,EAC9B1E,KAAK0E,KAAOA,E,6DAGhB,SAA0Btf,GACtB,OAAQA,GACJ,KAAK,EACD,OAAO4a,KAAK2E,kBAChB,KAAK,EACD,OAAO3E,KAAK4E,oBAChB,KAAK,EACD,OAAO5E,KAAK6E,kBAChB,KAAK,EACD,OAAO7E,KAAK8E,YAChB,QACI,OAAO9E,KAAK+E,e,6BAIxB,WACI,OAAO/E,KAAK0E,KAAKrsB,QAAO,SAAA2sB,GAAE,OAAyB,IAArBA,EAAG5f,SAASxN,U,+BAG9C,WACI,OAAOooB,KAAK0E,KAAKrsB,QAAO,SAAA2sB,GAAE,OAAyB,IAArBA,EAAG5f,SAASxN,U,6BAG9C,WACI,OAAOooB,KAAK0E,KAAKrsB,QAAO,SAAA2sB,GAAE,OAAyB,IAArBA,EAAG5f,SAASxN,U,uBAG9C,WACI,OAAOooB,KAAK0E,KAAKrsB,QAAO,SAAA2sB,GAAE,OAAyB,IAArBA,EAAG5f,SAASxN,U,uBAG9C,WACI,OAAOooB,KAAK0E,KAAKrsB,QAAO,SAAA2sB,GAAE,OAAyB,IAArBA,EAAG5f,SAASxN,U,4BAG9C,SAAeiqB,EAAezc,GAE1B,IAAM6f,EAAQ,CACVxgB,GAAIub,KAAK0E,KAAKpa,OACd1S,KAAM,GACNwN,SAAUA,EACVD,MAAM,EACNM,aAAcoc,EAAQ,GAc1B,OAVA7B,KAAKkF,0BAA0B9f,EAASxN,MAAM0qB,SAAQ,SAAAsB,GAC9CA,EAAQne,cAAgBwf,EAAMxf,eAC9Bme,EAAQne,cAAgB,MAKhCua,KAAK0E,KAAK/rB,KAAKssB,GACfjF,KAAK0E,KAAO1E,KAAK0E,KAAK1C,MAAK,SAACW,EAAGC,GAAJ,OAAUD,EAAEld,aAAemd,EAAEnd,gBAEjDua,O,+BAGX,SAAkBvb,GACd,IAAM4E,EAAO2W,KAAK0E,KAAKtiB,MAAK,SAAA4iB,GAAE,OAAIA,EAAGvgB,KAAOA,KAkB5C,OAhBI4E,IAEA2W,KAAKkF,0BAA0B7b,EAAKjE,SAASxN,MAAM0qB,SAAQ,SAAAsB,GACnDA,EAAQne,cAAgB4D,EAAK5D,eAC7Bme,EAAQne,cAAgB,MAK5B4D,EAAKlE,MAAkC,IAA1BkE,EAAKjE,SAASkf,UAC3BtE,KAAKkF,0BAA0B7b,EAAKjE,SAASxN,MAAMwK,MAAK,SAAA4iB,GAAE,OAAwB,IAApBA,EAAGvf,gBAAqBN,MAAO,GAIjG6a,KAAK0E,KAAO1E,KAAK0E,KAAKrsB,QAAO,SAAA2sB,GAAE,OAAIA,EAAGvgB,KAAOA,KAAIud,MAAK,SAACW,EAAGC,GAAJ,OAAUD,EAAEle,GAAKme,EAAEne,OAEtEub,O,gCAGX,SAAmBvb,GACf,IAAM0gB,EAAUnF,KAAK0E,KAAKtiB,MAAK,SAAA4iB,GAAE,OAAIA,EAAGvgB,KAAOA,KAQ/C,OAPqBub,KAAKkF,0BAA0BC,EAAQ/f,SAASxN,MAAMwK,MAAK,SAAA4iB,GAAE,OAAgB,IAAZA,EAAG7f,QAG5EA,MAAO,EAEpBggB,EAAQhgB,MAAO,EAER6a,O,kCAGX,WAA2C,IAAD,OAEtC,OAAOA,KAAK0E,KAAK1C,MAAK,SAACW,EAAGC,GAAJ,OAAUD,EAAEvd,SAASxN,KAAOgrB,EAAExd,SAASxN,MAAQ+qB,EAAEld,aAAemd,EAAEnd,gBAAcmE,KAAI,SAAAob,GACtG,MAAO,CACHvgB,GAAIugB,EAAGvgB,GACP7M,KAAMotB,EAAGptB,KACTwN,SAAU4f,EAAG5f,SACbD,KAAM6f,EAAG7f,KACTQ,YAAa,EAAKuf,0BAA0BF,EAAG5f,SAASxN,MAAM0S,OAAS,EACvE7E,aAAcuf,EAAGvf,mB,qCAK7B,SAAwB2f,GACpB,IAMMC,EAAS,CANIrF,KAAK2E,kBAAkBra,OACtB0V,KAAK4E,oBAAoBta,OAC1B0V,KAAK6E,kBAAkBva,OACvB0V,KAAK8E,YAAYxa,OACjB0V,KAAK+E,YAAYza,QAGhC7R,EAAQ,EAERD,EAAS,GAEb,IAAK,IAAIb,KAAOopB,EAAc,CAC1B,IAAIA,EAAappB,GAMZ,MALDa,EAAOG,KAAK,CACRhB,IAAI,cAAD,OAAgBA,GAAOC,KAAMwtB,EAAWrE,EAAappB,IAAOiB,WAAYH,EAAOI,MAAOwsB,EAAO1tB,KAEpGc,GAAS4sB,EAAO1tB,GAIxB,OAAOa,M,KIuETuY,EAAyB,CAC3BrT,KA7N2D,CAC3D9F,KAAM,0BACNqG,UAAW,qBACXE,YAAa,yDACbmnB,YAAa,gBACbjkB,OAAQ,UACRC,SAAU,QACVhD,aAAc,oBACdE,aAAc,iCACdW,SAAU,GACVf,QAAS,eACTa,QAAS,eACTC,OAAQ2hB,EAAgB0E,OACxB7jB,UAAW,QACX8jB,OAAQ,CAAE5tB,KAAM,cAAe+V,MAAO,kBACtC8X,KAAM,CACF,CAAE7tB,KAAM,QAAS+V,MAAO,sBACxB,CAAE/V,KAAM,QAAS+V,MAAO,uBAE5B7N,SAAU,OACVrB,OAAQ,IACRE,YAAa,GACbE,UAAW,GACXC,eAAgB,IAChBE,gBAAiB,GACjBK,eAAgB,GAChBxB,aAAc,IAAI1D,KAClBmF,UAAW,IAAInF,KACfwD,YAAa,IAAIxD,KACjBiF,MAAO,aACPG,aAAc,KAgMd+lB,YAAa,WACbnjB,MAAO,CACH,CAAEvK,KAAM,uBAAwByK,UAjEV,IAAIqhB,EA9HQ,CACtC,CACIjf,GAAI,OACJrE,KACI,kUACJ8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,iOACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,sIACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,oHACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,GACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,gJACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,gEACN8G,MAAO,GAEX,CACIzC,GAAI,OACJrE,KAAM,sKACN8G,MAAO,IAIc,CAEzB,CAAEuV,KAAM,OAAQlO,GAAI,QACpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QACpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QAEpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QACpB,CAAEkO,KAAM,OAAQlO,GAAI,QAGpB,CAAEkO,KAAM,OAAQlO,GAAI,QAEpB,CAAEkO,KAAM,OAAQlO,GAAI,SAGoB,CACxC,CACI5G,SAAU,OACVlD,GAAI,IACJrE,KAAM,IAEV,CACIuH,SAAU,OACVlD,GAAI,IACJrE,KAAM,IAEV,CACIuH,SAAU,OACVlD,GAAI,IACJrE,KAAM,IAEV,CACIuH,SAAU,OACVlD,GAAI,IACJrE,KAAM,IAEV,CACIuH,SAAU,OACVlD,GAAI,IACJrE,KAAM,IAEV,CACIuH,SAAU,OACVlD,GAAI,IACJrE,KAAM,IAEV,CACIuH,SAAU,OACVlD,GAAI,IACJrE,KAAM,IAEV,CACIuH,SAAU,OACVlD,GAAI,IACJrE,KAAM,OAsEN,CAAExI,KAAM,eAAgByK,UAhEX,IAAIoiB,EAAa,CAClC,CACIhgB,GAAI,EACJ7M,KAAM,mBACNwN,SAAUgf,EAAWC,YACrBlf,MAAM,EACNM,aAAc,GAElB,CACIhB,GAAI,EACJ7M,KAAM,mBACNwN,SAAUgf,EAAWC,YACrBlf,MAAM,EACNM,aAAc,GAElB,CACIhB,GAAI,EACJ7M,KAAM,mBACNwN,SAAUgf,EAAWC,YACrBlf,MAAM,EACNM,aAAc,GAElB,CACIhB,GAAI,EACJ7M,KAAM,mBACNwN,SAAUgf,EAAWhlB,MACrB+F,MAAM,EACNM,aAAc,GAElB,CACIhB,GAAI,EACJ7M,KAAM,mBACNwN,SAAUgf,EAAWG,YACrBpf,MAAM,EACNM,aAAc,GAElB,CACIhB,GAAI,EACJ7M,KAAM,mBACNwN,SAAUgf,EAAW5lB,aACrB2G,MAAM,EACNM,aAAc,GAElB,CACIhB,GAAI,EACJ7M,KAAM,mBACNwN,SAAUgf,EAAW5lB,aACrB2G,MAAM,EACNM,aAAc,GAElB,CACIhB,GAAI,EACJ7M,KAAM,qBACNwN,SAAUgf,EAAWI,MACrBrf,MAAM,EACNM,aAAc,QAahBigB,EAAe5U,YAAY,CAC7BlZ,KAAM,UACNmZ,eACAE,SAAU,CACN0U,kBAAmB,SAACxU,EAAOC,GACfA,EAAOC,YAKd5T,EAAgB,SAAC0T,GAAD,OAAmBA,EAAMyN,SACjB8G,EAAa/T,QAAnCgU,kBAEAD,MAAf,U","file":"static/js/main.b773ec88.chunk.js","sourcesContent":["import { FormikConsumer } from 'formik';\r\n\r\nconst Debug = () => (\r\n    <div\r\n        style={{\r\n            margin: '3rem 1rem',\r\n            borderRadius: 4,\r\n            background: '#f6f8fa',\r\n            boxShadow: '0 0 1px  #eee inset',\r\n        }}\r\n    >\r\n        <div\r\n            style={{\r\n                textTransform: 'uppercase',\r\n                fontSize: 11,\r\n                borderTopLeftRadius: 4,\r\n                borderTopRightRadius: 4,\r\n                fontWeight: 500,\r\n                padding: '.5rem',\r\n                background: '#555',\r\n                color: '#fff',\r\n                letterSpacing: '1px',\r\n            }}\r\n        >\r\n            Formik State\r\n        </div>\r\n        <FormikConsumer>\r\n            {({ validationSchema, validate, ...rest }) => (\r\n                <pre\r\n                    style={{\r\n                        fontSize: '.85rem',\r\n                        padding: '.25rem .5rem',\r\n                        overflowX: 'scroll',\r\n                    }}\r\n                >\r\n                    {JSON.stringify(rest, null, 2)}\r\n                </pre>\r\n            )}\r\n        </FormikConsumer>\r\n    </div>\r\n);\r\n\r\nexport default Debug;","import React from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n    Stack,\r\n    TextField,\r\n    Dropdown\r\n} from \"@fluentui/react\";\r\n\r\nexport function StakehoderFormPanel() {\r\n    const { t } = useTranslation(\"stakeholders-form\");\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 16 }}>\r\n            <Stack.Item>\r\n                {t(\"panel-explanation\")}\r\n                <br /><br />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <TextField\r\n                    label={t(\"stakeholder-label\")}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <Dropdown\r\n                    options={[]}\r\n                    label={t(\"country-label\")}\r\n                />\r\n            </Stack.Item>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport function LogicModelOutputFormPanel() {\r\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 16 }}>\r\n            <Stack.Item>\r\n                {t(\"output-panel-explanation\")}\r\n                <br /><br />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <TextField\r\n                    label={t(\"panel-what-label\")}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <TextField\r\n                    label={t(\"panel-topic-label\")}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <TextField\r\n                    label={t(\"panel-verb-label\")}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <Dropdown\r\n                    options={[]}\r\n                    label={t(\"panel-to-whom-label\")}\r\n                />\r\n            </Stack.Item>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport function LogicModelOutcomeFormPanel() {\r\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 16 }}>\r\n            <Stack.Item>\r\n                {t(\"outcome-panel-explanation\")}\r\n                <br /><br />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <Dropdown\r\n                    options={[]}\r\n                    label={t(\"panel-direction-label\")}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <TextField\r\n                    label={t(\"panel-what-label\")}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <Dropdown\r\n                    options={[]}\r\n                    label={t(\"panel-by-whom-label\")}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item>\r\n                <TextField\r\n                    label={t(\"panel-where-label\")}\r\n                />\r\n            </Stack.Item>\r\n        </Stack>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nimport { IColumn, IGroup, DetailsList, SelectionMode } from '@fluentui/react'\r\n\r\nimport IContextualHelpContent from 'models/contextualhelp'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport default function ContextualHelpContent(content: IContextualHelpContent) {\r\n\r\n    // LOGIC\r\n    const { definition, example, format, guide, tips } = content;\r\n    const { t } = useTranslation(\"contextual-help\")\r\n\r\n    // Columns\r\n    const columns: IColumn[] = [\r\n        {\r\n            key: 'column1',\r\n            name: t('collapse-all'),\r\n            fieldName: 'collapse',\r\n            minWidth: 100,\r\n            data: 'string',\r\n            onRender: (item: string) => item,\r\n            isMultiline: true,\r\n        },\r\n    ]\r\n\r\n    // Base Items (without filter)\r\n    const base = [definition, example, format, guide, tips]\r\n\r\n    // Groups (filter those that have empty body)\r\n    const titles = [\"definition\", \"example\", \"format\", \"guide\", \"tips\"]\r\n        .filter((t, i) => base[i] !== \"\");\r\n    // Items (filter those that have empty body)        \r\n    const items = base.filter(t => t !== \"\");\r\n\r\n    let groups = [] as IGroup[];\r\n    let index = 0;\r\n\r\n    for (var title of titles) {\r\n        groups.push({\r\n            key: `category-${title}`, name: t(`${title}-label`), startIndex: index++, count: 1\r\n        })\r\n    }\r\n\r\n    return <Scrollbars autoHide autoHeight autoHeightMin={100} autoHeightMax=\"calc(100vh - 75px)\" >\r\n        <DetailsList\r\n            items={items}\r\n            columns={columns}\r\n            groups={groups}\r\n            // onRenderRow={onRenderRow}\r\n            selectionMode={SelectionMode.none}\r\n            isHeaderVisible={true}\r\n        />\r\n    </Scrollbars>\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\nimport { useFormikContext, Formik, Field, Form, FormikValues } from 'formik';\r\nimport { ObjectSchema } from \"yup\";\r\nimport debounce from 'just-debounce-it';\r\n\r\nimport Debug from \"./debugformik\";\r\n\r\ntype AutoSaveProps = {\r\n    debounceMs?: number\r\n}\r\n\r\nconst AutoSave = ({ debounceMs = 3000 }: AutoSaveProps) => {\r\n    const formik = useFormikContext();\r\n    const [lastSaved, setLastSaved] = React.useState(\"\");\r\n    const debouncedSubmit = React.useCallback(\r\n        debounce(\r\n            () =>\r\n                formik.submitForm().then(() => setLastSaved(new Date().toISOString())),\r\n            debounceMs\r\n        ),\r\n        [debounceMs, formik.submitForm]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        debouncedSubmit();\r\n    }, [debouncedSubmit, formik.values]);\r\n\r\n    return (\r\n        <>\r\n            {!!formik.isSubmitting\r\n                ? 'saving...'\r\n                : lastSaved !== \"\"\r\n                    ? `Last Saved: ${lastSaved}`\r\n                    : null}\r\n        </>\r\n    );\r\n};\r\n\r\ntype setSubmittingFunctionType = {\r\n    setSubmitting: (isSubmitting: boolean) => void\r\n}\r\n\r\ntype AutoSaveFormikProps = {\r\n    initialValues: FormikValues\r\n    onSubmit: (values: FormikValues, { setSubmitting }: setSubmittingFunctionType) => any\r\n    validationSchema?: ObjectSchema<any>;\r\n}\r\n\r\nconst AutoSaveFormik: FunctionComponent<AutoSaveFormikProps> = (props) => {\r\n\r\n    const { initialValues, onSubmit, validationSchema, children } = props;\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <Form>\r\n                <h1>\r\n                    AutoSavingForm{' '}\r\n                    <small style={{ color: 'gray', fontSize: 11 }}>\r\n                        <AutoSave debounceMs={1000} />\r\n                    </small>\r\n                </h1>\r\n                {children}\r\n\r\n                <Debug />\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AutoSaveFormik\r\n","import { Dropdown } from \"@fluentui/react\";\r\n\r\nconst DropdownFieldInput = ({ field, form, ...props }: any) => {\r\n  const handleGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleGetError}\r\n      deferredValidationTime={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropdownFieldInput;\r\n","import { addMonths, DatePicker, IDatePickerStrings, IDatePickerStyles } from \"@fluentui/react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useConst } from \"@fluentui/react-hooks\";\r\n\r\nconst DateFieldInput = ({ field, form, ...props }: any) => {\r\n  const { t } = useTranslation([\r\n    \"months\",\r\n    \"shortMonths\",\r\n    \"days\",\r\n    \"shortDays\",\r\n    \"calendar\",\r\n    \"general-form\"\r\n  ]);\r\n\r\n  const DayPickerStrings: IDatePickerStrings = {\r\n    months: [\r\n      t(\"january\"),\r\n      t(\"february\"),\r\n      t(\"march\"),\r\n      t(\"april\"),\r\n      t(\"may\"),\r\n      t(\"june\"),\r\n      t(\"july\"),\r\n      t(\"august\"),\r\n      t(\"september\"),\r\n      t(\"october\"),\r\n      t(\"november\"),\r\n      t(\"december\"),\r\n    ],\r\n\r\n    shortMonths: [\r\n      t(\"shortmonths:jan\"),\r\n      t(\"shortmonths:feb\"),\r\n      t(\"shortmonths:mar\"),\r\n      t(\"shortmonths:apr\"),\r\n      t(\"shortmonths:may\"),\r\n      t(\"shortmonths:jun\"),\r\n      t(\"shortmonths:jul\"),\r\n      t(\"shortmonths:aug\"),\r\n      t(\"shortmonths:sep\"),\r\n      t(\"shortmonths:oct\"),\r\n      t(\"shortmonths:nov\"),\r\n      t(\"shortmonths:dec\"),\r\n    ],\r\n\r\n    days: [\r\n      t(\"days:sunday\"),\r\n      t(\"days:monday\"),\r\n      t(\"days:tuesday\"),\r\n      t(\"days:wednesday\"),\r\n      t(\"days:thursday\"),\r\n      t(\"days:friday\"),\r\n      t(\"days:saturday\"),\r\n    ],\r\n\r\n    shortDays: [\r\n      t(\"shortdays:sunday\"),\r\n      t(\"shortdays:monday\"),\r\n      t(\"shortdays:tuesday\"),\r\n      t(\"shortdays:wednesday\"),\r\n      t(\"shortdays:thursday\"),\r\n      t(\"shortdays:friday\"),\r\n      t(\"shortdays:saturday\"),\r\n    ],\r\n\r\n    goToToday: t(\"calendar:goToToday\"),\r\n    prevMonthAriaLabel: t(\"calendar:prevMonthAriaLabel\"),\r\n    nextMonthAriaLabel: t(\"calendar:nextMonthAriaLabel\"),\r\n    prevYearAriaLabel: t(\"calendar:prevYearAriaLabel\"),\r\n    nextYearAriaLabel: t(\"calendar:nextYearAriaLabel\"),\r\n    closeButtonAriaLabel: t(\"calendar:closeButtonAriaLabel\"),\r\n  };\r\n\r\n  const handleGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  const minDate = useConst(addMonths(new Date(Date.now()), -1));\r\n\r\n\r\n  const datepickerStyles: Partial<IDatePickerStyles> = {\r\n    root: {\r\n      height: 60.4\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DatePicker\r\n      placeholder={t(\"general-form:date-placeholder\")}\r\n      minDate={minDate}\r\n      onGetErrorMessage={handleGetError}\r\n      deferredValidationTime={500}\r\n      strings={DayPickerStrings}\r\n      styles={datepickerStyles}\r\n      {...field}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateFieldInput;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { string, object, number, setLocale } from \"yup\";\r\nimport { Grid, Col, Row } from \"fluentui-react-grid\";\r\nimport { Field, FormikValues } from \"formik\";\r\nimport {\r\n  Stack,\r\n  ITextFieldProps,\r\n  IDropdownOption,\r\n  IStackProps,\r\n  mergeStyleSets,\r\n  Separator,\r\n  PrimaryButton,\r\n  ISeparatorProps,\r\n  Label,\r\n} from \"@fluentui/react\";\r\n\r\nimport { selectProject } from \"store/slices/projectslice\";\r\nimport { ECanadianSector } from \"models/sector\";\r\nimport { IProjectInfo } from \"models/project\";\r\nimport DropdownFieldInput from \"components/inputs/dropdown\";\r\nimport TextFieldInput from \"components/inputs/text\";\r\nimport DateFieldInput from \"components/inputs/datepicker\";\r\nimport AutoSaveFormik from \"components/form/autosaveform\";\r\n\r\n\r\ntype formValuesType = FormikValues | {\r\n  shortName: string;\r\n  largeName: string;\r\n  description: string;\r\n  country: string;\r\n  impOrganization: string;\r\n  intOrganization: string;\r\n  budget: number;\r\n  budgetPerItems: number;\r\n  budgetPerAct: number;\r\n  budgetFinanced: number;\r\n  budgetSolicited: number;\r\n  program: string;\r\n  sector: ECanadianSector;\r\n  duration: number;\r\n  donor: string;\r\n  approvedBudget: number;\r\n  approvedDate: Date | string;\r\n  initialDate: Date | string;\r\n  finalDate: Date | string;\r\n  contribution: number;\r\n};\r\n\r\nexport default function GeneralForm() {\r\n  // STYLE\r\n  const classes = mergeStyleSets({\r\n    circle: {\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: \"50%\",\r\n      minWidth: 40,\r\n      fontSize: 16,\r\n    },\r\n  });\r\n\r\n  const multilineTextFieldProps: ITextFieldProps = {\r\n    required: true,\r\n    multiline: true,\r\n    autoAdjustHeight: true,\r\n    styles: {\r\n      root: {\r\n        width: \"100%\",\r\n        marginTop: 10,\r\n      },\r\n      field: {\r\n        height: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  const headerStackProps: IStackProps = {\r\n    tokens: { childrenGap: \"m\" },\r\n    horizontal: true,\r\n    horizontalAlign: \"space-between\",\r\n    styles: {\r\n      root: {\r\n        paddingRight: 40,\r\n      },\r\n    },\r\n  };\r\n\r\n  const separatorProps: ISeparatorProps = {\r\n    alignContent: \"start\",\r\n  };\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation([\"general-form\", \"status\"]);\r\n  const project = useSelector(selectProject);\r\n  const generalInfo = project.info as IProjectInfo<ECanadianSector>;\r\n\r\n  const [initialDate, setInitialDate] = useState(generalInfo.initialDate as Date)\r\n  const [approvedDate, setApprovedDate] = useState(generalInfo.approvedDate as Date)\r\n\r\n  const handleSelectInitialDate = (date: Date) => {\r\n    setInitialDate(date);\r\n  }\r\n\r\n  const handleSelectApprovedDate = (date: Date) => {\r\n    setApprovedDate(date);\r\n  }\r\n\r\n  const initValues: formValuesType = {\r\n    shortName: generalInfo.shortname,\r\n    largeName: generalInfo.name,\r\n    description: generalInfo.description,\r\n    country: generalInfo.country,\r\n    impOrganization: generalInfo.organization,\r\n    intOrganization: generalInfo.intermediary,\r\n    budget: generalInfo.budget,\r\n    budgetPerItems: generalInfo.budgetItems,\r\n    budgetPerAct: generalInfo.budgetAct,\r\n    budgetFinanced: generalInfo.budgetFinanced,\r\n    budgetSolicited: generalInfo.solicitedBudget,\r\n    program: generalInfo.program,\r\n    sector: generalInfo.sector,\r\n    duration: generalInfo.duration,\r\n    donor: generalInfo.donor,\r\n    approvedBudget: generalInfo.approvedBudget,\r\n    approvedDate: generalInfo.approvedDate,\r\n    initialDate: generalInfo.initialDate,\r\n    finalDate: generalInfo.finalDate,\r\n    contribution: generalInfo.contribution\r\n  };\r\n\r\n  const validationSchema = object().shape({\r\n    shortName: string().max(20, t(\"shortname-error\")).required(t(\"required\")),\r\n    largeName: string()\r\n      .min(20, t(\"largename-error\"))\r\n      .max(100, t(\"largename-error\"))\r\n      .required(t(\"required\")),\r\n    description: string(),\r\n    country: string().required(t(\"required\")),\r\n    impOrganization: string().required(t(\"required\")),\r\n    intOrganization: string().required(t(\"required\")),\r\n    currency: string().required(t(\"required\")),\r\n    budget: number().required(t(\"required\")),\r\n    budgetPerItems: number().required(t(\"required\")),\r\n    budgetPerAct: number().required(t(\"required\")),\r\n    budgetFinanced: number().required(t(\"required\")),\r\n    budgetSolicited: number().required(t(\"required\")),\r\n    program: string().required(t(\"required\")),\r\n    sector: string().required(t(\"required\")),\r\n    duration: number().required(t(\"required\")),\r\n    donor: string().required(t(\"required\")),\r\n    approvedBudget: number().required(t(\"required\")),\r\n    approvedDate: string().required(t(\"required\")),\r\n    initialDate: string().required(t(\"required\")),\r\n    finalDate: string().required(t(\"required\")),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLocale({\r\n      // use constant translation keys for messages without values\r\n      mixed: {\r\n        default: \"field_invalid\",\r\n      },\r\n      // use functions to generate an error object that includes the value from the schema\r\n      string: {\r\n        default: \"asi mismo\",\r\n      },\r\n      number: {\r\n        default: \"asimismo\",\r\n      },\r\n    });\r\n  }, [validationSchema]);\r\n\r\n  const handleSubmit = (values: formValuesType, { setSubmitting }: any) => {\r\n    alert(values);\r\n  };\r\n\r\n  const countries: IDropdownOption[] = [\r\n    { key: \"1\", text: \"Cuba\" },\r\n    { key: \"2\", text: \"England\" },\r\n    { key: \"3\", text: \"United States\" },\r\n    { key: \"4\", text: \"España\" },\r\n    { key: \"5\", text: \"Canada\" },\r\n  ];\r\n\r\n  return (\r\n    <AutoSaveFormik\r\n      initialValues={initValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <>\r\n        <Grid dir=\"ltr\">\r\n          {/* Names */}\r\n          <Row>\r\n            <TextField\r\n              required\r\n              label={t(\"shortname-field\")}\r\n              name=\"shortName\"\r\n              component={TextFieldInput}\r\n              sizeLg={3}\r\n            />\r\n\r\n            <TextField\r\n              required\r\n              label={t(\"largename-field\")}\r\n              name=\"largeName\"\r\n              component={TextFieldInput}\r\n              sizeLg={9}\r\n            />\r\n          </Row>\r\n          {/* Description */}\r\n          <Row>\r\n            <TextField\r\n              label={t(\"description-field\")}\r\n              name=\"description\"\r\n              component={TextFieldInput}\r\n              {...multilineTextFieldProps}\r\n              sizeLg={12}\r\n\r\n            />\r\n          </Row>\r\n          <br />\r\n\r\n          <Row>\r\n            {/* 1. Project */}\r\n            <Col sizeSm={12} sizeMd={8} sizeLg={8}>\r\n              <Row>\r\n                <Separator {...separatorProps}>\r\n                  <PrimaryButton text=\"1\" className={classes.circle} />\r\n                </Separator>\r\n              </Row>\r\n\r\n              <Stack {...headerStackProps}>\r\n                <Stack.Item>\r\n                  <Label>{t(\"status-field\")}</Label>\r\n                  {t(`status:${generalInfo.status}`)}\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                  <Label>{t(\"wikicode-field\")}</Label>\r\n                  {generalInfo.wikicode}\r\n                </Stack.Item>\r\n              </Stack>\r\n              <br />\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"country-field\")}\r\n                  name=\"country\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"imporganization-field\")}\r\n                  name=\"impOrganization\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"intorganization-field\")}\r\n                  name=\"intOrganization\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"currency-field\")}\r\n                  name=\"currency\"\r\n                  component={DropdownFieldInput}\r\n                />\r\n                <StandardField\r\n                  label={t(\"program-field\")}\r\n                  name=\"program\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"sector-field\")}\r\n                  name=\"sector\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"duration-field\")}\r\n                  name=\"duration\"\r\n                  component={TextFieldInput}\r\n                  suffix={t(\"duration-suffix\")}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n\r\n                <StandardField\r\n                  label={t(\"budget-field\")}\r\n                  name=\"budget\"\r\n                  component={TextFieldInput}\r\n                  prefix={t(\"budget-prefix\")}\r\n                />\r\n                <StandardField\r\n                  label={t(\"calculated-field\")}\r\n                  name=\"budgetPerItems\"\r\n                  component={TextFieldInput}\r\n                  prefix={t(\"budgetitems-prefix\")}\r\n                  readOnly\r\n                />\r\n                <StandardField\r\n                  label={t(\"calculated-field\")}\r\n                  name=\"budgetPerAct\"\r\n                  component={TextFieldInput}\r\n                  prefix={t(\"budgetact-prefix\")}\r\n                  readOnly\r\n                />\r\n                <StandardField\r\n                  label={t(\"financed-field\")}\r\n                  name=\"budgetFinanced\"\r\n                  component={TextFieldInput}\r\n                />\r\n              </Row>\r\n\r\n\r\n            </Col>\r\n\r\n            {/* 2. Donor */}\r\n            <Col sizeSm={12} sizeMd={4} sizeLg={4}>\r\n              <Row>\r\n                <Separator {...separatorProps}>\r\n                  <PrimaryButton text=\"2\" className={classes.circle} />\r\n                </Separator>\r\n              </Row>\r\n\r\n              <Stack {...headerStackProps}>\r\n                <Stack.Item>\r\n                  <Label>{t(\"donorcode-field\")}</Label>\r\n                  {generalInfo.donorcode}\r\n                </Stack.Item>\r\n              </Stack>\r\n              <br />\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"donor-field\")}\r\n                  name=\"donor\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                  sizeLg={6}\r\n                />\r\n                <StandardField\r\n                  label={t(\"approvedate-field\")}\r\n                  name=\"approveDate\"\r\n                  component={DateFieldInput}\r\n                  onSelectDate={handleSelectApprovedDate}\r\n                  sizeLg={6}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"initialdate-field\")}\r\n                  name=\"initialDate\"\r\n                  component={DateFieldInput}\r\n                  minDate={approvedDate}\r\n                  onSelectDate={handleSelectInitialDate}\r\n                  sizeLg={6}\r\n                />\r\n                <StandardField\r\n                  label={t(\"finaldate-field\")}\r\n                  name=\"finalDate\"\r\n                  component={DateFieldInput}\r\n                  minDate={initialDate}\r\n                  sizeLg={6}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"approvebudget-field\")}\r\n                  name=\"approvedBudget\"\r\n                  component={TextFieldInput}\r\n                  options={countries}\r\n                  suffix={generalInfo.currency}\r\n                  sizeLg={6}\r\n                />\r\n                <StandardField\r\n                  label={t(\"contribution-field\")}\r\n                  name=\"contribution\"\r\n                  component={TextFieldInput}\r\n                  sizeLg={6}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </>\r\n    </AutoSaveFormik>\r\n  );\r\n}\r\n\r\nconst StandardField = (props: any) => {\r\n  return (\r\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\r\n      <Field {...props} />\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst TextField = ({ grow, ...props }: any) => {\r\n  return (\r\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\r\n      <Field {...props} />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport function generalFormViewMode() {\r\n  return <div>Form Basics</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Dropdown,\r\n  IColumn,\r\n  IconButton,\r\n  useTheme,\r\n  TooltipHost,\r\n  IButtonStyles,\r\n  FontWeights,\r\n  IDropdownOption,\r\n  IDropdownStyles,\r\n  Stack,\r\n  Panel,\r\n  PrimaryButton,\r\n  DefaultButton,\r\n  SelectionMode,\r\n  DetailsList\r\n} from \"@fluentui/react\";\r\nimport { useBoolean } from '@fluentui/react-hooks';\r\n\r\nimport { selectProject } from \"store/slices/projectslice\";\r\nimport Stakeholders, { IStakholderInfo } from \"models/canadian/stakeholders\";\r\nimport { StakehoderFormPanel } from \"components/sidepanel/formcontents\"\r\n\r\nexport default function StakeholdersForm() {\r\n  // LOGIC\r\n\r\n  // State\r\n  const { t } = useTranslation(\"stakeholders-form\");\r\n\r\n  const project = useSelector(selectProject);\r\n  const currentForm = project.forms.find(form => form.name === \"stakeholders\")!;\r\n  const stakeholdersModel = currentForm.structure as Stakeholders;\r\n\r\n  const initialItems = stakeholdersModel.buidStakeholdersList();\r\n  let groups = stakeholdersModel.buildStakeholdersGroups(t)\r\n\r\n  const [items, setItems] = useState(initialItems);\r\n  const [stakeholders, setStakeholders] = useState(stakeholdersModel);\r\n\r\n  const [panelIsOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\r\n\r\n  const columns: IColumn[] = [\r\n    {\r\n      key: 'column1',\r\n      name: t('roll-field'),\r\n      fieldName: 'roll',\r\n      minWidth: 100,\r\n      maxWidth: 100,\r\n      data: 'string',\r\n      onRender: (item: IStakholderInfo) => mainStakeholderRender(item),\r\n    },\r\n    {\r\n      key: 'column2',\r\n      name: t('name-field'),\r\n      styles: { root: { fontSize: 40 } },\r\n      ariaLabel: 'Stakehoder',\r\n      fieldName: 'name',\r\n      minWidth: 500,\r\n      isResizable: true,\r\n      data: 'string',\r\n      isPadded: true,\r\n      onRender: (item: IStakholderInfo) => fieldRender(item)\r\n    },\r\n    {\r\n      key: 'column3',\r\n      name: 'Add/Remove',\r\n      fieldName: 'operators',\r\n      minWidth: 70,\r\n      data: 'string',\r\n      isPadded: true,\r\n      // isFiltered: true,\r\n      onRender: (item: IStakholderInfo) => operatorsRender(item),\r\n    },\r\n  ]\r\n\r\n  // Handlers\r\n  const handleAddStakeholder = (item: IStakholderInfo) => {\r\n    setStakeholders(stakeholders.addStakeholder(item.orderInGroup, item.category));\r\n    setItems(stakeholders.buidStakeholdersList());\r\n    groups = stakeholdersModel.buildStakeholdersGroups(t);\r\n  }\r\n\r\n  const handleDeleteStakeholder = (item: IStakholderInfo) => {\r\n    setStakeholders(stakeholders.deleteStakeholder(item.id));\r\n    setItems(stakeholders.buidStakeholdersList());\r\n    groups = stakeholdersModel.buildStakeholdersGroups(t);\r\n  }\r\n\r\n  const handleChangeMainStakeholder = (item: IStakholderInfo) => {\r\n    setStakeholders(stakeholders.setMainStakeholder(item.id));\r\n    setItems(stakeholders.buidStakeholdersList());\r\n    groups = stakeholdersModel.buildStakeholdersGroups(t);\r\n  }\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const fieldRender = (item: IStakholderInfo) => {\r\n    const options: IDropdownOption[] = [\r\n      { key: '0', text: '--None--' },\r\n      { key: '1', text: 'Stakeholder1' },\r\n      { key: '2', text: 'Stakeholder2' },\r\n      { key: '3', text: 'Stakeholder3' },\r\n      { key: '4', text: 'Stakeholder4' },\r\n      { key: '5', text: 'Stakeholder5' },\r\n      { key: '6', text: 'Stakeholder6' },\r\n      { key: '7', text: 'Stakeholder7' },\r\n      { key: '8', text: 'Stakeholder8' },\r\n      { key: '9', text: 'Stakeholder9' },\r\n    ];\r\n\r\n    const dropdownStyles: Partial<IDropdownStyles> = {\r\n      root: {\r\n        width: \"50%\",\r\n      },\r\n      dropdown: {\r\n        minWidth: 300,\r\n      },\r\n      title: {\r\n        borderRadius: \"0 0 2px 2px\",\r\n        border: `1px solid ${palette.neutralLighter}`,\r\n        selectors: {\r\n          \"::after\": {\r\n            border: `1px solid ${palette.red}`,\r\n          },\r\n        },\r\n      },\r\n    }\r\n\r\n    const commandStyles: Partial<IButtonStyles> = {\r\n      root: {\r\n        alignSelf: \"center\"\r\n      },\r\n      rootHovered: {\r\n        backgroundColor: palette.themeLighter,\r\n      },\r\n      icon: {\r\n        fontSize: 13,\r\n        color: palette.black,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Stack horizontal styles={{ root: { minWidth: 800 } }}>\r\n        <Dropdown\r\n          placeholder={t(\"select-stakeholder-placeholder\")}\r\n          defaultSelectedKey={item.id.toString()}\r\n          options={options}\r\n          styles={dropdownStyles}\r\n        />\r\n\r\n        <TooltipHost content={t(`tooltip-add-stakeholder-DB`)}>\r\n          <IconButton\r\n            iconProps={{ iconName: \"AddFriend\" }}\r\n            styles={commandStyles}\r\n            onClick={openPanel}\r\n          />\r\n        </TooltipHost>\r\n      </Stack>\r\n    )\r\n  }\r\n\r\n  const mainStakeholderRender = (item: IStakholderInfo) => {\r\n    const bossIconStyles: Partial<IButtonStyles> = {\r\n      root: {\r\n        height: 25,\r\n      },\r\n      rootHovered: {\r\n        backgroundColor: palette.neutralLighter,\r\n      },\r\n      icon: {\r\n        fontSize: 15,\r\n        fontWeight: FontWeights.bold,\r\n        color: palette.black,\r\n      },\r\n    };\r\n\r\n    const iconStyles: Partial<IButtonStyles> = {\r\n      root: {\r\n        height: 25,\r\n      },\r\n      rootHovered: {\r\n        backgroundColor: palette.neutralLighter,\r\n      },\r\n      icon: {\r\n        fontSize: 10,\r\n        color: palette.neutralSecondary,\r\n      },\r\n    };\r\n\r\n    return item.main ?\r\n      <TooltipHost content={t(`tooltip-main-stakeholder-${item.category.name}`)}>\r\n        <IconButton\r\n          iconProps={{ iconName: \"PartyLeader\" }}\r\n          styles={bossIconStyles}\r\n        />\r\n      </TooltipHost> :\r\n      <TooltipHost content={t(`tooltip-change-main-stakeholder-${item.category.name}`)}>\r\n        <IconButton\r\n          iconProps={{ iconName: \"Contact\" }}\r\n          styles={iconStyles}\r\n          onClick={() => handleChangeMainStakeholder(item)}\r\n        />\r\n      </TooltipHost>\r\n  }\r\n\r\n  const operatorsRender = (item: IStakholderInfo) => {\r\n    const commandStyles: Partial<IButtonStyles> = {\r\n      root: {\r\n        height: 25,\r\n      },\r\n      rootHovered: {\r\n        backgroundColor: palette.neutralLighter,\r\n      },\r\n      icon: {\r\n        fontSize: 13,\r\n        color: palette.black,\r\n      },\r\n    };\r\n\r\n    return <React.Fragment>\r\n      <TooltipHost content={t(\"tooltip-add-stakeholder\")}>\r\n        <IconButton\r\n          iconProps={{ iconName: \"Add\" }}\r\n          styles={commandStyles}\r\n          onClick={() => handleAddStakeholder(item)}\r\n        />\r\n      </TooltipHost>\r\n      {item.hasSiblings &&\r\n        <TooltipHost content={t(\"tooltip-delete-stakeholder\")}>\r\n          <IconButton\r\n            iconProps={{ iconName: \"Cancel\" }}\r\n            styles={commandStyles}\r\n            onClick={() => handleDeleteStakeholder(item)}\r\n          />\r\n        </TooltipHost>\r\n      }\r\n    </React.Fragment>\r\n  }\r\n\r\n  const onRenderFooterContent = React.useCallback(\r\n    () => (\r\n      <div>\r\n        <PrimaryButton onClick={dismissPanel} styles={{ root: { marginRight: 8 } }}>\r\n          Save\r\n        </PrimaryButton>\r\n        <DefaultButton onClick={dismissPanel}>Cancel</DefaultButton>\r\n      </div>\r\n    ),\r\n    [dismissPanel],\r\n  );\r\n\r\n  return <React.Fragment>\r\n\r\n    <DetailsList\r\n      items={items}\r\n      columns={columns}\r\n      groups={groups}\r\n      selectionMode={SelectionMode.none}\r\n      isHeaderVisible={true}\r\n    />\r\n\r\n    <Panel\r\n      isOpen={panelIsOpen}\r\n      closeButtonAriaLabel=\"Close\"\r\n      isHiddenOnDismiss={true}\r\n      headerText={t(\"panel-header\")}\r\n      onDismiss={dismissPanel}\r\n      isFooterAtBottom={true}\r\n      onRenderFooterContent={onRenderFooterContent}\r\n    >\r\n      <StakehoderFormPanel />\r\n    </Panel>\r\n\r\n  </React.Fragment>\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toNumber } from 'lodash';\r\nimport {\r\n  FontSizes,\r\n  IconButton,\r\n  IColumn,\r\n  IDetailsListProps,\r\n  IDetailsRowStyles,\r\n  DetailsRow,\r\n  useTheme,\r\n  Text,\r\n  IButtonStyles,\r\n  ITextFieldProps,\r\n  TextField,\r\n  TooltipHost,\r\n  ITextStyles,\r\n  SelectionMode,\r\n  DetailsList,\r\n  Panel\r\n} from '@fluentui/react';\r\nimport { useBoolean } from '@fluentui/react-hooks';\r\n\r\nimport { selectProject } from 'store/slices/projectslice';\r\nimport ActivitiesMatrixGraph, { IActivityInfo } from 'models/canadian/actvitiesmatrix';\r\nimport ContextualHelpContent from \"components/help/contextualhelp\"\r\n\r\nexport default function ActivitiesMatrixForm() {\r\n\r\n  // LOGIC\r\n  // State\r\n  const project = useSelector(selectProject);\r\n  const currentForm = project.forms.find(form => form.name === \"logicModelActivities\")!;\r\n  const logicModelActivitiesMatrix = currentForm.structure as ActivitiesMatrixGraph;\r\n\r\n  const initialItems = logicModelActivitiesMatrix.buidOutputsActivityList();\r\n\r\n  const [items, setItems] = useState(initialItems);\r\n  const [activitiesMatrix, setActivitiesMatrix] = useState(logicModelActivitiesMatrix);\r\n\r\n  const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\r\n\r\n  const columns: IColumn[] = [\r\n    {\r\n      key: 'column1',\r\n      name: 'Field',\r\n      styles: { root: { textAlign: \"right\", fontSize: 40 } },\r\n      ariaLabel: 'Outcomes, Outputs and Activities',\r\n      fieldName: 'field',\r\n      minWidth: 10,\r\n      maxWidth: 200,\r\n      data: 'string',\r\n      onRender: (item: IActivityInfo) => fieldRender(item)\r\n    },\r\n    {\r\n      key: 'column2',\r\n      name: 'Code',\r\n      fieldName: 'code',\r\n      ariaLabel: \"Code\",\r\n      minWidth: 0,\r\n      maxWidth: 350,\r\n      isRowHeader: true,\r\n      data: 'number',\r\n      onRender: (item: IActivityInfo) => codeRender(item),\r\n    },\r\n    {\r\n      key: 'column3',\r\n      name: 'Description',\r\n      fieldName: 'description',\r\n      minWidth: 70,\r\n      data: 'string',\r\n      isResizable: true,\r\n      isPadded: true,\r\n      isMultiline: true,\r\n      // isFiltered: true,\r\n      onRender: (item: IActivityInfo) => descriptionRender(item),\r\n    },\r\n    {\r\n      key: 'column4',\r\n      name: '',\r\n      fieldName: 'operators',\r\n      minWidth: 100,\r\n      data: 'string',\r\n      isPadded: true,\r\n      onRender: (item: IActivityInfo) => operatorsRender(item),\r\n    },\r\n  ]\r\n\r\n  // Handlers\r\n  const handleAddActivity = (itemId: string) => {\r\n    const outputId = itemId.slice(0, 4);\r\n    const activityId = itemId[4];\r\n\r\n    setActivitiesMatrix(activitiesMatrix.addActivityToOutput(outputId, activityId));\r\n    setItems(activitiesMatrix.buidOutputsActivityList());\r\n  }\r\n\r\n  const handleDeleteActivity = (itemId: string) => {\r\n    const outputId = itemId.slice(0, 4);\r\n    const activityId = (toNumber(itemId[4]) + 1).toString();\r\n\r\n    setActivitiesMatrix(activitiesMatrix.deleteActivity(outputId, activityId));\r\n    setItems(activitiesMatrix.buidOutputsActivityList());\r\n  }\r\n\r\n  // Panels\r\n  const [helpPanelIsOpen, { setTrue: openHelpPanel, setFalse: dismissHelpPanel }] = useBoolean(false);\r\n\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const onRenderRow: IDetailsListProps['onRenderRow'] = props => {\r\n    const customStyles: Partial<IDetailsRowStyles> = {};\r\n\r\n    if (props) {\r\n      const { item } = props;\r\n      switch (item.level) {\r\n        case 0:\r\n          customStyles.root = {\r\n            backgroundColor: palette.themeLighter,\r\n            fontSize: FontSizes.medium,\r\n            \":hover\": {\r\n              backgroundColor: palette.themeLighter,\r\n            }\r\n          }\r\n          break;\r\n        case 1:\r\n          customStyles.root = {\r\n            backgroundColor: palette.themeLighterAlt,\r\n            \":hover\": {\r\n              backgroundColor: palette.themeLighterAlt,\r\n            }\r\n          }\r\n          break;\r\n        case 2:\r\n          customStyles.root = {\r\n            \":hover\": {\r\n              backgroundColor: palette.white,\r\n            }\r\n          }\r\n          break;\r\n      }\r\n\r\n      return <DetailsRow {...props} styles={customStyles} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const fieldRender = (item: IActivityInfo) => {\r\n    const textStyles: ITextStyles = {\r\n      root: {\r\n        fontWeight: 600\r\n      }\r\n    }\r\n    const variant = item.level === 0 ? \"mediumPlus\" : item.level === 1 ? \"medium\" : \"small\";\r\n\r\n    return (\r\n      <div style={{ textAlign: \"end\", color: \"black\" }}>\r\n        <Text variant={variant} styles={textStyles}>{t(item.name)}</Text>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const codeRender = (item: IActivityInfo) => {\r\n    return item.id\r\n  }\r\n\r\n  const descriptionRender = (item: IActivityInfo) => {\r\n\r\n    const textFieldProps: ITextFieldProps = {\r\n      rows: 1,\r\n      multiline: true,\r\n      resizable: false,\r\n      defaultValue: item.description,\r\n      styles: {\r\n        root: {\r\n          minWidth: 200,\r\n        },\r\n        fieldGroup: {\r\n          borderRadius: \"0 0 2px 2px\",\r\n          border: `1px solid ${palette.neutralLighter}`,\r\n          selectors: {\r\n            \":hover\": {\r\n              border: `1px solid ${palette.neutralTertiary}`,\r\n\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }\r\n\r\n    let html;\r\n    switch (item.level) {\r\n      case 2:\r\n        html = <TextField {...textFieldProps}>\r\n          {item.description}\r\n        </TextField>\r\n        break;\r\n      default:\r\n        html = <span>{item.description}</span>\r\n        break;\r\n    }\r\n\r\n    return html\r\n  }\r\n\r\n  const operatorsRender = (item: IActivityInfo) => {\r\n    const commandStyles: Partial<IButtonStyles> = {\r\n      root: {\r\n        height: 25,\r\n      },\r\n      rootHovered: {\r\n        backgroundColor: palette.neutralLighter,\r\n      },\r\n      icon: {\r\n        fontSize: 13,\r\n        color: palette.black,\r\n      },\r\n    };\r\n\r\n    return (item.level === 2 &&\r\n      <React.Fragment>\r\n        <TooltipHost content={t(\"contextual-help:tooltip-contextual-help\")}>\r\n          <IconButton\r\n            iconProps={{ iconName: \"Help\" }}\r\n            styles={commandStyles}\r\n            onClick={() => openHelpPanel()}\r\n          />\r\n        </TooltipHost>\r\n        <TooltipHost content={t(\"tooltip-add-act\")}>\r\n          <IconButton\r\n            iconProps={{ iconName: \"Add\" }}\r\n            styles={commandStyles}\r\n            onClick={() => handleAddActivity(item.id)}\r\n          />\r\n        </TooltipHost>\r\n        {item.hasSiblings &&\r\n          <TooltipHost content={t(\"tooltip-delete-act\")}>\r\n            <IconButton\r\n              iconProps={{ iconName: \"Cancel\" }}\r\n              styles={commandStyles}\r\n              onClick={() => handleDeleteActivity(item.id)}\r\n            />\r\n          </TooltipHost>\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return <React.Fragment>\r\n    <DetailsList\r\n      items={items}\r\n      columns={columns}\r\n      onRenderRow={onRenderRow}\r\n      selectionMode={SelectionMode.none}\r\n      isHeaderVisible={false}\r\n    />\r\n    <Panel\r\n      isOpen={helpPanelIsOpen}\r\n      closeButtonAriaLabel=\"Close\"\r\n      isHiddenOnDismiss={true}\r\n      headerText={t(\"contextual-help:help-panel-header\")}\r\n      onDismiss={dismissHelpPanel}\r\n      isFooterAtBottom={true}\r\n    >\r\n      <ContextualHelpContent\r\n        definition=\"Def Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        example=\"\"\r\n        format=\"Cosi se me face le buc torbellini de sua me. \"\r\n        guide=\"Guide Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        tips=\"Tips Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\r\n    </Panel>\r\n  </React.Fragment>\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport default function PerformanceMeasureForm() {\r\n  return <div>Performance Measure Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RisksForm() {\r\n  return <div>Risks Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function BudgetForm() {\r\n  return <div>Budget Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ReportsForm() {\r\n  return <div>Reports Form</div>;\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Field } from \"formik\";\r\nimport {\r\n    Stack,\r\n    IStackItemProps,\r\n    IStackProps,\r\n    IButtonStyles,\r\n    Icon,\r\n    IIconProps,\r\n    ITextStyles,\r\n    Text,\r\n    TooltipHost,\r\n    IconButton,\r\n    useTheme,\r\n    ITextFieldProps,\r\n} from '@fluentui/react';\r\n\r\nimport { selectWorkplaceConfig, setConfiguration } from \"store/slices/workplaceslice\";\r\nimport { Tree } from \"models/tree\";\r\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\r\nimport TextFieldInput from \"components/inputs/text\";\r\n\r\ntype LogicTextFieldInputProps = {\r\n    nodeTree: Tree<LogicmodelVertex>,\r\n    handleAddChild: (id: string) => void,\r\n    handleDelete: (id: string) => void,\r\n    hanldeOpenOutputPanel: () => void,\r\n    hanldeOpenOutcomePanel: () => void,\r\n    handleOutcomeHelpPanel: () => void\r\n    handleOutputHelpPanel: () => void\r\n}\r\n\r\nexport default function LogicTextFieldInput(props: LogicTextFieldInputProps) {\r\n\r\n    // LOGIC\r\n    const {\r\n        nodeTree,\r\n        handleAddChild,\r\n        handleDelete,\r\n        hanldeOpenOutputPanel,\r\n        hanldeOpenOutcomePanel,\r\n        handleOutcomeHelpPanel,\r\n        handleOutputHelpPanel\r\n    } = props;\r\n    const { node, children } = nodeTree;\r\n\r\n    // STYLES\r\n    const { palette } = useTheme();\r\n\r\n    const rootStackItemProps: IStackItemProps = {\r\n        grow: 1,\r\n        styles: {\r\n            root: {\r\n                textAlign: \"center\",\r\n                marginTop: \"0px !important\"\r\n            },\r\n        },\r\n    };\r\n\r\n    const childrenStackProps: IStackProps = {\r\n        horizontal: true,\r\n        horizontalAlign: \"space-between\",\r\n        tokens: { childrenGap: 20 }\r\n    };\r\n\r\n    const inputTextFieldProps: ITextFieldProps = {\r\n        rows: 3,\r\n        multiline: true,\r\n        resizable: false,\r\n        styles: {\r\n            root: {\r\n                minWidth: 200,\r\n            },\r\n            fieldGroup: {\r\n                borderRadius: \"0 0 2px 2px\",\r\n                border: `1px solid ${palette.neutralQuaternary}`,\r\n                borderTop: `1px solid ${palette.neutralLighter}`,\r\n                selectors: {\r\n                    \":hover\": {\r\n                        border: `1px solid ${palette.neutralTertiary}`,\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    const arrowProps: IIconProps = {\r\n        iconName: \"SortUp\",\r\n        ariaLabel: \"Belongs to\",\r\n        styles: {\r\n            root: {\r\n                margin: \"8px auto\",\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Stack.Item {...rootStackItemProps}>\r\n                {node.level > 0 && <Icon {...arrowProps} />}\r\n                <LogicTextFieldHeader\r\n                    nodeTree={nodeTree}\r\n                    handleAddChild={handleAddChild}\r\n                    handleDelete={handleDelete}\r\n                    hanldeOpenOutputPanel={hanldeOpenOutputPanel}\r\n                    hanldeOpenOutcomePanel={hanldeOpenOutcomePanel}\r\n                    handleOutcomeHelpPanel={handleOutcomeHelpPanel}\r\n                    handleOutputHelpPanel={handleOutputHelpPanel}\r\n                />\r\n                <Field\r\n                    name={`textFiled${node.id}`}\r\n                    component={TextFieldInput}\r\n                    {...inputTextFieldProps}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item {...rootStackItemProps}>\r\n                <Stack {...childrenStackProps} >\r\n                    {children && children.map(child =>\r\n                        <Stack.Item key={child.node.id} grow>\r\n                            <LogicTextFieldInput\r\n                                nodeTree={child}\r\n                                handleAddChild={handleAddChild}\r\n                                handleDelete={handleDelete}\r\n                                hanldeOpenOutputPanel={hanldeOpenOutputPanel}\r\n                                hanldeOpenOutcomePanel={hanldeOpenOutcomePanel}\r\n                                handleOutcomeHelpPanel={handleOutcomeHelpPanel}\r\n                                handleOutputHelpPanel={handleOutputHelpPanel}\r\n                            />\r\n                        </Stack.Item>\r\n                    )}\r\n                </Stack>\r\n            </Stack.Item>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction LogicTextFieldHeader(props: LogicTextFieldInputProps) {\r\n\r\n    // LOGIC\r\n    const { nodeTree,\r\n        handleAddChild,\r\n        handleDelete,\r\n        hanldeOpenOutputPanel,\r\n        hanldeOpenOutcomePanel,\r\n        handleOutcomeHelpPanel,\r\n        handleOutputHelpPanel } = props;\r\n    const { node, children } = nodeTree;\r\n\r\n    const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\r\n    const dispatch = useDispatch();\r\n    const { tabsSchema, latestMenuTab } = useSelector(selectWorkplaceConfig);\r\n\r\n    // tooltips and buttons\r\n    const tooltipContent = node.level === 0 ?\r\n        \"tooltip-add-inmediate-outcome\" : node.level === 1 ?\r\n            \"tooltip-add-intermediate-outcome\" : \"tooltip-add-output\";\r\n\r\n    const canAdd = node.level !== 3;\r\n    const canDelete = children.length === 0;\r\n    const isAnOputut = node.level === 3;\r\n\r\n    const handleRedirectToActivity = (id: string) => {\r\n        const formtabKey = tabsSchema.findChildByName(\"activitiesmatrix\").key;\r\n        const renderPage = tabsSchema.findChildByKey(latestMenuTab, formtabKey).render;\r\n        dispatch(setConfiguration({ key: latestMenuTab, tab: formtabKey, page: renderPage }));\r\n    }\r\n\r\n    // STYLES\r\n    const { palette } = useTheme();\r\n\r\n    const titleStyles: ITextStyles = {\r\n        root: {\r\n            padding: 4,\r\n            textAlign: \"left\",\r\n            border: `1px solid ${palette.neutralQuaternary}`,\r\n            borderBottom: \"none\",\r\n            borderRadius: \"2px 2px 0 0\",\r\n            backgroundColor: palette.neutralLighter,\r\n        },\r\n    };\r\n\r\n    const commandStyles: Partial<IButtonStyles> = {\r\n        root: {\r\n            height: 25,\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: palette.neutralLight,\r\n        },\r\n        icon: {\r\n            fontSize: 13,\r\n            color: palette.black,\r\n        },\r\n    };\r\n\r\n    return <Stack\r\n        horizontal\r\n        styles={titleStyles}\r\n        horizontalAlign=\"space-between\"\r\n    >\r\n        <Stack.Item>\r\n            <Text variant=\"medium\">{node.id}</Text>\r\n        </Stack.Item>\r\n        <Stack.Item>\r\n\r\n            {isAnOputut ?\r\n                <>\r\n                    <TooltipHost content={t(\"tooltip-see-activities\")}>\r\n                        <IconButton\r\n                            iconProps={{ iconName: \"SnapToGrid\" }}\r\n                            styles={commandStyles}\r\n                            onClick={() => handleRedirectToActivity(node.id)}\r\n                        />\r\n                    </TooltipHost>\r\n                    <TooltipHost content={t(\"tooltip-sintactic-struct\")}>\r\n                        <IconButton\r\n                            iconProps={{ iconName: \"ShowResults\" }}\r\n                            styles={commandStyles}\r\n                            onClick={() => hanldeOpenOutputPanel()}\r\n                        />\r\n                    </TooltipHost>\r\n                    <TooltipHost content={t(\"tooltip-contextual-help\")}>\r\n                        <IconButton\r\n                            iconProps={{ iconName: \"Help\" }}\r\n                            styles={commandStyles}\r\n                            onClick={() => handleOutputHelpPanel()}\r\n                        />\r\n                    </TooltipHost>\r\n                </> : <>\r\n                    <TooltipHost content={t(\"tooltip-sintactic-struct\")}>\r\n                        <IconButton\r\n                            iconProps={{ iconName: \"ShowResults\" }}\r\n                            styles={commandStyles}\r\n                            onClick={() => hanldeOpenOutcomePanel()}\r\n                        />\r\n                    </TooltipHost>\r\n                    <TooltipHost content={t(\"contextual-help:tooltip-contextual-help\")}>\r\n                        <IconButton\r\n                            iconProps={{ iconName: \"Help\" }}\r\n                            styles={commandStyles}\r\n                            onClick={() => handleOutcomeHelpPanel()}\r\n                        />\r\n                    </TooltipHost></>\r\n            }\r\n            {canAdd &&\r\n                <TooltipHost content={t(tooltipContent)}>\r\n                    <IconButton\r\n                        iconProps={{ iconName: \"Add\" }}\r\n                        styles={commandStyles}\r\n                        onClick={() => handleAddChild(node.id)}\r\n                    />\r\n                </TooltipHost>\r\n            }\r\n            {canDelete &&\r\n                <TooltipHost content={t(\"tooltip-delete\")}>\r\n                    <IconButton\r\n                        iconProps={{ iconName: \"Cancel\" }}\r\n                        styles={commandStyles}\r\n                        onClick={() => handleDelete(node.id)}\r\n                    />\r\n                </TooltipHost>\r\n            }\r\n        </Stack.Item>\r\n    </Stack>\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { string, object } from \"yup\";\r\nimport { ObjectShape } from \"yup/lib/object\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  Stack,\r\n  Text,\r\n  IStackProps,\r\n  ITextStyles,\r\n  PrimaryButton,\r\n  DefaultButton,\r\n  Panel,\r\n  TooltipHost,\r\n} from \"@fluentui/react\";\r\nimport { useBoolean } from '@fluentui/react-hooks';\r\n\r\nimport LogicTextFieldInput from \"components/inputs/logictext\";\r\nimport LogicmodelGraph from \"models/canadian/logicmodel\";\r\nimport { selectProject } from \"store/slices/projectslice\";\r\nimport { LogicModelOutcomeFormPanel, LogicModelOutputFormPanel } from \"components/sidepanel/formcontents\"\r\nimport ContextualHelpContent from \"components/help/contextualhelp\"\r\n\r\ntype formValuesType = {\r\n  [key: string]: string;\r\n}\r\n\r\nexport default function LogicModelForm() {\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"sidepanel\"]);\r\n\r\n  const project = useSelector(selectProject);\r\n  const currentForm = project.forms.find(form => form.name === \"logicModelActivities\")!;\r\n  const logicModelGraph = currentForm.structure as LogicmodelGraph;\r\n\r\n  const [graph, setGraph] = useState(logicModelGraph)\r\n  const [treeToRender, setTreeToRender] = useState(graph.buildTree())\r\n\r\n  const handleAddNode = (siblingId: string) => {\r\n    setGraph(graph.addNode(siblingId));\r\n    setTreeToRender(graph.buildTree());\r\n  }\r\n\r\n  const handleDeleteNode = (id: string) => {\r\n    setGraph(graph.deleteNode(id));\r\n    setTreeToRender(graph.buildTree());\r\n  }\r\n\r\n  // Panels\r\n  const [outputPanelIsOpen, { setTrue: openOutputPanel, setFalse: dismissOutputPanel }] = useBoolean(false);\r\n  const [outcomePanelIsOpen, { setTrue: openOutcomePanel, setFalse: dismissOutcomePanel }] = useBoolean(false);\r\n  const [outcomeHelpPanelIsOpen, { setTrue: openOutcomeHelpPanel, setFalse: dismissOutcomeHelpPanel }] = useBoolean(false);\r\n  const [outputHelpPanelIsOpen, { setTrue: openOutputHelpPanel, setFalse: dismissOutputHelpPanel }] = useBoolean(false);\r\n\r\n  // FORMIK\r\n  var initialValues: formValuesType = { \"verionMode\": \"\" }; // Take init value from DB\r\n  for (let v of graph.vertex) {\r\n    initialValues[`textFiled${v.id}`] = v.text;\r\n  }\r\n\r\n  var shape: ObjectShape = { \"verionMode\": string() };\r\n  for (let v of graph.vertex) {\r\n    shape[`textFiled${v.id}`] = string();\r\n  }\r\n\r\n  const validationSchema = object().shape(shape);\r\n\r\n  return <React.Fragment>\r\n    <Formik\r\n      initialValues={initialValues!}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values) => alert(values)}\r\n    >\r\n      <Form>\r\n        <Stack horizontal tokens={{ childrenGap: 20 }}>\r\n          {/* Labels */}\r\n          <Stack.Item>\r\n            <LogicmodelLabels />\r\n          </Stack.Item>\r\n\r\n          {/* Inputs */}\r\n          <Stack.Item style={{ width: \"100%\" }}>\r\n            <Stack tokens={{ childrenGap: 10 }} >\r\n              <LogicTextFieldInput\r\n                nodeTree={treeToRender}\r\n                handleAddChild={handleAddNode}\r\n                handleDelete={handleDeleteNode}\r\n                hanldeOpenOutputPanel={openOutputPanel}\r\n                hanldeOpenOutcomePanel={openOutcomePanel}\r\n                handleOutcomeHelpPanel={openOutcomeHelpPanel}\r\n                handleOutputHelpPanel={openOutputHelpPanel}\r\n              />\r\n            </Stack>\r\n          </Stack.Item>\r\n        </Stack>\r\n      </Form>\r\n    </Formik>\r\n\r\n    <PanelsRender\r\n      outcomePanelIsOpen={outcomePanelIsOpen}\r\n      dismissOutcomePanel={dismissOutcomePanel}\r\n      outputPanelIsOpen={outputPanelIsOpen}\r\n      dismissOutputPanel={dismissOutputPanel}\r\n      outcomeHelpPanelIsOpen={outcomeHelpPanelIsOpen}\r\n      dismissOutcomeHelpPanel={dismissOutcomeHelpPanel}\r\n      outputHelpPanelIsOpen={outputHelpPanelIsOpen}\r\n      dismissOutputHelpPanel={dismissOutputHelpPanel}\r\n    />\r\n  </React.Fragment>\r\n}\r\n\r\ntype PanelsRenderPros = {\r\n  outcomePanelIsOpen: boolean,\r\n  dismissOutcomePanel: () => void,\r\n  outputPanelIsOpen: boolean,\r\n  dismissOutputPanel: () => void,\r\n  outcomeHelpPanelIsOpen: boolean,\r\n  dismissOutcomeHelpPanel: () => void,\r\n  outputHelpPanelIsOpen: boolean,\r\n  dismissOutputHelpPanel: () => void,\r\n}\r\n\r\nfunction PanelsRender(props: PanelsRenderPros) {\r\n\r\n  // LOGIC\r\n  const { outcomePanelIsOpen,\r\n    dismissOutcomePanel,\r\n    outputPanelIsOpen,\r\n    dismissOutputPanel,\r\n    outcomeHelpPanelIsOpen,\r\n    dismissOutcomeHelpPanel,\r\n    outputHelpPanelIsOpen,\r\n    dismissOutputHelpPanel,\r\n  } = props;\r\n  const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\r\n\r\n\r\n  const handleDismissPanel = () => {\r\n    dismissOutputPanel();\r\n    dismissOutcomePanel();\r\n  }\r\n\r\n  // RENDER\r\n  const onRenderFooterContent = React.useCallback(\r\n    () => (\r\n      <div>\r\n        <TooltipHost content={t(\"tooltip-panel-concat\")}>\r\n          <PrimaryButton onClick={handleDismissPanel} styles={{ root: { marginRight: 8 } }}>\r\n            {t(\"concat-button-label\")}\r\n          </PrimaryButton>\r\n        </TooltipHost>\r\n        <TooltipHost content={t(\"tooltip-panel-save\")}>\r\n          <DefaultButton onClick={handleDismissPanel} styles={{ root: { marginRight: 8 } }}>\r\n            {t(\"sidepanel:save\")}\r\n          </DefaultButton>\r\n        </TooltipHost>\r\n      </div>\r\n    ),\r\n    [dismissOutputPanel, dismissOutcomePanel],\r\n  );\r\n\r\n  return <React.Fragment>\r\n    {/* Outcome Panel */}\r\n    <Panel\r\n      isOpen={outcomePanelIsOpen}\r\n      closeButtonAriaLabel=\"Close\"\r\n      isHiddenOnDismiss={true}\r\n      headerText={t(\"outcome-panel-header\")}\r\n      onDismiss={dismissOutcomePanel}\r\n      isFooterAtBottom={true}\r\n      onRenderFooterContent={onRenderFooterContent}\r\n    >\r\n      <LogicModelOutcomeFormPanel />\r\n    </Panel>\r\n\r\n    {/* Output Panel */}\r\n    <Panel\r\n      isOpen={outputPanelIsOpen}\r\n      closeButtonAriaLabel=\"Close\"\r\n      isHiddenOnDismiss={true}\r\n      headerText={t(\"output-panel-header\")}\r\n      onDismiss={dismissOutputPanel}\r\n      isFooterAtBottom={true}\r\n      onRenderFooterContent={onRenderFooterContent}\r\n    >\r\n      <LogicModelOutputFormPanel />\r\n    </Panel>\r\n\r\n    {/* Outcome Help Panel */}\r\n    <Panel\r\n      isOpen={outcomeHelpPanelIsOpen}\r\n      closeButtonAriaLabel=\"Close\"\r\n      isHiddenOnDismiss={true}\r\n      headerText={t(\"contextual-help:help-panel-header\")}\r\n      onDismiss={dismissOutcomeHelpPanel}\r\n      isFooterAtBottom={true}\r\n    >\r\n      <ContextualHelpContent\r\n        definition=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        example=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        format=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        guide=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        tips=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\r\n    </Panel>\r\n\r\n    {/* Output Help Panel */}\r\n    <Panel\r\n      isOpen={outputHelpPanelIsOpen}\r\n      closeButtonAriaLabel=\"Close\"\r\n      isHiddenOnDismiss={true}\r\n      headerText={t(\"contextual-help:help-panel-header\")}\r\n      onDismiss={dismissOutputHelpPanel}\r\n      isFooterAtBottom={true}\r\n    >\r\n      <ContextualHelpContent\r\n        definition=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        example=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        format=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        guide=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\r\n        tips=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\r\n    </Panel>\r\n  </React.Fragment >\r\n}\r\n\r\nfunction LogicmodelLabels() {\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\r\n\r\n  // STYLES\r\n  const labelStackProps: IStackProps = {\r\n    verticalAlign: \"space-between\",\r\n    styles: {\r\n      root: {\r\n        width: 120,\r\n        height: \"100%\",\r\n        maxHeight: 530,\r\n        padding: \"20px 0 30px 0\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const textStyles: ITextStyles = {\r\n    root: {\r\n      fontWeight: 600\r\n    }\r\n  }\r\n\r\n  const TextMediumPlus = (props: { label: string }) => {\r\n    return <Stack.Item>\r\n      <Text variant=\"mediumPlus\" styles={textStyles}>\r\n        {t(props.label)}\r\n      </Text>\r\n    </Stack.Item>\r\n  }\r\n\r\n  return <Stack {...labelStackProps}>\r\n    <TextMediumPlus label=\"ultimate-outcomes\" />\r\n    <TextMediumPlus label=\"intermediate-outcomes\" />\r\n    <TextMediumPlus label=\"intermediate-outcomes\" />\r\n    <TextMediumPlus label=\"outputs\" />\r\n  </Stack>\r\n}\r\n","import React from 'react';\r\nimport { useFormikContext, Formik, Field, Form } from 'formik';\r\nimport debounce from 'just-debounce-it';\r\n\r\nimport { DatePicker } from \"@fluentui/react\";\r\n\r\nimport Debug from \"components/form/debugformik\";\r\nimport AutoSaveFormik from \"components/form/autosaveform\";\r\n\r\nconst AutoSave = ({ debounceMs }) => {\r\n    const formik = useFormikContext();\r\n    const [lastSaved, setLastSaved] = React.useState(null);\r\n    const debouncedSubmit = React.useCallback(\r\n        debounce(\r\n            () =>\r\n                formik.submitForm().then(() => setLastSaved(new Date().toISOString())),\r\n            debounceMs\r\n        ),\r\n        [debounceMs, formik.submitForm]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        debouncedSubmit();\r\n    }, [debouncedSubmit, formik.values]);\r\n\r\n    return (\r\n        <>\r\n            {!!formik.isSubmitting\r\n                ? 'saving...'\r\n                : lastSaved !== null\r\n                    ? `Last Saved: ${lastSaved}`\r\n                    : null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst AutoSavingForm = () => (\r\n    <Formik\r\n        initialValues={{\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n        }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n            return new Promise(resolve =>\r\n                setTimeout(() => {\r\n                    console.log('submitted', JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                    console.log(\"resolve: \", resolve)\r\n                    resolve();\r\n                }, 1000)\r\n            );\r\n        }}\r\n        render={() => (\r\n            <Form>\r\n                <h1>\r\n                    AutoSavingForm{' '}\r\n                    <small style={{ color: 'gray', fontSize: 11 }}>\r\n                        <AutoSave debounceMs={300} />\r\n                    </small>\r\n                </h1>\r\n\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <Field name=\"firstName\" placeholder=\"Jane\" />\r\n\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <Field name=\"lastName\" placeholder=\"Doe\" />\r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name=\"email\" placeholder=\"jane@acme.com\" type=\"email\" />\r\n                {/* <button type=\"submit\">Submit</button> */}\r\n\r\n                <Debug />\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\n\r\nexport const AutoSavingForm2 = () => (\r\n    <AutoSaveFormik\r\n        initialValues={{\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            colors: '',\r\n            date: Date.now()\r\n        }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n            return new Promise(resolve =>\r\n                setTimeout(() => {\r\n                    console.log('submitted', JSON.stringify(values, null, 2));\r\n                    setSubmitting(false);\r\n                    console.log(\"resolve: \", resolve)\r\n                    resolve();\r\n                }, 1000)\r\n            );\r\n        }}>\r\n        <>\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <Field name=\"firstName\" placeholder=\"Jane\" />\r\n\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <Field name=\"lastName\" placeholder=\"Doe\" />\r\n\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Field name=\"email\" placeholder=\"jane@acme.com\" type=\"email\" />\r\n\r\n            <Field name=\"colors\" as=\"select\" className=\"my-select\">\r\n                <option value=\"red\">Red</option>\r\n                <option value=\"green\">Green</option>\r\n                <option value=\"blue\">Blue</option>\r\n            </Field>\r\n\r\n            <Field\r\n                name=\"date\"\r\n                render={fieldProps => (\r\n                    <DatePicker\r\n                    // value={Date.now()}\r\n                    // onSelectDate={/* wrapper code for fieldProps.onChange */}\r\n                    />\r\n                )}\r\n            />\r\n\r\n            <Debug />\r\n        </>\r\n    </AutoSaveFormik>\r\n);\r\n\r\nexport default AutoSavingForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AutoSavingForm, { AutoSavingForm2 } from \"./autosave\"\r\n\r\nexport default function Main() {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/workplace\">Workplace</Link>\r\n      <AutoSavingForm2 />\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated } from \"react-spring\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px 5% 50px 5%;\r\n`;\r\n\r\ntype PagecontainerProps = {\r\n  className?: string;\r\n  spring: any;\r\n  scrollHeight: string | number | undefined;\r\n}\r\nconst PageContainer: React.FunctionComponent<PagecontainerProps> = (props) => {\r\n\r\n  const { className, spring, scrollHeight, children } = props;\r\n\r\n  return <animated.div style={spring}>\r\n    <Scrollbars autoHide autoHeight autoHeightMin={100} autoHeightMax={scrollHeight} >\r\n      <Container className={className} >\r\n        {children}\r\n      </Container>\r\n    </Scrollbars>\r\n  </animated.div>\r\n};\r\n\r\nexport default PageContainer\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Fixed = styled.div.attrs(props => ({ direction: \"top\" || \"bottom\" }))`\r\n  position: fixed;\r\n  width: 100%;\r\n  z-index: 10;\r\n  ${props => props.direction === \"top\" ? \"top : 0\" : \"bottom : 0\"} \r\n`;\r\n\r\ntype StickyProps = {\r\n    direction: \"top\" | \"bottom\";\r\n}\r\n\r\nexport const Sticky: React.FunctionComponent<StickyProps> = (props) => {\r\n    return (\r\n        <Fixed direction={props.direction}>{props.children}</Fixed>\r\n    )\r\n}","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// import Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport English from \"languages/locales/en.json\";\r\nimport Spanish from \"languages/locales/es.json\";\r\n\r\ni18n\r\n  // .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    keySeparator: false,\r\n    // debug: true,\r\n    resources: {\r\n      en: English,\r\n      es: Spanish,\r\n    },\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","export function fullscreenToggler() {\r\n  var elem = document.documentElement;\r\n\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  } else {\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen();\r\n    }\r\n  }\r\n}\r\n","import i18n from \"i18n\"\r\nimport {\r\n  ICommandBarItemProps,\r\n} from \"@fluentui/react\";\r\n\r\nimport { fullscreenToggler } from \"components/fullscreentoogler\";\r\n\r\ni18n.loadNamespaces(\"commands\");\r\n\r\nexport const items: ICommandBarItemProps[] = [\r\n  {\r\n    key: \"goback\",\r\n    iconProps: { iconName: \"Undo\" },\r\n    text: i18n.t('commands:undo'),\r\n    iconOnly: true,\r\n  },\r\n  {\r\n    key: \"goforward\",\r\n    iconProps: { iconName: \"Redo\" },\r\n    text: i18n.t('commands:redo'),\r\n    iconOnly: true,\r\n  },\r\n  {\r\n    key: \"share\",\r\n    iconProps: { iconName: \"Share\" },\r\n    text: i18n.t('commands:share'),\r\n    iconOnly: true,\r\n    onClick: () => alert(\"Share\"),\r\n  },\r\n  {\r\n    key: \"export\",\r\n    iconProps: { iconName: \"Export\" },\r\n    text: i18n.t('commands:export'),\r\n    iconOnly: true,\r\n    onClick: () => alert(\"Export\"),\r\n  },\r\n];\r\n\r\nexport const overflowItems: ICommandBarItemProps[] = [\r\n  {\r\n    key: \"new\",\r\n    text: i18n.t(\"commands:newproject\"),\r\n    iconProps: { iconName: \"Document\" },\r\n    onClick: () => alert(\"Move to\"),\r\n  },\r\n  {\r\n    key: \"open\",\r\n    text: i18n.t(\"commands:openproject\"),\r\n    iconProps: { iconName: \"OpenFolderHorizontal\" },\r\n    onClick: () => alert(\"Open Project\"),\r\n  },\r\n  {\r\n    key: \"Destroy\",\r\n    text: i18n.t(\"commands:destroyproject\"),\r\n    iconProps: { iconName: \"PageRemove\" },\r\n    onClick: () => alert(\"Destroy project\"),\r\n  },\r\n  {\r\n    key: \"Duplicate\",\r\n    text: i18n.t(\"commands:duplicate\"),\r\n    iconProps: { iconName: \"Documentation\" },\r\n    onClick: () => alert(\"Duplicate project\"),\r\n  },\r\n  {\r\n    key: \"Print\",\r\n    text: i18n.t(\"commands:print\"),\r\n    iconProps: { iconName: \"Print\" },\r\n    onClick: () => alert(\"Print project\"),\r\n  },\r\n];\r\n\r\nexport const faritems = (OpenLanguagePanel: Function, OpenSettingsPanel: Function) => {\r\n  return [\r\n    {\r\n      key: \"fullscreen\",\r\n      text: i18n.t(\"commands:fullscreen\"),\r\n      ariaLabel: \"Full Screen\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"FullScreen\" },\r\n      onClick: fullscreenToggler,\r\n    },\r\n    {\r\n      key: \"language\",\r\n      text: i18n.t(\"commands:language\"),\r\n      ariaLabel: \"Language\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"LocaleLanguage\" },\r\n      onClick: OpenLanguagePanel,\r\n    },\r\n    {\r\n      key: \"settings\",\r\n      text: i18n.t(\"commands:settings\"),\r\n      ariaLabel: \"Change Settings\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Settings\" },\r\n      onClick: OpenSettingsPanel,\r\n    },\r\n    {\r\n      key: \"notifications\",\r\n      text: i18n.t(\"commands:notifications\"),\r\n      ariaLabel: \"Change Notifications\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Ringer\" },\r\n      onClick: () => alert(\"Notificactions\"),\r\n    },\r\n    {\r\n      key: \"user\",\r\n      text: \"Gabriela Rodríguez\",\r\n      ariaLabel: \"User name\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Contact\" },\r\n      onClick: () => alert(\"Contact\"),\r\n    },\r\n  ] as ICommandBarItemProps[];\r\n}\r\n\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport IState from \"models/state\";\r\nimport i18n from \"i18n\";\r\n\r\nconst LanguageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState: i18n.language,\r\n  reducers: {\r\n    setLanguage: (state: string, action: PayloadAction<string>) => {\r\n      const { payload } = action;\r\n      i18n.changeLanguage(payload);\r\n      return state = payload;\r\n    },\r\n    setEnglish: (state: string) => {\r\n      state = \"en\";\r\n      i18n.changeLanguage(state);\r\n    },\r\n    setSpanish: (state: string) => {\r\n      state = \"es\";\r\n      i18n.changeLanguage(state);\r\n    },\r\n    setGerman: (state: string) => {\r\n      state = \"de\";\r\n      i18n.changeLanguage(state);\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectLanguage = (state: IState) => state.language;\r\nexport const { setLanguage, setEnglish, setSpanish } = LanguageSlice.actions;\r\n\r\nexport default LanguageSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Dropdown,\r\n  IDropdownOption,\r\n  IStackProps,\r\n  Stack,\r\n} from \"@fluentui/react\";\r\n\r\nimport { setLanguage, selectLanguage } from \"store/slices/languageslice\";\r\n\r\nexport default function LanguagePanel() {\r\n  const { t } = useTranslation([\"sidepanel\", \"languages\"]);\r\n  const lang = useSelector(selectLanguage);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDataOnChange = (\r\n    event: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption<any>\r\n  ) => {\r\n    if (item) dispatch(setLanguage(item.key.toString()));\r\n  };\r\n\r\n  const stackProps: IStackProps = {\r\n    tokens: {\r\n      childrenGap: 15\r\n    },\r\n    styles: {\r\n      root: {\r\n        marginTop: 40\r\n      }\r\n    }\r\n  }\r\n\r\n  const suportedLangs = [\r\n    { key: \"en\", text: t(\"languages:en\") },\r\n    { key: \"es\", text: t(\"languages:es\") },\r\n    { key: \"de\", text: t(\"languages:de\") },\r\n  ];\r\n\r\n  return (\r\n    <Stack {...stackProps}>\r\n      <Stack.Item>\r\n        <Dropdown\r\n          label={t(\"language-ui\")}\r\n          defaultSelectedKey={lang ? lang : undefined}\r\n          placeholder={t(\"language-select\")}\r\n          options={suportedLangs}\r\n          onChange={handleDataOnChange}\r\n        />\r\n      </Stack.Item>\r\n      <Stack.Item>\r\n        <Dropdown\r\n          label={t(\"language-data\")}\r\n          placeholder={t(\"language-select\")}\r\n          options={suportedLangs}\r\n          onChange={() => { }}\r\n        />\r\n      </Stack.Item>\r\n    </Stack>\r\n  );\r\n}\r\n","import { createTheme, IColorCellProps } from \"@fluentui/react\";\r\n\r\nexport const themeWord = createTheme({\r\n  palette: {\r\n    themePrimary: \"#2b579a\",\r\n    themeLighterAlt: \"#f4f7fb\",\r\n    themeLighter: \"#d3deef\",\r\n    themeLight: \"#b0c3e0\",\r\n    themeTertiary: \"#6e90c2\",\r\n    themeSecondary: \"#3d66a5\",\r\n    themeDarkAlt: \"#274e8a\",\r\n    themeDark: \"#214274\",\r\n    themeDarker: \"#183156\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themeExcel = createTheme({\r\n  palette: {\r\n    themePrimary: \"#217346\",\r\n    themeLighterAlt: \"#f2f9f5\",\r\n    themeLighter: \"#cee9da\",\r\n    themeLight: \"#a8d5bc\",\r\n    themeTertiary: \"#62ab83\",\r\n    themeSecondary: \"#318456\",\r\n    themeDarkAlt: \"#1e673f\",\r\n    themeDark: \"#195735\",\r\n    themeDarker: \"#134027\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themePowerPoint = createTheme({\r\n  palette: {\r\n    themePrimary: \"#b7472a\",\r\n    themeLighterAlt: \"#fcf6f4\",\r\n    themeLighter: \"#f4dcd6\",\r\n    themeLight: \"#eabeb4\",\r\n    themeTertiary: \"#d48672\",\r\n    themeSecondary: \"#c0583e\",\r\n    themeDarkAlt: \"#a53f26\",\r\n    themeDark: \"#8c3620\",\r\n    themeDarker: \"#672718\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themeTeams = createTheme({\r\n  palette: {\r\n    themePrimary: \"#6264a7\",\r\n    themeLighterAlt: \"#f7f7fb\",\r\n    themeLighter: \"#e1e1f1\",\r\n    themeLight: \"#c8c9e4\",\r\n    themeTertiary: \"#989ac9\",\r\n    themeSecondary: \"#7173b0\",\r\n    themeDarkAlt: \"#585a95\",\r\n    themeDark: \"#4a4c7e\",\r\n    themeDarker: \"#37385d\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport default themeWord;\r\n\r\nexport const colorCells: IColorCellProps[] = [\r\n  { id: \"1\", label: \"word\", color: \"#2b579a\" },\r\n  { id: \"2\", label: \"excel\", color: \"#217346\" },\r\n  { id: \"3\", label: \"powerpoint\", color: \"#a92b1a\" },\r\n  { id: \"4\", label: \"teams\", color: \"#6264a7\" },\r\n];\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IPartialTheme, ITheme, loadTheme } from \"@fluentui/react\";\r\nimport {\r\n  themeExcel,\r\n  themeWord,\r\n  themePowerPoint,\r\n  themeTeams,\r\n} from \"themes/office\";\r\nimport IState from \"models/state\";\r\n\r\nconst themeSlice = createSlice({\r\n  name: \"theme\",\r\n  initialState: themeWord,\r\n  reducers: {\r\n    setTheme: (state: ITheme, action: PayloadAction<string>) => {\r\n      const { payload } = action;\r\n\r\n      switch (payload) {\r\n        case \"word\":\r\n          state = themeWord;\r\n          break;\r\n        case \"excel\":\r\n          state = themeExcel;\r\n          break;\r\n        case \"powerpoint\":\r\n          state = themePowerPoint;\r\n          break;\r\n        case \"teams\":\r\n          state = themeTeams;\r\n          break;\r\n      }\r\n      loadTheme(state as IPartialTheme);\r\n    },\r\n    setThemeWord: (state: ITheme) => {\r\n      state = themeWord;\r\n      loadTheme(themeWord);\r\n    },\r\n    setThemeExcel: (state: ITheme) => {\r\n      state = themeExcel;\r\n      loadTheme(themeExcel);\r\n    },\r\n    setThemePowerPoint: (state: ITheme) => {\r\n      state = themePowerPoint;\r\n      loadTheme(themePowerPoint);\r\n    },\r\n    setThemeTeams: (state: ITheme) => {\r\n      state = themeTeams;\r\n      loadTheme(themeTeams);\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectCurrentTheme = (state: IState) => state.theme;\r\nexport const {\r\n  setTheme,\r\n  setThemeExcel,\r\n  setThemePowerPoint,\r\n  setThemeTeams,\r\n  setThemeWord,\r\n} = themeSlice.actions;\r\n\r\nexport default themeSlice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport classnames from \"classnames\";\r\nimport { mergeStyleSets } from \"@fluentui/react\";\r\n\r\ninterface CircleProps {\r\n  ariaLabel?: string;\r\n  size: string;\r\n  color: string;\r\n  border: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst StyledCircle = styled.div`\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport function Circle(props: CircleProps) {\r\n  const classes = mergeStyleSets({\r\n    circleprops: {\r\n      height: props.size,\r\n      width: props.size,\r\n      backgroundColor: props.color,\r\n      border: \"4px solid \" + props.border,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StyledCircle\r\n      onClick={props.onClick}\r\n      className={classnames(props.className, classes.circleprops)}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IColorCellProps, mergeStyleSets, useTheme } from \"@fluentui/react\";\r\nimport { Circle } from \"components/styled/shapes\";\r\n\r\ntype SwatchThemePickerProps = {\r\n  colorCells: IColorCellProps[];\r\n  size: string;\r\n  handler: (id: string) => void;\r\n};\r\n\r\nexport default function ThemePicker(props: SwatchThemePickerProps) {\r\n  const { colorCells, handler, size } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n  const classes = mergeStyleSets({\r\n    circle: {\r\n      \":hover\": {\r\n        cursor: \"pointer\",\r\n        border: \"solid 4px \" + palette.neutralLighter,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {colorCells.map((cell) => {\r\n        return (\r\n          <div key={cell.id}>\r\n            <Circle\r\n              ariaLabel={cell.label}\r\n              size={size}\r\n              color={cell.color}\r\n              border={palette.neutralQuaternaryAlt}\r\n              onClick={() => handler(cell.label || \"\")}\r\n              className={classes.circle}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  ISeparatorProps,\r\n  IStackProps,\r\n  ITextFieldStyles,\r\n  Label,\r\n  Persona,\r\n  PersonaInitialsColor,\r\n  PersonaSize,\r\n  Separator,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { setTheme } from \"store/slices/themeslice\";\r\nimport ThemePicker from \"components/pickers/themepicker\";\r\nimport { colorCells } from \"themes/office\";\r\n\r\nexport default function SettingsPanel() {\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  // Stack Props\r\n  const stackProps: IStackProps = {\r\n    tokens: {\r\n      childrenGap: 15\r\n    },\r\n    styles: {\r\n      root: {\r\n        marginTop: 40\r\n      }\r\n    }\r\n  }\r\n\r\n  // TextField Styles\r\n  const nameTextFieldStyles: Partial<ITextFieldStyles> = {\r\n    fieldGroup: {\r\n      borderColor: palette.neutralTertiary,\r\n      \":hover\": {\r\n        borderColor: palette.neutralSecondary,\r\n      },\r\n    },\r\n  };\r\n\r\n  // Horizontal Separators\r\n  const separatorProps: ISeparatorProps = {\r\n    alignContent: \"end\",\r\n    styles: {\r\n      root: {\r\n        \"::before\": {\r\n          background: palette.neutralTertiaryAlt,\r\n          height: 0.4,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation([\"sidepanel\"]);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Stack {...stackProps}>\r\n      <Separator {...separatorProps}>\r\n        <Text variant=\"mediumPlus\">\r\n          <b>{t(\"user\")}</b>\r\n        </Text>\r\n      </Separator>\r\n      {/* NAME */}\r\n      <Stack.Item>\r\n        <TextField\r\n          label={t(\"name\")}\r\n          defaultValue=\"Gabriela Rodríguez\"\r\n          styles={nameTextFieldStyles}\r\n        ></TextField>\r\n      </Stack.Item>\r\n      {/* NICKNAME */}\r\n      <Stack.Item>\r\n        <TextField\r\n          label={t(\"nick\")}\r\n          defaultValue=\"Gabi\"\r\n          styles={nameTextFieldStyles}\r\n        ></TextField>\r\n      </Stack.Item>\r\n      {/* COIN */}\r\n      <Stack.Item>\r\n        <Label>{t(\"coin\")}</Label>\r\n        <Persona\r\n          text=\"Gabriela Rodríguez\"\r\n          size={PersonaSize.size40}\r\n          initialsColor={PersonaInitialsColor.cyan}\r\n        />\r\n      </Stack.Item>\r\n      <br />\r\n      <Separator {...separatorProps}>\r\n        <Text variant=\"mediumPlus\">\r\n          <b>{t(\"theme\")}</b>\r\n        </Text>\r\n      </Separator>\r\n      {/* <Stack.Item>\r\n        <Toggle\r\n          label=\"Select a theme\"\r\n          defaultChecked\r\n          onText=\"Dark\"\r\n          offText=\"Light\"\r\n          onChange={handleChangeTheme}\r\n        />\r\n      </Stack.Item> */}\r\n      <Stack.Item>\r\n        <Label>{t(\"color-theme\")}</Label>\r\n        <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n          <ThemePicker\r\n            colorCells={colorCells}\r\n            size=\"30px\"\r\n            handler={(key) => dispatch(setTheme(key))}\r\n          />\r\n        </Stack>\r\n      </Stack.Item>\r\n    </Stack>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { useTheme, CommandBarButton, IContextualMenuItemStyles, IButtonProps, concatStyleSets, IPalette, FontSizes } from '@fluentui/react';\r\n\r\nexport function CustomBarButton(props: IButtonProps) {\r\n\r\n    const { palette } = useTheme();\r\n\r\n    const itemStyles: IContextualMenuItemStyles = {\r\n        root: {\r\n            backgroundColor: palette.themePrimary\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: palette.themeDark\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: palette.themeDarker\r\n        },\r\n        icon: {\r\n            color: palette.white\r\n        },\r\n        iconHovered: {\r\n            color: palette.white\r\n        },\r\n        iconPressed: {\r\n            color: palette.white\r\n        },\r\n        label: {\r\n            color: palette.white\r\n        },\r\n        labelHovered: {\r\n            color: palette.white\r\n        },\r\n    };\r\n\r\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\r\n\r\n};\r\n\r\nexport function CustomOverflowButton(props: IButtonProps) {\r\n\r\n    const { palette } = useTheme();\r\n\r\n    const itemStyles: IContextualMenuItemStyles = {\r\n        root: {\r\n            backgroundColor: palette.themePrimary,\r\n\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: palette.themeDark,\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: palette.themeDarker,\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: palette.themeDarker,\r\n        },\r\n        rootExpandedHovered: {\r\n            backgroundColor: palette.themeDark,\r\n        },\r\n        menuIcon: {\r\n            color: palette.white + \" !important\",\r\n            fontSize: FontSizes.medium\r\n        },\r\n    };\r\n\r\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\r\n\r\n};\r\n\r\n// Overflow Buttons Props\r\nexport const overflowProps = (palette: IPalette) => {\r\n    return {\r\n        ariaLabel: \"More commands\",\r\n        menuProps: {\r\n            styles: {\r\n                subComponentStyles: {\r\n                    menuItem: {\r\n                        icon: { color: palette.black }\r\n                    }\r\n                }\r\n            },\r\n            items: [],\r\n        }\r\n    } as IButtonProps;\r\n};","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  CommandBar,\r\n  ICommandBarStyles,\r\n  ITextStyles,\r\n  Text,\r\n  useTheme,\r\n  Panel\r\n} from \"@fluentui/react\";\r\nimport { useBoolean } from '@fluentui/react-hooks';\r\n\r\nimport { faritems, items, overflowItems } from \"./items\";\r\nimport LanguagePanel from \"components/sidepanel/languagepanel\";\r\nimport SettingsPanel from \"components/sidepanel/settingspanel\";\r\nimport { CustomBarButton, CustomOverflowButton, overflowProps } from \"./custombuttons\";\r\n\r\nexport default function CommandMenu() {\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const comandBarStyles: ICommandBarStyles = {\r\n    root: {\r\n      height: 36,\r\n      padding: 0,\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n  };\r\n\r\n  const textStyles: ITextStyles = {\r\n    root: {\r\n      position: \"absolute\",\r\n      top: 10,\r\n      left: \"50%\",\r\n      transform: \"translateX(-50%)\",\r\n      color: palette.themeLight,\r\n    },\r\n  };\r\n\r\n  // Panel State\r\n  const { t } = useTranslation(\"methodologies\");\r\n\r\n  const [languagePanelOpen, { setTrue: openLanguagePanel, setFalse: dismissLanguagePanel }] = useBoolean(false);\r\n  const [settingsPanelOpen, { setTrue: openSettingsPanel, setFalse: dismissSettingsPanel }] = useBoolean(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Text variant=\"small\" styles={textStyles}>\r\n        Project 1 - {t(\"methodologies:canadian\")}\r\n      </Text>\r\n\r\n      <CommandBar\r\n        buttonAs={CustomBarButton}\r\n        items={items}\r\n        farItems={faritems(openLanguagePanel, openSettingsPanel)}\r\n        overflowItems={overflowItems}\r\n        overflowButtonAs={CustomOverflowButton}\r\n        overflowButtonProps={overflowProps(palette)}\r\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n        styles={comandBarStyles}\r\n      />\r\n\r\n      <Panel\r\n        isOpen={languagePanelOpen}\r\n        closeButtonAriaLabel=\"Close\"\r\n        isHiddenOnDismiss={true}\r\n        headerText={t(\"sidepanel:language-header\")}\r\n        onDismiss={dismissLanguagePanel}>\r\n        <LanguagePanel />\r\n      </Panel>\r\n\r\n      <Panel\r\n        isOpen={settingsPanelOpen}\r\n        closeButtonAriaLabel=\"Close\"\r\n        isHiddenOnDismiss={true}\r\n        headerText={t(\"sidepanel:header-settings\")}\r\n        onDismiss={dismissSettingsPanel}>\r\n        <SettingsPanel />\r\n      </Panel>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FontSizes,\r\n  IPivotStyles,\r\n  Pivot,\r\n  PivotItem,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { TabSchema } from \"models/workplace\";\r\nimport { setLatestMenuTab } from \"store/slices/workplaceslice\";\r\n\r\ntype PivotBarProps = {\r\n  schema: TabSchema;\r\n  setShowToolBar: Function;\r\n};\r\n\r\nexport default function PivotBar(props: PivotBarProps) {\r\n  const { schema, setShowToolBar } = props;\r\n  const { tabs } = schema;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const pivotStyles: Partial<IPivotStyles> = {\r\n    root: {\r\n      height: 34,\r\n      backgroundColor: palette.themePrimary,\r\n      zIndex: 10,\r\n    },\r\n    link: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.themePrimary,\r\n      color: palette.white,\r\n      fontSize: FontSizes.small,\r\n      \":hover\": {\r\n        backgroundColor: palette.themeDarkAlt,\r\n        color: palette.white,\r\n      },\r\n      \":active\": {\r\n        backgroundColor: palette.themeDark,\r\n        color: palette.white,\r\n      },\r\n      \":focus\": {\r\n        backgroundColor: palette.themePrimary,\r\n        color: palette.white,\r\n      },\r\n    },\r\n    linkIsSelected: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralLighter + \" !important\",\r\n      color: palette.black + \" !important\",\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation(\"menu\");\r\n\r\n  // Tabs State\r\n  const dispatch = useDispatch();\r\n\r\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n    setShowToolBar(true)\r\n\r\n    if (item) {\r\n      const itemkey = item.props.itemKey!;\r\n      // Update current menu tab\r\n      dispatch(setLatestMenuTab({ tabKey: itemkey }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Pivot\r\n      linkFormat=\"tabs\"\r\n      defaultSelectedKey=\"key2\"\r\n      styles={pivotStyles}\r\n      onLinkClick={handleMenuOnClick}\r\n    >\r\n      {tabs.map((tab) => {\r\n        return (\r\n          <PivotItem\r\n            key={tab.key}\r\n            itemKey={tab.key}\r\n            headerText={t(tab.name)}\r\n            itemIcon={tab.icon}\r\n          />\r\n        );\r\n      })}\r\n    </Pivot>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Facepile,\r\n  OverflowButtonType,\r\n  IFacepilePersona,\r\n  IButtonProps,\r\n  PersonaInitialsColor,\r\n  IFacepileStyles,\r\n  PersonaSize,\r\n} from \"@fluentui/react\";\r\n\r\n// OverflowButton Props\r\nconst overflowButtonProps: IButtonProps = {\r\n  ariaLabel: \"More users\",\r\n  onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\r\n    alert(\"overflow icon clicked\"),\r\n};\r\n\r\n// AddButton Props\r\nconst addButtonProps = () => ({\r\n  ariaLabel: \"Add a new person\",\r\n  href: \"/\",\r\n});\r\n\r\n// STYLES\r\nconst FacePileStyles: Partial<IFacepileStyles> = {\r\n  root: {\r\n    position: \"absolute\",\r\n    top: 38,\r\n    right: 8,\r\n    zIndex: 10\r\n  },\r\n  itemButton: {\r\n    margin: \"0 -2px 0 -2px\",\r\n  },\r\n};\r\n\r\n// Data\r\nconst faces: IFacepilePersona[] = [\r\n  {\r\n    personaName: \"Gabriela Rodríguez\",\r\n    initialsColor: PersonaInitialsColor.gray,\r\n  },\r\n  {\r\n    personaName: \"Amaury Díaz\",\r\n    initialsColor: PersonaInitialsColor.gold,\r\n  },\r\n  {\r\n    personaName: \"Iliana Hernandez\",\r\n    initialsColor: PersonaInitialsColor.lightGreen,\r\n  },\r\n  {\r\n    personaName: \"Laura Rodríguez\",\r\n    initialsColor: PersonaInitialsColor.warmGray,\r\n  },\r\n  {\r\n    personaName: \"Lili Masters\",\r\n    initialsColor: PersonaInitialsColor.blue,\r\n  },\r\n  {\r\n    personaName: \"Susana Naranjo\",\r\n    initialsColor: PersonaInitialsColor.green,\r\n  },\r\n  {\r\n    personaName: \"Lupe Dantes\",\r\n    initialsColor: PersonaInitialsColor.darkBlue,\r\n  },\r\n  {\r\n    personaName: \"Karen Ganter\",\r\n    initialsColor: PersonaInitialsColor.lightGreen,\r\n  },\r\n  {\r\n    personaName: \"Josephine Filipie\",\r\n    initialsColor: PersonaInitialsColor.purple,\r\n  },\r\n  {\r\n    personaName: \"Daniel Hertys\",\r\n    initialsColor: PersonaInitialsColor.orange,\r\n  },\r\n];\r\n\r\nexport default function TeamPile() {\r\n  return (\r\n    <Facepile\r\n      personas={faces}\r\n      personaSize={PersonaSize.size24}\r\n      maxDisplayablePersonas={4}\r\n      overflowButtonProps={overflowButtonProps}\r\n      overflowButtonType={OverflowButtonType.descriptive}\r\n      addButtonProps={addButtonProps()}\r\n      ariaDescription=\"To move through the items use left and right arrow keys.\"\r\n      styles={FacePileStyles}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport PivotBar from \"components/menus/mainmenu/pivotbar\";\r\nimport TeamPile from \"components/menus/mainmenu/teampile\";\r\nimport { TabSchema } from \"models/workplace\";\r\n\r\ntype MenuProps = {\r\n  tabs: TabSchema;\r\n  setShowToolBar: Function;\r\n}\r\n\r\nexport default function MainMenu(props: MenuProps) {\r\n\r\n  const { setShowToolBar, tabs } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PivotBar schema={tabs} setShowToolBar={setShowToolBar} />\r\n      <TeamPile />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  useTheme,\r\n  IconButton,\r\n  Stack,\r\n  IStackItemProps,\r\n  IStackProps\r\n} from \"@fluentui/react\";\r\nimport { FunctionComponent, useEffect, useRef } from \"react\";\r\nimport { animated } from \"react-spring\";\r\n\r\ntype ToolBarProps = {\r\n  isFixed: boolean;\r\n  handleClose: () => void;\r\n  handleFix: () => void;\r\n  transition: Function;\r\n}\r\n\r\nconst ToolBar: FunctionComponent<ToolBarProps> = (props) => {\r\n  const { children, isFixed, handleClose, handleFix, transition } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const stackProps: IStackProps = {\r\n    horizontal: true,\r\n    horizontalAlign: \"space-between\",\r\n    styles: {\r\n      root: {\r\n        height: 94,\r\n        padding: \"0 10px 2px 10px\",\r\n        backgroundColor: palette.neutralLighter,\r\n        borderBottom: \"1px solid #E0E0E0\",\r\n        color: palette.black,\r\n      }\r\n    }\r\n  };\r\n\r\n  const stackPinProps: IStackItemProps = {\r\n    align: \"end\"\r\n  };\r\n\r\n  // LOGIC\r\n  function useOutsideAlerter(ref: any) {\r\n    useEffect(() => {\r\n      function handleClickOutside(event: any) {\r\n        if (ref.current && !ref.current.contains(event.target) && !isFixed) {\r\n          handleClose();\r\n        }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        // Unbind the event listener on clean up\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }, [ref, isFixed]);\r\n  }\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n\r\n  return transition((style: any, item: any) => item &&\r\n    <animated.div style={style}>\r\n      <div ref={wrapperRef}>\r\n        <Stack {...stackProps} >\r\n          <Stack.Item >\r\n            {children}\r\n          </Stack.Item>\r\n\r\n          <Stack.Item {...stackPinProps}>\r\n            {isFixed ?\r\n              <IconButton iconProps={{ iconName: 'ChevronUp' }} title=\"Cancel\" ariaLabel=\"Cancel\" onClick={(item) => handleClose()} /> :\r\n              <IconButton iconProps={{ iconName: 'Pin' }} title=\"Pin\" ariaLabel=\"Cancel\" onClick={(item) => handleFix()} />\r\n            }\r\n          </Stack.Item>\r\n        </Stack>\r\n      </div>\r\n    </animated.div>\r\n  )\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FontSizes,\r\n  FontWeights,\r\n  IPivotStyles,\r\n  Pivot,\r\n  PivotItem,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { Tab } from \"models/workplace\";\r\n\r\ntype PagesTabProps = {\r\n  tabs?: Tab[];\r\n  defaultKey?: string;\r\n  parentKey: string;\r\n  onClick: (parentkey: string, item?: PivotItem) => void;\r\n};\r\n\r\nexport default function PagesTabs(props: PagesTabProps) {\r\n\r\n  // LOGIC\r\n  const { tabs, onClick, parentKey, defaultKey, } = props;\r\n\r\n  const { t } = useTranslation(\"pages\");\r\n\r\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement, MouseEvent>) => onClick(parentKey, item)\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const pivotStyles: Partial<IPivotStyles> = {\r\n    root: {\r\n      height: 34,\r\n      backgroundColor: palette.neutralLight,\r\n    },\r\n    link: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralLight,\r\n      color: palette.black,\r\n      fontSize: FontSizes.small,\r\n      \":hover\": {\r\n        backgroundColor: palette.neutralQuaternaryAlt,\r\n        color: palette.black,\r\n      },\r\n      \":active\": {\r\n        backgroundColor: palette.neutralTertiaryAlt,\r\n        color: palette.black,\r\n      },\r\n      \":focus\": {\r\n        backgroundColor: palette.neutralQuaternaryAlt,\r\n        color: palette.black,\r\n      },\r\n    },\r\n    linkIsSelected: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralTertiaryAlt + \" !important\",\r\n      color: palette.black + \" !important\",\r\n      fontWeight: FontWeights.semibold + \" !important\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Pivot\r\n      linkFormat=\"tabs\"\r\n      selectedKey={defaultKey}\r\n      styles={pivotStyles}\r\n      onLinkClick={handleMenuOnClick}\r\n      headersOnly={true}\r\n    >\r\n      {tabs &&\r\n        tabs.map((tab) => {\r\n          return (\r\n            <PivotItem\r\n              key={tab.key}\r\n              itemKey={tab.key}\r\n              headerText={t(tab.name)}\r\n              itemIcon={tab.icon}\r\n            >\r\n              {tab.render}\r\n            </PivotItem>\r\n          );\r\n        })}\r\n    </Pivot>\r\n  );\r\n}\r\n","import { IconButton, useTheme } from \"@fluentui/react\";\r\n\r\nexport default function AddButton() {\r\n  const { palette } = useTheme();\r\n\r\n  return (\r\n    <IconButton\r\n      iconProps={{ iconName: \"CircleAddition\" }}\r\n      styles={{ root: { color: palette.black } }}\r\n      onClick={() => alert(\"Add an instrument\")}\r\n    />\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport {\r\n  ISeparatorStyles,\r\n  IStackProps,\r\n  PivotItem,\r\n  Separator,\r\n  Stack,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport PagesTabs from \"./pagestabs\";\r\nimport AddButton from \"./addbutton\";\r\nimport { Tab } from \"models/workplace\";\r\nimport { setConfiguration } from \"store/slices/workplaceslice\";\r\n\r\ntype FooterProps = {\r\n  tab: Tab;\r\n  selectedkey: string;\r\n};\r\n\r\nexport default function Footer(props: FooterProps) {\r\n\r\n  const { tab, selectedkey } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const stackProps: IStackProps = {\r\n    horizontal: true,\r\n    styles: {\r\n      root: {\r\n        height: 34,\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        backgroundColor: palette.neutralLight,\r\n      },\r\n    },\r\n  };\r\n\r\n  const separatorStyles: Partial<ISeparatorStyles> = {\r\n    root: {\r\n      \"::after\": {\r\n        backgroundColor: palette.neutralQuaternary,\r\n      },\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTabOnClick = (parentkey: string, item?: PivotItem) => {\r\n    if (item) {\r\n      const itemkey = item.props.itemKey!;\r\n\r\n      // Update current configuration\r\n      dispatch(setConfiguration({ key: parentkey, tab: itemkey, page: item.props.children }))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack {...stackProps}>\r\n      <PagesTabs\r\n        tabs={tab.childtabs}\r\n        parentKey={tab.key}\r\n        defaultKey={selectedkey}\r\n        onClick={handleTabOnClick}\r\n      />\r\n      {tab.addtabs && <AddButton />}\r\n\r\n      <Separator vertical styles={separatorStyles} />\r\n\r\n      {/* Here goes the horizontal scrollbar when needed for the page */}\r\n    </Stack>\r\n  );\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useSpring, useTransition } from \"react-spring\";\r\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\r\n\r\nimport { selectWorkplaceConfig } from \"store/slices/workplaceslice\";\r\nimport PageContainer from \"components/styled/pagecontainer\";\r\nimport { Sticky } from \"components/styled/sticky\"\r\n\r\nimport CommandMenu from \"components/menus/commands/\";\r\nimport MainMenu from \"components/menus/mainmenu\";\r\nimport ToolBar from \"components/menus/mainmenu/toolbar\";\r\nimport Footer from \"components/menus/footer\";\r\n\r\nconst WorkplaceLayout: FunctionComponent = (props) => {\r\n\r\n  // Global state variables\r\n  const { latestMenuTab, configuration, tabsSchema } = useSelector(selectWorkplaceConfig);\r\n  const { tools } = configuration[latestMenuTab];\r\n  const { page } = configuration[latestMenuTab];\r\n  const footertab = tabsSchema.findByKey(latestMenuTab);\r\n  const selectedkey = configuration[latestMenuTab].tab;\r\n\r\n  // Toolbar Animation State & Controls\r\n  const [fixToolBar, setFixToolBar] = useState(true)\r\n\r\n  const [showToolBar, setShowToolBar] = useState(true)\r\n  const toolBarTransition = useTransition(showToolBar, {\r\n    from: { x: 0, y: -34, opacity: 0 },\r\n    enter: { x: 0, y: 0, opacity: 1 },\r\n    leave: { x: 0, y: -34, opacity: 0 },\r\n  })\r\n\r\n  const pageSpring = useSpring({\r\n    marginTop: showToolBar ? 180 : 80,\r\n    from: {\r\n      marginTop: 180,\r\n    },\r\n  })\r\n\r\n  const handleToolbarClose = () => {\r\n    setShowToolBar(false);\r\n    setFixToolBar(false);\r\n  }\r\n\r\n  const handleToolbarFix = () => {\r\n    setFixToolBar(true);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <RemoveScrollBar />\r\n\r\n      <Sticky direction=\"top\">\r\n        <CommandMenu />\r\n        <MainMenu tabs={tabsSchema} setShowToolBar={setShowToolBar} />\r\n        <ToolBar transition={toolBarTransition} isFixed={fixToolBar} handleClose={handleToolbarClose} handleFix={handleToolbarFix}>\r\n          {tools}\r\n        </ToolBar>\r\n      </Sticky>\r\n\r\n      <PageContainer spring={pageSpring} scrollHeight={showToolBar ? \"calc(100vh - 220px)\" : \"calc(100vh - 110px)\"}>\r\n        {page}\r\n      </PageContainer>\r\n\r\n      <Footer tab={footertab} selectedkey={selectedkey} />\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WorkplaceLayout;\r\n","import { lazy } from \"react\";\r\nimport main from \"pages/main\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport WorkplaceLayout from \"layouts/workplace\";\r\n\r\n// Canaidan Methodology - Project Tab\r\nconst GeneralForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/generalform\"));\r\nconst StakeholdersForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/stakeholdersform\"));\r\nconst LogicModelForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/logicmodelform\"));\r\nconst ActivitiesMatrixForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/activitiesform\"));\r\nconst PerformanceMeasureForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/performanceform\"));\r\nconst RisksForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/risksform\"));\r\nconst BudgetForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/budgetform\"));\r\nconst ReportsForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/reportsform\"));\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/workplace\" render={WorkplaceSwitcher} />\r\n        <Route path=\"/\" render={main} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst WorkplaceSwitcher = () => (\r\n  /* Projects, Methodologies, Licitaciones, Bases de Datos */\r\n  <WorkplaceLayout>\r\n    <Switch>\r\n      <Route path=\"/workplace/project\" render={ProjectSwitcher} />\r\n      {/* <Route path=\"/workplace/methodology\" render={MethodologySwitcher} /> */}\r\n      {/* <Route path=\"/workplace/licitations\" render={MethodologySwitcher} /> */}\r\n      {/* <Route path=\"/workplace/database\" render={MethodologySwitcher} /> */}\r\n    </Switch>\r\n  </WorkplaceLayout>\r\n);\r\n\r\nconst ProjectSwitcher = () => (\r\n  /* Projects */\r\n  // After having users account and project id the url's format should be /workplace/#project_id/project/canadian/general\r\n  <Switch>\r\n    <Route path=\"/workplace/project/general\" component={GeneralForm} />\r\n    <Route path=\"/workplace/project/stakeholdres\" component={StakeholdersForm} />\r\n    <Route path=\"/workplace/project/logicmodel\" component={LogicModelForm} />\r\n    <Route path=\"/workplace/project/activitiesmatrix\" component={ActivitiesMatrixForm} />\r\n    <Route path=\"/workplace/project/performance\" component={PerformanceMeasureForm} />\r\n    <Route path=\"/workplace/project/risks\" component={RisksForm} />\r\n    <Route path=\"/workplace/project/budget\" component={BudgetForm} />\r\n    <Route path=\"/workplace/project/reports\" component={ReportsForm} />\r\n  </Switch>\r\n);\r\n","import React, { Suspense } from \"react\";\r\nimport Routes from \"routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Routes />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport IState from \"models/state\";\r\n\r\nconst HelpSlice = createSlice({\r\n  name: \"helpTooltips\",\r\n  initialState: true,\r\n  reducers: {\r\n    toogleHelp: (state: boolean) => {\r\n      return !state;\r\n    },\r\n    setHelp: (state: boolean) => {\r\n      return state = true;\r\n    },\r\n    removeHelp: (state: boolean) => {\r\n      return state = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const help = (state: IState) => state.helpTooltips;\r\nexport const { toogleHelp, setHelp, removeHelp } = HelpSlice.actions;\r\n\r\nexport default HelpSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport themeReducer from \"store/slices/themeslice\";\r\nimport languageReducer from \"store/slices/languageslice\";\r\nimport helpReducer from \"store/slices/settingslice\";\r\nimport projectReducer from \"store/slices/projectslice\";\r\nimport workplaceReducer from \"store/slices/workplaceslice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    theme: themeReducer,\r\n    language: languageReducer,\r\n    help: helpReducer,\r\n    project: projectReducer,\r\n    workplace: workplaceReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./i18n\";\r\n\r\nimport { initializeIcons, loadTheme } from \"@fluentui/react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\n\r\nloadTheme(store.getState().theme);\r\ninitializeIcons();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { TextField } from \"@fluentui/react\";\r\n\r\nconst TextFieldInput = ({ field, form, ...props }: any) => {\r\n  const handleGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleGetError}\r\n      deferredValidationTime={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextFieldInput;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport default function ChangeNarrativeForm() {\r\n    return <div>ChangeNarrative Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LotForm() {\r\n  return <div>Lot Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SpecificationsForm() {\r\n  return <div>Specification Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TechnicalOfferForm() {\r\n  return <div>Technical Offer Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FinancialOfferForm() {\r\n  return <div>Financial Offer Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FormsTutorials() {\r\n  return <div>Forms Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SectorsTutorials() {\r\n  return <div>Sectors Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function GuidesTutorials() {\r\n  return <div>Guides Tutorials</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MethodologyTutorials() {\r\n  return <div>Methodology Tutorials</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function OutcomesTutorial() {\r\n  return <div>Outcomes Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function IndicatorsTutorial() {\r\n  return <div>Indicators Tutorials</div>;\r\n}\r\n","import React, { ReactNode } from \"react\";\r\nimport { Label } from \"@fluentui/react\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport IState from \"models/state\";\r\nimport IWorkplaceConfiguration, { TabSchema } from \"models/workplace\";\r\nimport tabsConfiguration from \"pages/methodologies/canadian/tabsconfiguration\";\r\n\r\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\r\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\r\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\r\n\r\nconst initialState: IWorkplaceConfiguration = {\r\n    tabsSchema: tabsConfiguration,\r\n    latestMenuTab: \"key2\",\r\n    configuration: { // menuTabKey : { toolBarComponentToRender, latestFormTab, pageComponentToRender}\r\n        key1: { tools: <Label>ToolBar #1</Label>, tab: \"key1\", page: <React.Fragment /> },\r\n        key2: { tools: <Label>ToolBar #2</Label>, tab: \"key1\", page: <GeneralForm /> },\r\n        key3: { tools: <Label>ToolBar #3</Label>, tab: \"key1\", page: <SpecificationsForm /> },\r\n        key4: { tools: <Label>ToolBar #4</Label>, tab: \"key1\", page: <FormsTutorials /> },\r\n        key5: { tools: <Label>ToolBar #5</Label>, tab: \"key1\", page: <React.Fragment /> },\r\n        key6: { tools: <Label>ToolBar #6</Label>, tab: \"key1\", page: <React.Fragment /> },\r\n    }\r\n};\r\n\r\nconst workplaceSlice = createSlice({\r\n    name: \"workplace\",\r\n    initialState,\r\n    reducers: {\r\n        setTabSchema: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabs: TabSchema }>) => {\r\n            state.tabsSchema = action.payload.tabs;\r\n        },\r\n        setLatestMenuTab: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabKey: string }>) => {\r\n            state.latestMenuTab = action.payload.tabKey;\r\n        },\r\n        setConfiguration: (state: IWorkplaceConfiguration, action: PayloadAction<{ key: string, tab: string, page: ReactNode }>) => {\r\n            const { key, tab, page } = action.payload;\r\n            const { tools } = state.configuration[key];\r\n            state.configuration[key] = { tools, tab, page }\r\n        }\r\n    },\r\n});\r\n\r\nexport const selectWorkplaceConfig = (state: IState) => state.workplace;\r\nexport const { setTabSchema, setLatestMenuTab, setConfiguration } = workplaceSlice.actions;\r\n\r\nexport default workplaceSlice.reducer;\r\n","import { Redirect } from \"react-router\";\r\nimport { Label } from \"@fluentui/react\";\r\n\r\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\r\nimport StakeholdersForm from \"pages/methodologies/canadian/projectforms/stakeholdersform\";\r\nimport LogicModelForm from \"pages/methodologies/canadian/projectforms/logicmodelform\";\r\nimport ActivitiesMatrixForm from \"pages/methodologies/canadian/projectforms/activitiesform\";\r\nimport PerformanceMeasureForm from \"pages/methodologies/canadian/projectforms/performanceform\";\r\nimport RisksForm from \"pages/methodologies/canadian/projectforms/risksform\";\r\nimport BudgetForm from \"pages/methodologies/canadian/projectforms/budgetform\";\r\nimport ReportsForm from \"pages/methodologies/canadian/projectforms/reportsform\";\r\nimport ChangeNarrativeForm from \"pages/methodologies/canadian/projectforms/changenarrativeform\";\r\n\r\nimport LotForm from \"pages/methodologies/canadian/licitationforms/lotform\";\r\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\r\nimport TechnicalOfferForm from \"pages/methodologies/canadian/licitationforms/technicalofferform\";\r\nimport FinancialOfferForm from \"pages/methodologies/canadian/licitationforms/financialofferform\";\r\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\r\nimport SectorsTutorials from \"pages/methodologies/canadian/tutorials/sectorstutorial\";\r\nimport GuidesTutorials from \"pages/methodologies/canadian/tutorials/guidestutorial\";\r\nimport Tutorials from \"pages/methodologies/canadian/tutorials/methodologytutorials\";\r\nimport OutcomesTutorial from \"pages/methodologies/canadian/tutorials/outcomestutorial\";\r\nimport IndicatorsTutorial from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\r\nimport FinancingForm from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\r\nimport { TabSchema } from \"models/workplace\";\r\n\r\nconst tabsConfiguration = new TabSchema([\r\n  {\r\n    key: \"key1\",\r\n    name: \"wikiml\",\r\n    icon: \"WebComponents\",\r\n    render: <Redirect to=\"/\" />,\r\n    // toolBar: \r\n  },\r\n  {\r\n    key: \"key2\",\r\n    name: \"project\",\r\n    icon: \"Page\",\r\n    render: <Label>ToolBar #1</Label>,\r\n    addtabs: true,\r\n    childtabs: [\r\n      {\r\n        key: \"key1\",\r\n        name: \"general\",\r\n        icon: \"Info\",\r\n        render: <GeneralForm />\r\n      },\r\n      {\r\n        key: \"key2\",\r\n        name: \"stakeholders\",\r\n        icon: \"Commitments\",\r\n        render: <StakeholdersForm />,\r\n      },\r\n      {\r\n        key: \"key3\",\r\n        name: \"logicmodel\",\r\n        icon: \"LargeGrid\",\r\n        render: <LogicModelForm />,\r\n      },\r\n      {\r\n        key: \"key4\",\r\n        name: \"activitiesmatrix\",\r\n        icon: \"GripperDotsVertical\",\r\n        render: <ActivitiesMatrixForm />,\r\n      },\r\n      {\r\n        key: \"key5\",\r\n        name: \"performance\",\r\n        icon: \"GripperDotsVertical\",\r\n        render: <PerformanceMeasureForm />,\r\n      },\r\n      {\r\n        key: \"key6\",\r\n        name: \"changenarrative\",\r\n        icon: \"GripperDotsVertical\",\r\n        render: <ChangeNarrativeForm />,\r\n      },\r\n      {\r\n        key: \"key7\",\r\n        name: \"risks\",\r\n        icon: \"DoubleDownArrow\",\r\n        render: <RisksForm />,\r\n      },\r\n      {\r\n        key: \"key8\",\r\n        name: \"budget\",\r\n        icon: \"PaymentCard\",\r\n        render: <BudgetForm />,\r\n      },\r\n      {\r\n        key: \"key9\",\r\n        name: \"financing\",\r\n        icon: \"StackColumnChart\",\r\n        render: <FinancingForm />,\r\n      },\r\n      {\r\n        key: \"key10\",\r\n        name: \"reports\",\r\n        icon: \"BarChart4\",\r\n        render: <ReportsForm />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"key3\",\r\n    name: \"licitations\",\r\n    icon: \"Library\",\r\n    render: <Label>ToolBar #2</Label>,\r\n    childtabs: [\r\n      { key: \"key1\", name: \"lot\", icon: \"OEM\", render: <LotForm /> },\r\n      {\r\n        key: \"key2\",\r\n        name: \"specifications\",\r\n        icon: \"PageList\",\r\n        render: <SpecificationsForm />,\r\n      },\r\n      {\r\n        key: \"key3\",\r\n        name: \"tecoffer\",\r\n        icon: \"PageListSolid\",\r\n        render: <TechnicalOfferForm />,\r\n      },\r\n      {\r\n        key: \"key4\",\r\n        name: \"finoffer\",\r\n        icon: \"Financial\",\r\n        render: <FinancialOfferForm />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"key4\",\r\n    name: \"methodology\",\r\n    icon: \"StackIndicator\",\r\n    render: <Label>ToolBar #3</Label>,\r\n    childtabs: [\r\n      {\r\n        key: \"key1\",\r\n        name: \"forms\",\r\n        icon: \"PageData\",\r\n        render: <FormsTutorials />,\r\n      },\r\n      {\r\n        key: \"key2\",\r\n        name: \"sectors\",\r\n        icon: \"Sections\",\r\n        render: <SectorsTutorials />,\r\n      },\r\n      {\r\n        key: \"key3\",\r\n        name: \"guides\",\r\n        icon: \"GUID\",\r\n        render: <GuidesTutorials />,\r\n      },\r\n      {\r\n        key: \"key4\",\r\n        name: \"tutorials\",\r\n        icon: \"Video\",\r\n        render: <Tutorials />,\r\n      },\r\n      {\r\n        key: \"key5\",\r\n        name: \"outcomes\",\r\n        icon: \"ReportDocument\",\r\n        render: <OutcomesTutorial />,\r\n      },\r\n      {\r\n        key: \"key6\",\r\n        name: \"indicators\",\r\n        icon: \"CRMReport\",\r\n        render: <IndicatorsTutorial />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"key5\",\r\n    name: \"database\",\r\n    icon: \"Database\",\r\n    render: <Label>ToolBar #4</Label>,\r\n  },\r\n  {\r\n    key: \"key6\",\r\n    name: \"more\",\r\n    icon: \"MoreVertical\",\r\n    render: <Label>ToolBar #5</Label>,\r\n  },\r\n]);\r\n\r\nexport default tabsConfiguration;","import { ReactNode } from \"react\"\r\n\r\n// Workplace Configuration\r\ntype FormRender = {\r\n  tab: string;\r\n  page: ReactNode;\r\n  tools: ReactNode;\r\n}\r\n\r\ntype FormRenderDictionary = {\r\n  [key: string]: FormRender\r\n}\r\n\r\nexport default interface IWorkplaceConfiguration {\r\n  tabsSchema: TabSchema,\r\n  latestMenuTab: string,\r\n  configuration: FormRenderDictionary\r\n}\r\n\r\n// tabSchema\r\nexport type Tab = {\r\n  key: string;\r\n  name: string;\r\n  icon: string;\r\n  render?: JSX.Element;\r\n  addtabs?: boolean;\r\n  childtabs?: Tab[];\r\n  onClick?: Function;\r\n};\r\n\r\nexport class TabSchema {\r\n\r\n  tabs: Tab[];\r\n\r\n  constructor(tabs: Tab[]) {\r\n    this.tabs = tabs\r\n  }\r\n\r\n  findByKey(key: string): Tab {\r\n    return this.tabs.find(tab => tab.key === key) || {} as Tab\r\n  }\r\n\r\n  findChildByKey(key: string, childkey: string): Tab {\r\n    const parenttab = this.tabs.find(tab => tab.key === key) || {} as Tab\r\n    let child;\r\n\r\n    if (parenttab.childtabs) {\r\n      child = parenttab.childtabs.find(tab => tab.key === childkey)\r\n    }\r\n    return child || {} as Tab\r\n  }\r\n\r\n  findByName(name: string): Tab {\r\n    return this.tabs.find(tab => tab.name === name) || {} as Tab\r\n  }\r\n\r\n  findChildByName(name: string): Tab {\r\n    for (let tab of this.tabs) {\r\n      if (tab.childtabs) {\r\n        const tabFound = tab.childtabs.find(childTab => childTab.name === name) || {} as Tab\r\n        if (tabFound) return tabFound;\r\n      }\r\n    }\r\n\r\n    return {} as Tab;\r\n  }\r\n\r\n  // getInitialConfiguration() : FormRenderDictionary {\r\n  //   this.tabs.map()\r\n  // } \r\n};","export enum ECanadianSector {\r\n    \"Agriculture and Nutrition\",\r\n    \"Economical Growth\",\r\n    \"Human Rights\",\r\n    \"Human Development\",\r\n    \"Energy\",\r\n    \"Infrastructure\",\r\n    \"Enviroment\",\r\n    \"Migration & Refuge\",\r\n    \"Information & Comunication Technology\",\r\n}\r\n\r\nexport enum EGermanSector {\r\n    \"Agriculture and Nutrition\",\r\n    \"Economical Growth\",\r\n    \"Human Rights\",\r\n    \"Human Development\",\r\n    \"Energy\",\r\n    \"Infrastructure\",\r\n    \"Enviroment\",\r\n    \"Migration & Refuge\",\r\n    \"Information & Comunication Technology\",\r\n}","import { IGroup } from '@fluentui/react';\r\nimport INodeInfo from 'models/nodeinfo';\r\n\r\nexport enum CategoryName { \"beneficiary\", \"intermediary\", \"implementer\", \"donor\", \"other\" }\r\n\r\nexport interface Category {\r\n    name: CategoryName,\r\n    minMain: number,\r\n}\r\n\r\nexport const categories = {\r\n    beneficiary: { name: 0, minMain: 0 } as Category,\r\n    intermediary: { name: 1, minMain: 1 } as Category,\r\n    implementer: { name: 2, minMain: 1 } as Category,\r\n    donor: { name: 3, minMain: 1 } as Category,\r\n    other: { name: 4, minMain: 0 } as Category,\r\n}\r\n\r\nexport interface IStakeholder {\r\n    id: number;\r\n    name: string;\r\n    category: Category;\r\n    main?: boolean;\r\n    orderInGroup: number;\r\n}\r\n\r\nexport default class Stakeholders {\r\n    list: IStakeholder[];\r\n\r\n    constructor(list: IStakeholder[]) {\r\n        this.list = list;\r\n    }\r\n\r\n    getStakeholdersByCategory(category: CategoryName): IStakeholder[] {\r\n        switch (category) {\r\n            case 0:\r\n                return this.getBeneficaries();\r\n            case 1:\r\n                return this.getIntermediaries();\r\n            case 2:\r\n                return this.getImplementors();\r\n            case 3:\r\n                return this.getDonors();\r\n            default:\r\n                return this.getOthers();\r\n        }\r\n    }\r\n\r\n    getBeneficaries(): IStakeholder[] {\r\n        return this.list.filter(sh => sh.category.name === 0);\r\n    }\r\n\r\n    getIntermediaries(): IStakeholder[] {\r\n        return this.list.filter(sh => sh.category.name === 1);\r\n    }\r\n\r\n    getImplementors(): IStakeholder[] {\r\n        return this.list.filter(sh => sh.category.name === 2);\r\n    }\r\n\r\n    getDonors(): IStakeholder[] {\r\n        return this.list.filter(sh => sh.category.name === 3);\r\n    }\r\n\r\n    getOthers(): IStakeholder[] {\r\n        return this.list.filter(sh => sh.category.name === 4);\r\n    }\r\n\r\n    addStakeholder(order: number, category: Category): Stakeholders {\r\n        // new Stakeholder\r\n        const newSh = {\r\n            id: this.list.length,\r\n            name: \"\",\r\n            category: category,\r\n            main: false,\r\n            orderInGroup: order + 1\r\n        } as IStakeholder;\r\n\r\n        // Fix rest of orders\r\n        this.getStakeholdersByCategory(category.name).forEach(sibling => {\r\n            if (sibling.orderInGroup >= newSh.orderInGroup) {\r\n                sibling.orderInGroup += 1;\r\n            }\r\n        })\r\n\r\n        // now push new element after orders have been fixed\r\n        this.list.push(newSh)\r\n        this.list = this.list.sort((a, b) => a.orderInGroup - b.orderInGroup)\r\n\r\n        return this;\r\n    }\r\n\r\n    deleteStakeholder(id: number): Stakeholders {\r\n        const node = this.list.find(sh => sh.id === id);\r\n\r\n        if (node) {\r\n            // Fix rest of orders\r\n            this.getStakeholdersByCategory(node.category.name).forEach(sibling => {\r\n                if (sibling.orderInGroup >= node.orderInGroup) {\r\n                    sibling.orderInGroup -= 1;\r\n                }\r\n            })\r\n\r\n            // if the removed node was the main stakeholder, then asign other stakeholder\r\n            if (node.main && node.category.minMain !== 0) {\r\n                this.getStakeholdersByCategory(node.category.name).find(sh => sh.orderInGroup === 0)!.main = true;\r\n            }\r\n\r\n            // Remove node\r\n            this.list = this.list.filter(sh => sh.id !== id).sort((a, b) => a.id - b.id);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setMainStakeholder(id: number): Stakeholders {\r\n        const newMain = this.list.find(sh => sh.id === id)!;\r\n        const previousMain = this.getStakeholdersByCategory(newMain.category.name).find(sh => sh.main === true)!\r\n\r\n        // Unset previous main\r\n        previousMain.main = false;\r\n        // Set new main\r\n        newMain.main = true;\r\n\r\n        return this;\r\n    }\r\n\r\n    buidStakeholdersList(): IStakholderInfo[] {\r\n        // Sort items by category and then by id\r\n        return this.list.sort((a, b) => a.category.name - b.category.name || a.orderInGroup - b.orderInGroup).map(sh => {\r\n            return {\r\n                id: sh.id,\r\n                name: sh.name,\r\n                category: sh.category,\r\n                main: sh.main,\r\n                hasSiblings: this.getStakeholdersByCategory(sh.category.name).length > 1,\r\n                orderInGroup: sh.orderInGroup\r\n            } as IStakholderInfo\r\n        });\r\n    }\r\n\r\n    buildStakeholdersGroups(translator: Function): IGroup[] {\r\n        const benefCount = this.getBeneficaries().length;\r\n        const intermCount = this.getIntermediaries().length;\r\n        const inpemCount = this.getImplementors().length;\r\n        const donorCount = this.getDonors().length;\r\n        const otherCount = this.getOthers().length;\r\n\r\n        const counts = [benefCount, intermCount, inpemCount, donorCount, otherCount]\r\n        let index = 0;\r\n\r\n        let groups = [] as IGroup[];\r\n\r\n        for (var key in CategoryName) {\r\n            if (CategoryName[key]) {\r\n                groups.push({\r\n                    key: `stakeholder${key}`, name: translator(CategoryName[key]), startIndex: index, count: counts[key]\r\n                })\r\n                index += counts[key];\r\n            }\r\n            else break;\r\n        }\r\n        return groups;\r\n    }\r\n}\r\n\r\nexport interface IStakholderInfo extends INodeInfo {\r\n    id: number;\r\n    name: string;\r\n    category: Category;\r\n    main: boolean;\r\n    orderInGroup: number;\r\n    hasSiblings?: boolean;\r\n}","import { toNumber } from \"lodash\";\r\nimport { Graph, Edge } from \"../tree\";\r\n\r\nexport type LogicmodelVertex = {\r\n    id: string;\r\n    text: string;\r\n    level: number;\r\n}\r\n\r\nexport default class LogicmodelGraph extends Graph<LogicmodelVertex> {\r\n\r\n    setNodeText(id: string, char: string): LogicmodelGraph {\r\n        const node = this.vertex.find(v => v.id === id);\r\n\r\n        if (node) {\r\n            node.text += char;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getInmediateTree(id: string) {\r\n        const outputs = this.edges.filter(e => e.from === id).map(e => this.findNode(e.to));\r\n\r\n        return { node: this.findNode(id), outputs: outputs };\r\n    }\r\n\r\n    getParentId(id: string, level: number): string {\r\n        return id.slice(0, level).padEnd(4, \"0\");\r\n    }\r\n\r\n    addNode(parentId: string): LogicmodelGraph {\r\n        const parentNode = this.findNode(parentId)!;\r\n\r\n        const newNode = {\r\n            id: this.generateId(parentId, parentNode.level, this.findChildrenIds(parentId).length),\r\n            text: \"\",\r\n            level: parentNode.level + 1\r\n        } as LogicmodelVertex\r\n\r\n        // Add to graph\r\n        this.vertex.push(newNode);\r\n        this.edges.push({ from: parentNode.id, to: newNode.id } as Edge);\r\n\r\n        return this\r\n    }\r\n\r\n    addSibling(siblingId: string) {\r\n\r\n        const { id, level, order } = this.generateSiblingId(siblingId);\r\n\r\n        const newNode = {\r\n            id: id,\r\n            text: \"added node \" + id,\r\n            level: level\r\n        } as LogicmodelVertex\r\n\r\n        // Fix siblings ids\r\n        const parentId = this.getParentId(id.toString(), level);\r\n        const siblingsIds = this.findChildrenIds(parentId).sort();\r\n\r\n        // Updating siblings vertex and edges and its descendant's\r\n        for (let i = order - 1; i < siblingsIds.length; i++) {\r\n            const oldId = siblingsIds[i];\r\n\r\n            // Find sibling\r\n            const childNode = this.findNode(oldId);\r\n\r\n            if (childNode) {\r\n                // Update sibling vertex & edges\r\n                const newInfo = this.generateSiblingId(oldId);\r\n                childNode.id = newInfo.id;\r\n\r\n                this.edges = this.edges.map(e => ({\r\n                    from: e.from === oldId ? newInfo.id : e.from,\r\n                    to: e.to === oldId ? newInfo.id : e.to\r\n                } as Edge));\r\n\r\n                // Update descendants\r\n                const commonRoot = id.substr(0, level + 1);\r\n\r\n                const descendants = this.findAllDescendants(oldId);\r\n\r\n                descendants.forEach(desc => {\r\n                    // update vertex id\r\n                    const n = toNumber(desc.id.charAt(desc.level));\r\n                    const oldDescId = desc.id;\r\n                    desc.id = this.generateId(childNode.id, desc.level, n);\r\n\r\n                    // update\r\n                    this.edges = this.edges.map(e => ({\r\n                        from: e.from === oldDescId ? desc.id : e.from,\r\n                        to: e.to === oldDescId ? desc.id : e.to\r\n                    } as Edge));\r\n                })\r\n            }\r\n        }\r\n\r\n        // Add new sibling to graph\r\n        this.vertex.push(newNode);\r\n        this.edges.push({ from: parentId, to: newNode.id } as Edge);\r\n\r\n        this.vertex = this.vertex.sort((a, b) => toNumber(a.id) - toNumber(b.id));\r\n        return this\r\n    }\r\n\r\n    deleteNode(nodeId: string): LogicmodelGraph {\r\n        const node = this.findNode(nodeId);\r\n\r\n        if (node) {\r\n            // Remove from graph\r\n            this.vertex = this.vertex.filter(v => v.id !== nodeId);\r\n            this.edges = this.edges.filter(e => e.from !== nodeId && e.to !== nodeId);\r\n\r\n            // Update children ids\r\n            const parentId = this.getParentId(nodeId, node.level);\r\n            const childrenIds = this.findChildrenIds(parentId).sort();\r\n\r\n            // Updating vertex and edges\r\n            for (let i = 0; i < childrenIds.length; i++) {\r\n                const oldId = childrenIds[i];\r\n\r\n                const childNode = this.findNode(oldId);\r\n                if (childNode) {\r\n                    const newId = this.generateId(parentId, this.getNodeLevel(parentId), i);\r\n                    childNode.id = newId;\r\n\r\n                    this.edges = this.edges.map(e => ({\r\n                        from: e.from === oldId ? newId : e.from,\r\n                        to: e.to === oldId ? newId : e.to\r\n                    } as Edge));\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n// Examples\r\nexport const vertexExample: LogicmodelVertex[] = [\r\n    {\r\n        id: \"1000\",\r\n        text:\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\r\n        level: 0,\r\n    },\r\n    {\r\n        id: \"1100\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1110\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1111\",\r\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1120\",\r\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1121\",\r\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1200\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1210\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1211\",\r\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1220\",\r\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1221\",\r\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\r\n        level: 3,\r\n    },\r\n];\r\n\r\nexport const edgesExample: Edge[] = [\r\n    // Edges from 1\r\n    { from: \"1000\", to: \"1100\" },\r\n    { from: \"1000\", to: \"1200\" },\r\n\r\n    // Edges from 1.1\r\n    { from: \"1100\", to: \"1110\" },\r\n    { from: \"1100\", to: \"1120\" },\r\n\r\n    // Edges from 1.1.1\r\n    { from: \"1110\", to: \"1111\" },\r\n    // Edges from 1.1.2\r\n    { from: \"1120\", to: \"1121\" },\r\n\r\n    // Edges from 1.2\r\n    { from: \"1200\", to: \"1210\" },\r\n    { from: \"1200\", to: \"1220\" },\r\n\r\n    // Edges from 1.2.1\r\n    { from: \"1210\", to: \"1211\" },\r\n    // Edges from 1.2.2\r\n    { from: \"1220\", to: \"1221\" },\r\n];\r\n\r\nexport const logicmodelGraphExample = new LogicmodelGraph(vertexExample, edgesExample)\r\n","import { toNumber } from \"lodash\";\r\nimport { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\r\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\r\n\r\nexport type Vertex = {\r\n    id: string;\r\n}\r\n\r\nexport type Edge = {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\ninterface IGraph<T> {\r\n    vertex: T[];\r\n    edges: Edge[];\r\n}\r\n\r\nexport type Tree<T extends Vertex | LogicmodelVertex | ActivityVertex> = {\r\n    node: T;\r\n    children: Tree<T>[];\r\n}\r\n\r\nexport class Graph<T extends Vertex | LogicmodelVertex | ActivityVertex> implements IGraph<T> {\r\n\r\n    vertex: T[];\r\n    edges: Edge[];\r\n\r\n    constructor(vertex: T[], edges: Edge[]) {\r\n        this.vertex = vertex;\r\n        this.edges = edges;\r\n    };\r\n\r\n    findNode(id: string): T {\r\n        return this.vertex.find(v => v.id === id) || {} as T;\r\n    }\r\n\r\n    getNodeLevel(id: string): number {\r\n        return 3 - id.split(\"\").filter(c => c === \"0\").length;\r\n    }\r\n\r\n    findChildrenIds(parentId: string): string[] {\r\n        return this.edges.filter(e => e.from === parentId).map(e => e.to);\r\n    }\r\n\r\n    generateId(parentId: string, level: number, num: number): string {\r\n        return parentId.slice(0, level + 1).concat((num + 1).toString()).padEnd(4, \"0\");\r\n    }\r\n\r\n    generateSiblingId(siblingId: string, num?: number) {\r\n        // Get level\r\n        const level = this.getNodeLevel(siblingId);\r\n\r\n        // Generate new id\r\n        let id = siblingId.slice(0, level);\r\n        const order = num ? num : toNumber(siblingId[level]) + 1;\r\n        id += order.toString();\r\n        id = id.padEnd(4, \"0\");\r\n        return { id: id.toString(), level: level, order };\r\n    }\r\n\r\n    findAllDescendants(id: string) {\r\n        const level = this.getNodeLevel(id);\r\n        const commonRoot = id.substr(0, level + 1);\r\n\r\n        return this.vertex.filter(v => v.id.substr(0, level + 1) === commonRoot);\r\n    }\r\n\r\n    buildTree(): Tree<T> {\r\n        let tree: Tree<T> = { node: this.findNode(\"1000\")!, children: [] };\r\n\r\n        return this.buildTreeRec(tree);\r\n    }\r\n\r\n    private buildTreeRec(tree: Tree<T>) {\r\n\r\n        const childVertex = this.edges.filter(edge => edge.from === tree.node.id).map(edge => this.findNode(edge.to)!);\r\n\r\n        tree.children = childVertex.map(child => ({ node: child, children: [] } as Tree<T>));\r\n\r\n        tree.children.forEach(child => {\r\n            this.buildTreeRec(child);\r\n        })\r\n\r\n        return tree;\r\n    }\r\n}\r\n","import { toNumber } from \"lodash\";\r\nimport INodeInfo from \"models/nodeinfo\";\r\nimport { Edge } from \"../tree\";\r\nimport LogicmodelGraph, { LogicmodelVertex } from \"./logicmodel\"\r\n\r\nexport type ActivityVertex = {\r\n    outputId: string;\r\n    id: string;\r\n    text: string;\r\n}\r\n\r\nexport default class LogicModelActivitiesMatrix extends LogicmodelGraph {\r\n\r\n    activities: ActivityVertex[];\r\n\r\n    constructor(vertex: LogicmodelVertex[], edges: Edge[], activities: ActivityVertex[]) {\r\n        super(vertex, edges);\r\n        this.activities = activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\r\n    }\r\n\r\n    findActivitiesByOutput(outputId: string) {\r\n        return this.activities.filter(a => a.outputId === outputId);\r\n    }\r\n\r\n    addActivityToOutput(outputId: string, id: string): LogicModelActivitiesMatrix {\r\n        // Update siblingsIds below\r\n        let i = toNumber(id)\r\n        this.activities.filter(a => a.outputId === outputId && toNumber(a.id) >= i).sort().forEach((sibling, key) => {\r\n            sibling.id = (i + key + 1).toString();\r\n        })\r\n\r\n        // Create nwe activity\r\n        const newActivity = {\r\n            outputId: outputId,\r\n            id: id,\r\n            text: \"\",\r\n        } as ActivityVertex\r\n\r\n        // Add to graph\r\n        this.activities.push(newActivity);\r\n        this.activities = this.activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\r\n        return this\r\n    }\r\n\r\n    deleteActivity(outputId: string, id: string): LogicModelActivitiesMatrix {\r\n        // Delete from activities\r\n        this.activities = this.activities.filter(a => !(a.id === id && a.outputId === outputId));\r\n\r\n        // Update children ids\r\n        this.activities.filter(a => a.outputId === outputId).sort().forEach((child, key) => {\r\n            child.id = key.toString();\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    buidOutputsActivityList() {\r\n        // get all Inmediate Outcomes Ids\r\n        const inmediatesIds = this.vertex.filter(v => v.level === 2).sort((a, b) => toNumber(a.id) - toNumber(b.id)).map(v => v.id);\r\n        const items: IActivityInfo[] = [];\r\n\r\n        inmediatesIds.forEach(id => {\r\n            const { node, outputs } = this.getInmediateTree(id);\r\n\r\n            // Push Inmediate Outcome\r\n            items.push({\r\n                id: node.id,\r\n                name: \"inmediate-outcomes\",\r\n                level: 0,\r\n                description: node.text\r\n            } as IActivityInfo);\r\n\r\n            // Push Outputs & Activities\r\n            outputs.forEach(output => {\r\n                // Push Output\r\n                items.push({\r\n                    id: output.id,\r\n                    name: \"outputs\",\r\n                    level: 1,\r\n                    description: output.text\r\n                } as IActivityInfo)\r\n\r\n                // Push Activities\r\n                const siblings = this.findActivitiesByOutput(output.id);\r\n                siblings.forEach(activity => {\r\n                    items.push({\r\n                        id: output.id + activity.id,\r\n                        name: \"activity\",\r\n                        level: 2,\r\n                        description: activity.text,\r\n                        hasSiblings: siblings.length > 1\r\n                    } as IActivityInfo)\r\n                })\r\n            })\r\n        })\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\nexport interface IActivityInfo extends INodeInfo {\r\n    id: string;\r\n    name: string;\r\n    level: number;\r\n    description: string;\r\n    hasSiblings?: boolean;\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport IState from \"models/state\";\r\nimport { IProjectInfo } from \"models/project\";\r\nimport { ECanadianSector } from \"models/sector\";\r\nimport IProject from \"models/project\";\r\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\r\nimport LogicModelActivitiesMatrix, { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\r\nimport { Edge } from \"models/tree\";\r\nimport Stakeholders, { categories } from \"models/canadian/stakeholders\";\r\n\r\n// Examples - Set initial in blank\r\nconst initialProjectInfoState: IProjectInfo<ECanadianSector> = {\r\n    name: \"Large Project Name Test\",\r\n    shortname: \"Short Project Name\",\r\n    description: \"Lorem ipsum dolre description asedore son lisiu tredo.\",\r\n    methodology: \"Canadian Test\",\r\n    status: \"pending\",\r\n    wikicode: \"X54S0\",\r\n    organization: \"Organization Test\",\r\n    intermediary: \"Intermediary Organization Test\",\r\n    duration: 34,\r\n    country: \"Country Test\",\r\n    program: \"Program Test\",\r\n    sector: ECanadianSector.Energy,\r\n    donorcode: \"2F8HT\",\r\n    leader: { name: \"Leader Test\", email: \"test@gmail.com\" },\r\n    team: [\r\n        { name: \"team1\", email: \"team-test@gmal.com\" },\r\n        { name: \"team2\", email: \"team-test@gmal.com\" },\r\n    ],\r\n    currency: \"Euro\",\r\n    budget: 200.00,\r\n    budgetItems: 22.00,\r\n    budgetAct: 33.00,\r\n    budgetFinanced: 150.00,\r\n    solicitedBudget: 44.00,\r\n    approvedBudget: 44.00,\r\n    approvedDate: new Date(),\r\n    finalDate: new Date(),\r\n    initialDate: new Date(),\r\n    donor: \"Donor Test\",\r\n    contribution: 1000.00,\r\n};\r\n\r\nconst vertexExample: LogicmodelVertex[] = [\r\n    {\r\n        id: \"1000\",\r\n        text:\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\r\n        level: 0,\r\n    },\r\n    {\r\n        id: \"1100\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1110\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1111\",\r\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1120\",\r\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1121\",\r\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1200\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1210\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1211\",\r\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1220\",\r\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1221\",\r\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\r\n        level: 3,\r\n    },\r\n];\r\n\r\nconst edgesExample: Edge[] = [\r\n    // Edges from 1\r\n    { from: \"1000\", to: \"1100\" },\r\n    { from: \"1000\", to: \"1200\" },\r\n\r\n    // Edges from 1.1\r\n    { from: \"1100\", to: \"1110\" },\r\n    { from: \"1100\", to: \"1120\" },\r\n\r\n    // Edges from 1.1.1\r\n    { from: \"1110\", to: \"1111\" },\r\n    // Edges from 1.1.2\r\n    { from: \"1120\", to: \"1121\" },\r\n\r\n    // Edges from 1.2\r\n    { from: \"1200\", to: \"1210\" },\r\n    { from: \"1200\", to: \"1220\" },\r\n\r\n    // Edges from 1.2.1\r\n    { from: \"1210\", to: \"1211\" },\r\n    // Edges from 1.2.2\r\n    { from: \"1220\", to: \"1221\" },\r\n];\r\n\r\nconst actvitiesExamples: ActivityVertex[] = [\r\n    {\r\n        outputId: \"1111\",\r\n        id: \"0\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1111\",\r\n        id: \"1\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1111\",\r\n        id: \"2\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1121\",\r\n        id: \"0\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1121\",\r\n        id: \"1\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1211\",\r\n        id: \"0\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1211\",\r\n        id: \"1\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1211\",\r\n        id: \"2\",\r\n        text: \"\"\r\n    },\r\n]\r\n\r\nconst actmatrixGraphExample = new LogicModelActivitiesMatrix(vertexExample, edgesExample, actvitiesExamples);\r\n\r\nconst stakeholders = new Stakeholders([\r\n    {\r\n        id: 0,\r\n        name: \"Stakeholder1 Ben\",\r\n        category: categories.beneficiary,\r\n        main: true,\r\n        orderInGroup: 0\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Stakeholder2 Ben\",\r\n        category: categories.beneficiary,\r\n        main: false,\r\n        orderInGroup: 1\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Stakeholder3 Ben\",\r\n        category: categories.beneficiary,\r\n        main: false,\r\n        orderInGroup: 2\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Stakeholder4 Don\",\r\n        category: categories.donor,\r\n        main: true,\r\n        orderInGroup: 0\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Stakeholder5 Imp\",\r\n        category: categories.implementer,\r\n        main: true,\r\n        orderInGroup: 0\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Stakeholder6 Int\",\r\n        category: categories.intermediary,\r\n        main: true,\r\n        orderInGroup: 0\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Stakeholder7 Int\",\r\n        category: categories.intermediary,\r\n        main: false,\r\n        orderInGroup: 1\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Stakeholder8 Other\",\r\n        category: categories.other,\r\n        main: false,\r\n        orderInGroup: 0\r\n    },\r\n])\r\n\r\nconst initialState: IProject = {\r\n    info: initialProjectInfoState,\r\n    methodology: \"canadian\",\r\n    forms: [\r\n        { name: \"logicModelActivities\", structure: actmatrixGraphExample },\r\n        { name: \"stakeholders\", structure: stakeholders },\r\n    ],\r\n}\r\n\r\nconst projectSlice = createSlice({\r\n    name: \"project\",\r\n    initialState,\r\n    reducers: {\r\n        setCurrentProject: (state, action) => {\r\n            state = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const selectProject = (state: IState) => state.project;\r\nexport const { setCurrentProject } = projectSlice.actions;\r\n\r\nexport default projectSlice.reducer;\r\n"],"sourceRoot":""}