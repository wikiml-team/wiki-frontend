{"version":3,"sources":["components/sidepanel/formcontents.tsx","components/help/contextualhelp.tsx","components/inputs/dropdown.tsx","components/inputs/datepicker.tsx","components/form/debugformik.tsx","components/form/autosaveform.tsx","pages/methodologies/canadian/projectforms/generalform.tsx","pages/methodologies/canadian/projectforms/stakeholdersform.tsx","pages/methodologies/canadian/projectforms/activitiesform.tsx","pages/methodologies/canadian/projectforms/performanceform.tsx","pages/methodologies/canadian/projectforms/risksform.tsx","pages/methodologies/canadian/projectforms/budgetform.tsx","pages/methodologies/canadian/projectforms/reportsform.tsx","components/inputs/logictext.tsx","pages/methodologies/canadian/projectforms/logicmodelform.tsx","apollo.tsx","pages/main.tsx","components/styled/pagecontainer.tsx","components/styled/sticky.tsx","i18n.js","components/fullscreentoogler.js","components/menus/commands/items.tsx","store/slices/languageslice.tsx","components/sidepanel/languagepanel.tsx","themes/office.tsx","store/slices/themeslice.tsx","components/styled/shapes.tsx","components/pickers/themepicker.tsx","components/sidepanel/settingspanel.tsx","components/menus/commands/custombuttons.tsx","components/menus/commands/index.tsx","components/menus/mainmenu/pivotbar.tsx","components/menus/mainmenu/teampile.tsx","components/menus/mainmenu/index.tsx","components/menus/mainmenu/toolbar.tsx","components/menus/footer/pagestabs.tsx","components/menus/footer/addbutton.tsx","components/menus/footer/index.tsx","layouts/workplace.tsx","routes.tsx","App.tsx","reportWebVitals.ts","store/slices/settingslice.tsx","store/index.tsx","index.tsx","components/inputs/text.tsx","pages/methodologies/canadian/projectforms/changenarrativeform.tsx","pages/methodologies/canadian/licitationforms/lotform.tsx","pages/methodologies/canadian/licitationforms/specificationsform.tsx","pages/methodologies/canadian/licitationforms/technicalofferform.tsx","pages/methodologies/canadian/licitationforms/financialofferform.tsx","pages/methodologies/canadian/tutorials/formstutorial.tsx","pages/methodologies/canadian/tutorials/sectorstutorial.tsx","pages/methodologies/canadian/tutorials/guidestutorial.tsx","pages/methodologies/canadian/tutorials/methodologytutorials.tsx","pages/methodologies/canadian/tutorials/outcomestutorial.tsx","pages/methodologies/canadian/tutorials/indicatorstutorial.tsx","store/slices/workplaceslice.tsx","pages/methodologies/canadian/tabsconfiguration.tsx","models/workplace.ts","models/sector.ts","models/canadian/stakeholders.ts","models/canadian/logicmodel.ts","models/tree.ts","models/canadian/actvitiesmatrix.ts","store/slices/projectslice.tsx"],"names":["StakehoderFormPanel","t","useTranslation","tokens","childrenGap","Item","label","options","LogicModelOutputFormPanel","LogicModelOutcomeFormPanel","ContextualHelpContent","content","definition","example","format","guide","tips","columns","key","name","fieldName","minWidth","data","onRender","item","isMultiline","base","titles","filter","i","items","groups","index","title","push","startIndex","count","autoHide","autoHeight","autoHeightMin","autoHeightMax","selectionMode","SelectionMode","none","isHeaderVisible","DropdownFieldInput","field","form","props","Dropdown","onGetErrorMessage","value","touched","errors","deferredValidationTime","DateFieldInput","DayPickerStrings","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","minDate","useConst","addMonths","Date","now","DatePicker","placeholder","strings","styles","root","height","Debug","style","margin","borderRadius","background","boxShadow","textTransform","fontSize","borderTopLeftRadius","borderTopRightRadius","fontWeight","padding","color","letterSpacing","validationSchema","validate","rest","overflowX","JSON","stringify","AutoSave","debounceMs","formik","useFormikContext","useState","lastSaved","setLastSaved","debouncedSubmit","useCallback","debounce","submitForm","then","toISOString","useEffect","values","isSubmitting","AutoSaveFormik","initialValues","onSubmit","children","GeneralForm","classes","mergeStyleSets","circle","width","headerStackProps","horizontal","horizontalAlign","paddingRight","separatorProps","alignContent","generalInfo","useSelector","selectProject","info","initialDate","setInitialDate","approvedDate","setApprovedDate","initValues","shortName","shortname","largeName","description","country","impOrganization","organization","intOrganization","intermediary","budget","budgetPerItems","budgetItems","budgetPerAct","budgetAct","budgetFinanced","budgetSolicited","solicitedBudget","program","sector","duration","donor","approvedBudget","finalDate","contribution","object","shape","string","max","required","min","currency","number","setLocale","mixed","default","countries","text","setSubmitting","alert","dir","component","TextFieldInput","sizeLg","multiline","autoAdjustHeight","marginTop","sizeSm","sizeMd","Separator","PrimaryButton","className","Stack","Label","status","wikicode","suffix","prefix","readOnly","donorcode","onSelectDate","date","StandardField","TextField","grow","generalFormViewMode","StakeholdersForm","stakeholdersModel","forms","find","structure","initialItems","buidStakeholdersList","buildStakeholdersGroups","setItems","stakeholders","setStakeholders","useBoolean","panelIsOpen","openPanel","setTrue","dismissPanel","setFalse","maxWidth","mainStakeholderRender","ariaLabel","isResizable","isPadded","fieldRender","operatorsRender","palette","useTheme","dropdownStyles","dropdown","border","neutralLighter","selectors","red","commandStyles","alignSelf","rootHovered","backgroundColor","themeLighter","icon","black","defaultSelectedKey","id","toString","iconProps","iconName","onClick","bossIconStyles","FontWeights","bold","iconStyles","neutralSecondary","main","category","hasNoMain","console","log","setMainStakeholder","handleChangeMainStakeholder","Fragment","addStakeholder","orderInGroup","handleAddStakeholder","hasSiblings","deleteStakeholder","handleDeleteStakeholder","onRenderFooterContent","React","marginRight","isOpen","isHiddenOnDismiss","headerText","onDismiss","isFooterAtBottom","ActivitiesMatrixForm","logicModelActivitiesMatrix","buidOutputsActivityList","activitiesMatrix","setActivitiesMatrix","textAlign","isRowHeader","codeRender","descriptionRender","helpPanelIsOpen","openHelpPanel","dismissHelpPanel","variant","level","html","textFieldProps","rows","resizable","defaultValue","fieldGroup","neutralTertiary","itemId","outputId","slice","activityId","addActivityToOutput","handleAddActivity","toNumber","deleteActivity","handleDeleteActivity","onRenderRow","customStyles","FontSizes","medium","themeLighterAlt","white","PerformanceMeasureForm","RisksForm","BudgetForm","ReportsForm","LogicTextFieldInput","nodeTree","handleAddChild","handleDelete","hanldeOpenOutputPanel","hanldeOpenOutcomePanel","handleOutcomeHelpPanel","handleOutputHelpPanel","node","rootStackItemProps","inputTextFieldProps","neutralQuaternary","borderTop","Icon","LogicTextFieldHeader","map","child","dispatch","useDispatch","selectWorkplaceConfig","tabsSchema","latestMenuTab","tooltipContent","canAdd","canDelete","length","isAnOputut","titleStyles","borderBottom","neutralLight","Text","TooltipHost","IconButton","formtabKey","findChildByName","renderPage","findChildByKey","render","setConfiguration","tab","page","handleRedirectToActivity","LogicModelForm","logicModelGraph","graph","setGraph","buildTree","treeToRender","setTreeToRender","outputPanelIsOpen","openOutputPanel","dismissOutputPanel","outcomePanelIsOpen","openOutcomePanel","dismissOutcomePanel","outcomeHelpPanelIsOpen","openOutcomeHelpPanel","dismissOutcomeHelpPanel","outputHelpPanelIsOpen","openOutputHelpPanel","dismissOutputHelpPanel","vertex","v","LogicmodelLabels","siblingId","addNode","deleteNode","PanelsRender","handleDismissPanel","DefaultButton","Panel","textStyles","TextMediumPlus","verticalAlign","maxHeight","Apollo","METHODOLOGIES","gql","useQuery","loading","error","methodologies","Main","to","Container","styled","div","PageContainer","spring","scrollHeight","Fixed","attrs","direction","Sticky","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","resources","en","English","es","Spanish","interpolation","escapeValue","fullscreenToggler","elem","document","documentElement","fullscreenElement","exitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","loadNamespaces","iconOnly","overflowItems","LanguageSlice","createSlice","initialState","language","reducers","setLanguage","state","action","payload","changeLanguage","setEnglish","setSpanish","setGerman","selectLanguage","actions","LanguagePanel","lang","suportedLangs","undefined","onChange","event","themeWord","createTheme","themePrimary","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralQuaternaryAlt","neutralTertiaryAlt","neutralPrimaryAlt","neutralPrimary","neutralDark","themeExcel","themePowerPoint","themeTeams","colorCells","themeSlice","setTheme","loadTheme","setThemeWord","setThemeExcel","setThemePowerPoint","setThemeTeams","StyledCircle","Circle","circleprops","size","classnames","ThemePicker","handler","cursor","cell","SettingsPanel","nameTextFieldStyles","borderColor","Persona","PersonaSize","size40","initialsColor","PersonaInitialsColor","cyan","CustomBarButton","itemStyles","rootPressed","iconHovered","iconPressed","labelHovered","CommandBarButton","concatStyleSets","CustomOverflowButton","rootExpanded","rootExpandedHovered","menuIcon","overflowProps","menuProps","subComponentStyles","menuItem","CommandMenu","OpenLanguagePanel","OpenSettingsPanel","comandBarStyles","position","top","left","transform","languagePanelOpen","openLanguagePanel","dismissLanguagePanel","settingsPanelOpen","openSettingsPanel","dismissSettingsPanel","CommandBar","buttonAs","farItems","overflowButtonAs","overflowButtonProps","PivotBar","schema","setShowToolBar","tabs","pivotStyles","zIndex","link","small","linkIsSelected","Pivot","linkFormat","onLinkClick","ev","itemkey","itemKey","setLatestMenuTab","tabKey","PivotItem","itemIcon","FacePileStyles","right","itemButton","faces","personaName","gray","gold","lightGreen","warmGray","blue","green","darkBlue","purple","orange","TeamPile","Facepile","personas","personaSize","size24","maxDisplayablePersonas","overflowButtonType","OverflowButtonType","descriptive","addButtonProps","href","ariaDescription","MainMenu","ToolBar","isFixed","handleClose","handleFix","transition","stackProps","stackPinProps","align","ref","wrapperRef","useRef","handleClickOutside","current","contains","target","addEventListener","removeEventListener","PagesTabs","parentKey","defaultKey","semibold","selectedKey","headersOnly","AddButton","Footer","selectedkey","bottom","separatorStyles","childtabs","parentkey","addtabs","vertical","WorkplaceLayout","configuration","tools","footertab","findByKey","fixToolBar","setFixToolBar","showToolBar","toolBarTransition","useTransition","from","x","y","opacity","enter","leave","pageSpring","useSpring","lazy","Routes","path","WorkplaceSwitcher","ProjectSwitcher","App","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","HelpSlice","toogleHelp","setHelp","removeHelp","store","configureStore","reducer","theme","themeReducer","languageReducer","help","helpReducer","project","projectReducer","workplace","workplaceReducer","client","ApolloClient","uri","cache","InMemoryCache","getState","initializeIcons","ReactDOM","StrictMode","ApolloProvider","getElementById","ChangeNarrativeForm","LotForm","SpecificationsForm","TechnicalOfferForm","FinancialOfferForm","FormsTutorials","SectorsTutorials","GuidesTutorials","MethodologyTutorials","OutcomesTutorial","IndicatorsTutorial","this","childkey","parenttab","tabFound","childTab","key1","key2","key3","key4","key5","key6","workplaceSlice","setTabSchema","ECanadianSector","EGermanSector","CategoryName","LogicmodelGraph","char","outputs","edges","e","findNode","padEnd","parentId","parentNode","newNode","generateId","findChildrenIds","generateSiblingId","order","getParentId","siblingsIds","sort","oldId","childNode","newInfo","substr","findAllDescendants","forEach","desc","n","charAt","oldDescId","a","b","nodeId","childrenIds","newId","getNodeLevel","split","c","num","concat","commonRoot","tree","buildTreeRec","childVertex","edge","LogicModelActivitiesMatrix","activities","sibling","newActivity","inmediatesIds","getInmediateTree","output","siblings","findActivitiesByOutput","activity","categories","beneficiary","minMain","implementer","other","Stakeholders","list","getBeneficaries","getIntermediaries","getImplementors","getDonors","getOthers","sh","newSh","getStakeholdersByCategory","newMain","previousMain","translator","counts","methodology","Energy","leader","email","team","projectSlice","setCurrentProject"],"mappings":"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","file":"static/js/main.b544b702.chunk.js","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Stack,\n    TextField,\n    Dropdown\n} from \"@fluentui/react\";\n\nexport function StakehoderFormPanel() {\n    const { t } = useTranslation(\"stakeholders-form\");\n\n    return (\n        <Stack tokens={{ childrenGap: 16 }}>\n            <Stack.Item>\n                {t(\"panel-explanation\")}\n                <br /><br />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"stakeholder-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"country-label\")}\n                />\n            </Stack.Item>\n        </Stack>\n    )\n}\n\nexport function LogicModelOutputFormPanel() {\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\n\n    return (\n        <Stack tokens={{ childrenGap: 16 }}>\n            <Stack.Item>\n                {t(\"output-panel-explanation\")}\n                <br /><br />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-what-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-topic-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-verb-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"panel-to-whom-label\")}\n                />\n            </Stack.Item>\n        </Stack>\n    )\n}\n\nexport function LogicModelOutcomeFormPanel() {\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\n\n    return (\n        <Stack tokens={{ childrenGap: 16 }}>\n            <Stack.Item>\n                {t(\"outcome-panel-explanation\")}\n                <br /><br />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"panel-direction-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-what-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <Dropdown\n                    options={[]}\n                    label={t(\"panel-by-whom-label\")}\n                />\n            </Stack.Item>\n\n            <Stack.Item>\n                <TextField\n                    label={t(\"panel-where-label\")}\n                />\n            </Stack.Item>\n        </Stack>\n    )\n}\n","import React from 'react'\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nimport { IColumn, IGroup, DetailsList, SelectionMode } from '@fluentui/react'\n\nimport IContextualHelpContent from 'models/contextualhelp'\nimport { useTranslation } from 'react-i18next';\n\nexport default function ContextualHelpContent(content: IContextualHelpContent) {\n\n    // LOGIC\n    const { definition, example, format, guide, tips } = content;\n    const { t } = useTranslation(\"contextual-help\")\n\n    // Columns\n    const columns: IColumn[] = [\n        {\n            key: 'column1',\n            name: t('collapse-all'),\n            fieldName: 'collapse',\n            minWidth: 100,\n            data: 'string',\n            onRender: (item: string) => item,\n            isMultiline: true,\n        },\n    ]\n\n    // Base Items (without filter)\n    const base = [definition, example, format, guide, tips]\n\n    // Groups (filter those that have empty body)\n    const titles = [\"definition\", \"example\", \"format\", \"guide\", \"tips\"]\n        .filter((t, i) => base[i] !== \"\");\n    // Items (filter those that have empty body)        \n    const items = base.filter(t => t !== \"\");\n\n    let groups = [] as IGroup[];\n    let index = 0;\n\n    for (var title of titles) {\n        groups.push({\n            key: `category-${title}`, name: t(`${title}-label`), startIndex: index++, count: 1\n        })\n    }\n\n    return <Scrollbars autoHide autoHeight autoHeightMin={100} autoHeightMax=\"calc(100vh - 75px)\" >\n        <DetailsList\n            items={items}\n            columns={columns}\n            groups={groups}\n            // onRenderRow={onRenderRow}\n            selectionMode={SelectionMode.none}\n            isHeaderVisible={true}\n        />\n    </Scrollbars>\n}\n","import { Dropdown } from \"@fluentui/react\";\n\nconst DropdownFieldInput = ({ field, form, ...props }: any) => {\n  const handleGetError = (value: string) => {\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\n  };\n\n  return (\n    <Dropdown\n      {...field}\n      {...props}\n      onGetErrorMessage={handleGetError}\n      deferredValidationTime={500}\n    />\n  );\n};\n\nexport default DropdownFieldInput;\n","import { addMonths, DatePicker, IDatePickerStrings, IDatePickerStyles } from \"@fluentui/react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useConst } from \"@fluentui/react-hooks\";\n\nconst DateFieldInput = ({ field, form, ...props }: any) => {\n  const { t } = useTranslation([\n    \"months\",\n    \"shortMonths\",\n    \"days\",\n    \"shortDays\",\n    \"calendar\",\n    \"general-form\"\n  ]);\n\n  const DayPickerStrings: IDatePickerStrings = {\n    months: [\n      t(\"january\"),\n      t(\"february\"),\n      t(\"march\"),\n      t(\"april\"),\n      t(\"may\"),\n      t(\"june\"),\n      t(\"july\"),\n      t(\"august\"),\n      t(\"september\"),\n      t(\"october\"),\n      t(\"november\"),\n      t(\"december\"),\n    ],\n\n    shortMonths: [\n      t(\"shortmonths:jan\"),\n      t(\"shortmonths:feb\"),\n      t(\"shortmonths:mar\"),\n      t(\"shortmonths:apr\"),\n      t(\"shortmonths:may\"),\n      t(\"shortmonths:jun\"),\n      t(\"shortmonths:jul\"),\n      t(\"shortmonths:aug\"),\n      t(\"shortmonths:sep\"),\n      t(\"shortmonths:oct\"),\n      t(\"shortmonths:nov\"),\n      t(\"shortmonths:dec\"),\n    ],\n\n    days: [\n      t(\"days:sunday\"),\n      t(\"days:monday\"),\n      t(\"days:tuesday\"),\n      t(\"days:wednesday\"),\n      t(\"days:thursday\"),\n      t(\"days:friday\"),\n      t(\"days:saturday\"),\n    ],\n\n    shortDays: [\n      t(\"shortdays:sunday\"),\n      t(\"shortdays:monday\"),\n      t(\"shortdays:tuesday\"),\n      t(\"shortdays:wednesday\"),\n      t(\"shortdays:thursday\"),\n      t(\"shortdays:friday\"),\n      t(\"shortdays:saturday\"),\n    ],\n\n    goToToday: t(\"calendar:goToToday\"),\n    prevMonthAriaLabel: t(\"calendar:prevMonthAriaLabel\"),\n    nextMonthAriaLabel: t(\"calendar:nextMonthAriaLabel\"),\n    prevYearAriaLabel: t(\"calendar:prevYearAriaLabel\"),\n    nextYearAriaLabel: t(\"calendar:nextYearAriaLabel\"),\n    closeButtonAriaLabel: t(\"calendar:closeButtonAriaLabel\"),\n  };\n\n  const handleGetError = (value: string) => {\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\n  };\n\n  const minDate = useConst(addMonths(new Date(Date.now()), -1));\n\n\n  const datepickerStyles: Partial<IDatePickerStyles> = {\n    root: {\n      height: 60.4\n    }\n  }\n\n  return (\n    <DatePicker\n      placeholder={t(\"general-form:date-placeholder\")}\n      minDate={minDate}\n      onGetErrorMessage={handleGetError}\n      deferredValidationTime={500}\n      strings={DayPickerStrings}\n      styles={datepickerStyles}\n      {...field}\n      {...props}\n    />\n  );\n};\n\nexport default DateFieldInput;\n","import { FormikConsumer } from 'formik';\n\nconst Debug = () => (\n    <div\n        style={{\n            margin: '3rem 1rem',\n            borderRadius: 4,\n            background: '#f6f8fa',\n            boxShadow: '0 0 1px  #eee inset',\n        }}\n    >\n        <div\n            style={{\n                textTransform: 'uppercase',\n                fontSize: 11,\n                borderTopLeftRadius: 4,\n                borderTopRightRadius: 4,\n                fontWeight: 500,\n                padding: '.5rem',\n                background: '#555',\n                color: '#fff',\n                letterSpacing: '1px',\n            }}\n        >\n            Formik State\n        </div>\n        <FormikConsumer>\n            {({ validationSchema, validate, ...rest }) => (\n                <pre\n                    style={{\n                        fontSize: '.85rem',\n                        padding: '.25rem .5rem',\n                        overflowX: 'scroll',\n                    }}\n                >\n                    {JSON.stringify(rest, null, 2)}\n                </pre>\n            )}\n        </FormikConsumer>\n    </div>\n);\n\nexport default Debug;","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport { useFormikContext, Formik, Field, Form, FormikValues } from 'formik';\nimport { ObjectSchema } from \"yup\";\nimport debounce from 'just-debounce-it';\n\nimport Debug from \"./debugformik\";\n\ntype AutoSaveProps = {\n    debounceMs?: number\n}\n\nconst AutoSave = ({ debounceMs = 3000 }: AutoSaveProps) => {\n    const formik = useFormikContext();\n    const [lastSaved, setLastSaved] = useState(\"\");\n    const debouncedSubmit = useCallback(\n        debounce(\n            () =>\n                formik.submitForm().then(() => setLastSaved(new Date().toISOString())),\n            debounceMs\n        ),\n        [debounceMs, formik.submitForm]\n    );\n\n    useEffect(() => {\n        debouncedSubmit();\n    }, [debouncedSubmit, formik.values]);\n\n    return (\n        <>\n            {!!formik.isSubmitting\n                ? 'saving...'\n                : lastSaved !== \"\"\n                    ? `Last Saved: ${lastSaved}`\n                    : null}\n        </>\n    );\n};\n\ntype setSubmittingFunctionType = {\n    setSubmitting: (isSubmitting: boolean) => void\n}\n\ntype AutoSaveFormikProps = {\n    initialValues: FormikValues\n    onSubmit: (values: FormikValues, { setSubmitting }: setSubmittingFunctionType) => any\n    validationSchema?: ObjectSchema<any>;\n}\n\nconst AutoSaveFormik: FunctionComponent<AutoSaveFormikProps> = (props) => {\n\n    const { initialValues, onSubmit, validationSchema, children } = props;\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={onSubmit}\n            validationSchema={validationSchema}\n        >\n            <Form>\n                <h1>\n                    AutoSavingForm{' '}\n                    <small style={{ color: 'gray', fontSize: 11 }}>\n                        <AutoSave debounceMs={1000} />\n                    </small>\n                </h1>\n                {children}\n\n                <Debug />\n            </Form>\n        </Formik>\n    )\n}\n\nexport default AutoSaveFormik\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { string, object, number, setLocale } from \"yup\";\nimport { Grid, Col, Row } from \"fluentui-react-grid\";\nimport { Field, FormikValues } from \"formik\";\nimport {\n  Stack,\n  ITextFieldProps,\n  IDropdownOption,\n  IStackProps,\n  mergeStyleSets,\n  Separator,\n  PrimaryButton,\n  ISeparatorProps,\n  Label,\n} from \"@fluentui/react\";\n\nimport { selectProject } from \"store/slices/projectslice\";\nimport { ECanadianSector } from \"models/sector\";\nimport { IProjectInfo } from \"models/project\";\nimport DropdownFieldInput from \"components/inputs/dropdown\";\nimport TextFieldInput from \"components/inputs/text\";\nimport DateFieldInput from \"components/inputs/datepicker\";\nimport AutoSaveFormik from \"components/form/autosaveform\";\n\n\ntype formValuesType = FormikValues | {\n  shortName: string;\n  largeName: string;\n  description: string;\n  country: string;\n  impOrganization: string;\n  intOrganization: string;\n  budget: number;\n  budgetPerItems: number;\n  budgetPerAct: number;\n  budgetFinanced: number;\n  budgetSolicited: number;\n  program: string;\n  sector: ECanadianSector;\n  duration: number;\n  donor: string;\n  approvedBudget: number;\n  approvedDate: Date | string;\n  initialDate: Date | string;\n  finalDate: Date | string;\n  contribution: number;\n};\n\nexport default function GeneralForm() {\n  // STYLE\n  const classes = mergeStyleSets({\n    circle: {\n      height: 40,\n      width: 40,\n      borderRadius: \"50%\",\n      minWidth: 40,\n      fontSize: 16,\n    },\n  });\n\n  const multilineTextFieldProps: ITextFieldProps = {\n    required: true,\n    multiline: true,\n    autoAdjustHeight: true,\n    styles: {\n      root: {\n        width: \"100%\",\n        marginTop: 10,\n      },\n      field: {\n        height: 100,\n      },\n    },\n  };\n\n  const headerStackProps: IStackProps = {\n    tokens: { childrenGap: \"m\" },\n    horizontal: true,\n    horizontalAlign: \"space-between\",\n    styles: {\n      root: {\n        paddingRight: 40,\n      },\n    },\n  };\n\n  const separatorProps: ISeparatorProps = {\n    alignContent: \"start\",\n  };\n\n  // LOGIC\n  const { t } = useTranslation([\"general-form\", \"status\"]);\n  const project = useSelector(selectProject);\n  const generalInfo = project.info as IProjectInfo<ECanadianSector>;\n\n  const [initialDate, setInitialDate] = useState(generalInfo.initialDate as Date)\n  const [approvedDate, setApprovedDate] = useState(generalInfo.approvedDate as Date)\n\n  const handleSelectInitialDate = (date: Date) => {\n    setInitialDate(date);\n  }\n\n  const handleSelectApprovedDate = (date: Date) => {\n    setApprovedDate(date);\n  }\n\n  const initValues: formValuesType = {\n    shortName: generalInfo.shortname,\n    largeName: generalInfo.name,\n    description: generalInfo.description,\n    country: generalInfo.country,\n    impOrganization: generalInfo.organization,\n    intOrganization: generalInfo.intermediary,\n    budget: generalInfo.budget,\n    budgetPerItems: generalInfo.budgetItems,\n    budgetPerAct: generalInfo.budgetAct,\n    budgetFinanced: generalInfo.budgetFinanced,\n    budgetSolicited: generalInfo.solicitedBudget,\n    program: generalInfo.program,\n    sector: generalInfo.sector,\n    duration: generalInfo.duration,\n    donor: generalInfo.donor,\n    approvedBudget: generalInfo.approvedBudget,\n    approvedDate: generalInfo.approvedDate,\n    initialDate: generalInfo.initialDate,\n    finalDate: generalInfo.finalDate,\n    contribution: generalInfo.contribution\n  };\n\n  const validationSchema = object().shape({\n    shortName: string().max(20, t(\"shortname-error\")).required(t(\"required\")),\n    largeName: string()\n      .min(20, t(\"largename-error\"))\n      .max(100, t(\"largename-error\"))\n      .required(t(\"required\")),\n    description: string(),\n    country: string().required(t(\"required\")),\n    impOrganization: string().required(t(\"required\")),\n    intOrganization: string().required(t(\"required\")),\n    currency: string().required(t(\"required\")),\n    budget: number().required(t(\"required\")),\n    budgetPerItems: number().required(t(\"required\")),\n    budgetPerAct: number().required(t(\"required\")),\n    budgetFinanced: number().required(t(\"required\")),\n    budgetSolicited: number().required(t(\"required\")),\n    program: string().required(t(\"required\")),\n    sector: string().required(t(\"required\")),\n    duration: number().required(t(\"required\")),\n    donor: string().required(t(\"required\")),\n    approvedBudget: number().required(t(\"required\")),\n    approvedDate: string().required(t(\"required\")),\n    initialDate: string().required(t(\"required\")),\n    finalDate: string().required(t(\"required\")),\n  });\n\n  useEffect(() => {\n    setLocale({\n      // use constant translation keys for messages without values\n      mixed: {\n        default: \"field_invalid\",\n      },\n      // use functions to generate an error object that includes the value from the schema\n      string: {\n        default: \"asi mismo\",\n      },\n      number: {\n        default: \"asimismo\",\n      },\n    });\n  }, [validationSchema]);\n\n  const handleSubmit = (values: formValuesType, { setSubmitting }: any) => {\n    alert(values);\n  };\n\n  const countries: IDropdownOption[] = [\n    { key: \"1\", text: \"Cuba\" },\n    { key: \"2\", text: \"England\" },\n    { key: \"3\", text: \"United States\" },\n    { key: \"4\", text: \"España\" },\n    { key: \"5\", text: \"Canada\" },\n  ];\n\n  return (\n    <AutoSaveFormik\n      initialValues={initValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <>\n        <Grid dir=\"ltr\">\n          {/* Names */}\n          <Row>\n            <TextField\n              required\n              label={t(\"shortname-field\")}\n              name=\"shortName\"\n              component={TextFieldInput}\n              sizeLg={3}\n            />\n\n            <TextField\n              required\n              label={t(\"largename-field\")}\n              name=\"largeName\"\n              component={TextFieldInput}\n              sizeLg={9}\n            />\n          </Row>\n          {/* Description */}\n          <Row>\n            <TextField\n              label={t(\"description-field\")}\n              name=\"description\"\n              component={TextFieldInput}\n              {...multilineTextFieldProps}\n              sizeLg={12}\n\n            />\n          </Row>\n          <br />\n\n          <Row>\n            {/* 1. Project */}\n            <Col sizeSm={12} sizeMd={8} sizeLg={8}>\n              <Row>\n                <Separator {...separatorProps}>\n                  <PrimaryButton text=\"1\" className={classes.circle} />\n                </Separator>\n              </Row>\n\n              <Stack {...headerStackProps}>\n                <Stack.Item>\n                  <Label>{t(\"status-field\")}</Label>\n                  {t(`status:${generalInfo.status}`)}\n                </Stack.Item>\n                <Stack.Item>\n                  <Label>{t(\"wikicode-field\")}</Label>\n                  {generalInfo.wikicode}\n                </Stack.Item>\n              </Stack>\n              <br />\n\n              <Row>\n                <StandardField\n                  label={t(\"country-field\")}\n                  name=\"country\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"imporganization-field\")}\n                  name=\"impOrganization\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"intorganization-field\")}\n                  name=\"intOrganization\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n              </Row>\n\n              <Row>\n                <StandardField\n                  label={t(\"currency-field\")}\n                  name=\"currency\"\n                  component={DropdownFieldInput}\n                />\n                <StandardField\n                  label={t(\"program-field\")}\n                  name=\"program\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"sector-field\")}\n                  name=\"sector\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                />\n                <StandardField\n                  label={t(\"duration-field\")}\n                  name=\"duration\"\n                  component={TextFieldInput}\n                  suffix={t(\"duration-suffix\")}\n                />\n              </Row>\n\n              <Row>\n\n                <StandardField\n                  label={t(\"budget-field\")}\n                  name=\"budget\"\n                  component={TextFieldInput}\n                  prefix={t(\"budget-prefix\")}\n                />\n                <StandardField\n                  label={t(\"calculated-field\")}\n                  name=\"budgetPerItems\"\n                  component={TextFieldInput}\n                  prefix={t(\"budgetitems-prefix\")}\n                  readOnly\n                />\n                <StandardField\n                  label={t(\"calculated-field\")}\n                  name=\"budgetPerAct\"\n                  component={TextFieldInput}\n                  prefix={t(\"budgetact-prefix\")}\n                  readOnly\n                />\n                <StandardField\n                  label={t(\"financed-field\")}\n                  name=\"budgetFinanced\"\n                  component={TextFieldInput}\n                />\n              </Row>\n\n\n            </Col>\n\n            {/* 2. Donor */}\n            <Col sizeSm={12} sizeMd={4} sizeLg={4}>\n              <Row>\n                <Separator {...separatorProps}>\n                  <PrimaryButton text=\"2\" className={classes.circle} />\n                </Separator>\n              </Row>\n\n              <Stack {...headerStackProps}>\n                <Stack.Item>\n                  <Label>{t(\"donorcode-field\")}</Label>\n                  {generalInfo.donorcode}\n                </Stack.Item>\n              </Stack>\n              <br />\n\n              <Row>\n                <StandardField\n                  label={t(\"donor-field\")}\n                  name=\"donor\"\n                  component={DropdownFieldInput}\n                  options={countries}\n                  sizeLg={6}\n                />\n                <StandardField\n                  label={t(\"approvedate-field\")}\n                  name=\"approveDate\"\n                  component={DateFieldInput}\n                  onSelectDate={handleSelectApprovedDate}\n                  sizeLg={6}\n                />\n              </Row>\n\n              <Row>\n                <StandardField\n                  label={t(\"initialdate-field\")}\n                  name=\"initialDate\"\n                  component={DateFieldInput}\n                  minDate={approvedDate}\n                  onSelectDate={handleSelectInitialDate}\n                  sizeLg={6}\n                />\n                <StandardField\n                  label={t(\"finaldate-field\")}\n                  name=\"finalDate\"\n                  component={DateFieldInput}\n                  minDate={initialDate}\n                  sizeLg={6}\n                />\n              </Row>\n\n              <Row>\n                <StandardField\n                  label={t(\"approvebudget-field\")}\n                  name=\"approvedBudget\"\n                  component={TextFieldInput}\n                  options={countries}\n                  suffix={generalInfo.currency}\n                  sizeLg={6}\n                />\n                <StandardField\n                  label={t(\"contribution-field\")}\n                  name=\"contribution\"\n                  component={TextFieldInput}\n                  sizeLg={6}\n                />\n              </Row>\n            </Col>\n          </Row>\n        </Grid>\n      </>\n    </AutoSaveFormik>\n  );\n}\n\nconst StandardField = (props: any) => {\n  return (\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\n      <Field {...props} />\n    </Col>\n  );\n};\n\nconst TextField = ({ grow, ...props }: any) => {\n  return (\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\n      <Field {...props} />\n    </Col>\n  );\n};\n\nexport function generalFormViewMode() {\n  return <div>Form Basics</div>;\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  IColumn,\n  IconButton,\n  useTheme,\n  TooltipHost,\n  IButtonStyles,\n  FontWeights,\n  IDropdownOption,\n  IDropdownStyles,\n  Stack,\n  Panel,\n  PrimaryButton,\n  DefaultButton,\n  SelectionMode,\n  DetailsList,\n} from \"@fluentui/react\";\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport { selectProject } from \"store/slices/projectslice\";\nimport Stakeholders, { IStakholderInfo } from \"models/canadian/stakeholders\";\nimport { StakehoderFormPanel } from \"components/sidepanel/formcontents\"\n\nexport default function StakeholdersForm() {\n  // LOGIC\n\n  // State\n  const { t } = useTranslation(\"stakeholders-form\");\n\n  const project = useSelector(selectProject);\n  const currentForm = project.forms.find(form => form.name === \"stakeholders\")!;\n  const stakeholdersModel = currentForm.structure as Stakeholders;\n\n  const initialItems = stakeholdersModel.buidStakeholdersList();\n  let groups = stakeholdersModel.buildStakeholdersGroups(t)\n\n  const [items, setItems] = useState(initialItems);\n  const [stakeholders, setStakeholders] = useState(stakeholdersModel);\n\n  const [panelIsOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false);\n\n  const columns: IColumn[] = [\n    {\n      key: 'column1',\n      name: t('roll-field'),\n      fieldName: 'roll',\n      minWidth: 100,\n      maxWidth: 100,\n      data: 'string',\n      onRender: (item: IStakholderInfo) => mainStakeholderRender(item),\n    },\n    {\n      key: 'column2',\n      name: t('name-field'),\n      styles: { root: { fontSize: 40 } },\n      ariaLabel: 'Stakehoder',\n      fieldName: 'name',\n      minWidth: 500,\n      isResizable: true,\n      data: 'string',\n      isPadded: true,\n      onRender: (item: IStakholderInfo) => fieldRender(item)\n    },\n    {\n      key: 'column3',\n      name: 'Add/Remove',\n      fieldName: 'operators',\n      minWidth: 70,\n      data: 'string',\n      isPadded: true,\n      // isFiltered: true,\n      onRender: (item: IStakholderInfo) => operatorsRender(item),\n    },\n  ]\n\n  // Handlers\n  const handleAddStakeholder = (item: IStakholderInfo) => {\n    setStakeholders(stakeholders.addStakeholder(item.orderInGroup, item.category));\n    setItems(stakeholders.buidStakeholdersList());\n    groups = stakeholdersModel.buildStakeholdersGroups(t);\n  }\n\n  const handleDeleteStakeholder = (item: IStakholderInfo) => {\n    setStakeholders(stakeholders.deleteStakeholder(item.id));\n    setItems(stakeholders.buidStakeholdersList());\n    groups = stakeholdersModel.buildStakeholdersGroups(t);\n  }\n\n  const handleChangeMainStakeholder = (item: IStakholderInfo) => {\n    if (!item.category.hasNoMain) {\n      console.log(\"start\")\n      setStakeholders(stakeholders.setMainStakeholder(item.id));\n      console.log(\"end\")\n\n      setItems(stakeholders.buidStakeholdersList());\n      groups = stakeholdersModel.buildStakeholdersGroups(t);\n    }\n  }\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const fieldRender = (item: IStakholderInfo) => {\n    const options: IDropdownOption[] = [\n      { key: '0', text: '--None--' },\n      { key: '1', text: 'Stakeholder1' },\n      { key: '2', text: 'Stakeholder2' },\n      { key: '3', text: 'Stakeholder3' },\n      { key: '4', text: 'Stakeholder4' },\n      { key: '5', text: 'Stakeholder5' },\n      { key: '6', text: 'Stakeholder6' },\n      { key: '7', text: 'Stakeholder7' },\n      { key: '8', text: 'Stakeholder8' },\n      { key: '9', text: 'Stakeholder9' },\n    ];\n\n    const dropdownStyles: Partial<IDropdownStyles> = {\n      root: {\n        width: \"50%\",\n      },\n      dropdown: {\n        minWidth: 300,\n      },\n      title: {\n        borderRadius: \"0 0 2px 2px\",\n        border: `1px solid ${palette.neutralLighter}`,\n        selectors: {\n          \"::after\": {\n            border: `1px solid ${palette.red}`,\n          },\n        },\n      },\n    }\n\n    const commandStyles: Partial<IButtonStyles> = {\n      root: {\n        alignSelf: \"center\"\n      },\n      rootHovered: {\n        backgroundColor: palette.themeLighter,\n      },\n      icon: {\n        fontSize: 13,\n        color: palette.black,\n      },\n    };\n\n    return (\n      <Stack horizontal styles={{ root: { minWidth: 800 } }}>\n        <Dropdown\n          placeholder={t(\"select-stakeholder-placeholder\")}\n          defaultSelectedKey={item.id.toString()}\n          options={options}\n          styles={dropdownStyles}\n        />\n\n        <TooltipHost content={t(`tooltip-add-stakeholder-DB`)}>\n          <IconButton\n            iconProps={{ iconName: \"AddFriend\" }}\n            styles={commandStyles}\n            onClick={openPanel}\n          />\n        </TooltipHost>\n      </Stack>\n    )\n  }\n\n  const mainStakeholderRender = (item: IStakholderInfo) => {\n    const bossIconStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 15,\n        fontWeight: FontWeights.bold,\n        color: palette.black,\n      },\n    };\n\n    const iconStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 10,\n        color: palette.neutralSecondary,\n      },\n    };\n\n    return item.main ?\n      <TooltipHost content={t(`tooltip-main-stakeholder-${item.category.name}`)}>\n        <IconButton\n          iconProps={{ iconName: \"PartyLeader\" }}\n          styles={bossIconStyles}\n        />\n      </TooltipHost> :\n      <TooltipHost content={t(`tooltip-change-main-stakeholder-${item.category.name}`)}>\n        <IconButton\n          iconProps={{ iconName: \"Contact\" }}\n          styles={iconStyles}\n          onClick={() => handleChangeMainStakeholder(item)}\n        />\n      </TooltipHost>\n  }\n\n  const operatorsRender = (item: IStakholderInfo) => {\n    const commandStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 13,\n        color: palette.black,\n      },\n    };\n\n    return <React.Fragment>\n      <TooltipHost content={t(\"tooltip-add-stakeholder\")}>\n        <IconButton\n          iconProps={{ iconName: \"Add\" }}\n          styles={commandStyles}\n          onClick={() => handleAddStakeholder(item)}\n        />\n      </TooltipHost>\n      {item.hasSiblings &&\n        <TooltipHost content={t(\"tooltip-delete-stakeholder\")}>\n          <IconButton\n            iconProps={{ iconName: \"Cancel\" }}\n            styles={commandStyles}\n            onClick={() => handleDeleteStakeholder(item)}\n          />\n        </TooltipHost>\n      }\n    </React.Fragment>\n  }\n\n  const onRenderFooterContent = React.useCallback(\n    () => (\n      <div>\n        <PrimaryButton onClick={dismissPanel} styles={{ root: { marginRight: 8 } }}>\n          Save\n        </PrimaryButton>\n        <DefaultButton onClick={dismissPanel}>Cancel</DefaultButton>\n      </div>\n    ),\n    [dismissPanel],\n  );\n\n  return <React.Fragment>\n\n    <DetailsList\n      items={items}\n      columns={columns}\n      groups={groups}\n      selectionMode={SelectionMode.none}\n      isHeaderVisible={true}\n    />\n\n    <Panel\n      isOpen={panelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"panel-header\")}\n      onDismiss={dismissPanel}\n      isFooterAtBottom={true}\n      onRenderFooterContent={onRenderFooterContent}\n    >\n      <StakehoderFormPanel />\n    </Panel>\n\n  </React.Fragment>\n}\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { toNumber } from 'lodash';\nimport {\n  FontSizes,\n  IconButton,\n  IColumn,\n  IDetailsListProps,\n  IDetailsRowStyles,\n  DetailsRow,\n  useTheme,\n  Text,\n  IButtonStyles,\n  ITextFieldProps,\n  TextField,\n  TooltipHost,\n  ITextStyles,\n  SelectionMode,\n  DetailsList,\n  Panel\n} from '@fluentui/react';\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport { selectProject } from 'store/slices/projectslice';\nimport ActivitiesMatrixGraph, { IActivityInfo } from 'models/canadian/actvitiesmatrix';\nimport ContextualHelpContent from \"components/help/contextualhelp\"\n\nexport default function ActivitiesMatrixForm() {\n\n  // LOGIC\n  // State\n  const project = useSelector(selectProject);\n  const currentForm = project.forms.find(form => form.name === \"logicModelActivities\")!;\n  const logicModelActivitiesMatrix = currentForm.structure as ActivitiesMatrixGraph;\n\n  const initialItems = logicModelActivitiesMatrix.buidOutputsActivityList();\n\n  const [items, setItems] = useState(initialItems);\n  const [activitiesMatrix, setActivitiesMatrix] = useState(logicModelActivitiesMatrix);\n\n  const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\n\n  const columns: IColumn[] = [\n    {\n      key: 'column1',\n      name: 'Field',\n      styles: { root: { textAlign: \"right\", fontSize: 40 } },\n      ariaLabel: 'Outcomes, Outputs and Activities',\n      fieldName: 'field',\n      minWidth: 10,\n      maxWidth: 200,\n      data: 'string',\n      onRender: (item: IActivityInfo) => fieldRender(item)\n    },\n    {\n      key: 'column2',\n      name: 'Code',\n      fieldName: 'code',\n      ariaLabel: \"Code\",\n      minWidth: 0,\n      maxWidth: 350,\n      isRowHeader: true,\n      data: 'number',\n      onRender: (item: IActivityInfo) => codeRender(item),\n    },\n    {\n      key: 'column3',\n      name: 'Description',\n      fieldName: 'description',\n      minWidth: 70,\n      data: 'string',\n      isResizable: true,\n      isPadded: true,\n      isMultiline: true,\n      // isFiltered: true,\n      onRender: (item: IActivityInfo) => descriptionRender(item),\n    },\n    {\n      key: 'column4',\n      name: '',\n      fieldName: 'operators',\n      minWidth: 100,\n      data: 'string',\n      isPadded: true,\n      onRender: (item: IActivityInfo) => operatorsRender(item),\n    },\n  ]\n\n  // Handlers\n  const handleAddActivity = (itemId: string) => {\n    const outputId = itemId.slice(0, 4);\n    const activityId = itemId[4];\n\n    setActivitiesMatrix(activitiesMatrix.addActivityToOutput(outputId, activityId));\n    setItems(activitiesMatrix.buidOutputsActivityList());\n  }\n\n  const handleDeleteActivity = (itemId: string) => {\n    const outputId = itemId.slice(0, 4);\n    const activityId = (toNumber(itemId[4]) + 1).toString();\n\n    setActivitiesMatrix(activitiesMatrix.deleteActivity(outputId, activityId));\n    setItems(activitiesMatrix.buidOutputsActivityList());\n  }\n\n  // Panels\n  const [helpPanelIsOpen, { setTrue: openHelpPanel, setFalse: dismissHelpPanel }] = useBoolean(false);\n\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const onRenderRow: IDetailsListProps['onRenderRow'] = props => {\n    const customStyles: Partial<IDetailsRowStyles> = {};\n\n    if (props) {\n      const { item } = props;\n      switch (item.level) {\n        case 0:\n          customStyles.root = {\n            backgroundColor: palette.themeLighter,\n            fontSize: FontSizes.medium,\n            \":hover\": {\n              backgroundColor: palette.themeLighter,\n            }\n          }\n          break;\n        case 1:\n          customStyles.root = {\n            backgroundColor: palette.themeLighterAlt,\n            \":hover\": {\n              backgroundColor: palette.themeLighterAlt,\n            }\n          }\n          break;\n        case 2:\n          customStyles.root = {\n            \":hover\": {\n              backgroundColor: palette.white,\n            }\n          }\n          break;\n      }\n\n      return <DetailsRow {...props} styles={customStyles} />;\n    }\n    return null;\n  };\n\n  const fieldRender = (item: IActivityInfo) => {\n    const textStyles: ITextStyles = {\n      root: {\n        fontWeight: 600\n      }\n    }\n    const variant = item.level === 0 ? \"mediumPlus\" : item.level === 1 ? \"medium\" : \"small\";\n\n    return (\n      <div style={{ textAlign: \"end\", color: \"black\" }}>\n        <Text variant={variant} styles={textStyles}>{t(item.name)}</Text>\n      </div>\n    )\n  }\n\n  const codeRender = (item: IActivityInfo) => {\n    return item.id\n  }\n\n  const descriptionRender = (item: IActivityInfo) => {\n\n    const textFieldProps: ITextFieldProps = {\n      rows: 1,\n      multiline: true,\n      resizable: false,\n      defaultValue: item.description,\n      styles: {\n        root: {\n          minWidth: 200,\n        },\n        fieldGroup: {\n          borderRadius: \"0 0 2px 2px\",\n          border: `1px solid ${palette.neutralLighter}`,\n          selectors: {\n            \":hover\": {\n              border: `1px solid ${palette.neutralTertiary}`,\n\n            },\n          },\n        },\n      },\n    }\n\n    let html;\n    switch (item.level) {\n      case 2:\n        html = <TextField {...textFieldProps}>\n          {item.description}\n        </TextField>\n        break;\n      default:\n        html = <span>{item.description}</span>\n        break;\n    }\n\n    return html\n  }\n\n  const operatorsRender = (item: IActivityInfo) => {\n    const commandStyles: Partial<IButtonStyles> = {\n      root: {\n        height: 25,\n      },\n      rootHovered: {\n        backgroundColor: palette.neutralLighter,\n      },\n      icon: {\n        fontSize: 13,\n        color: palette.black,\n      },\n    };\n\n    return (item.level === 2 &&\n      <React.Fragment>\n        <TooltipHost content={t(\"contextual-help:tooltip-contextual-help\")}>\n          <IconButton\n            iconProps={{ iconName: \"Help\" }}\n            styles={commandStyles}\n            onClick={() => openHelpPanel()}\n          />\n        </TooltipHost>\n        <TooltipHost content={t(\"tooltip-add-act\")}>\n          <IconButton\n            iconProps={{ iconName: \"Add\" }}\n            styles={commandStyles}\n            onClick={() => handleAddActivity(item.id)}\n          />\n        </TooltipHost>\n        {item.hasSiblings &&\n          <TooltipHost content={t(\"tooltip-delete-act\")}>\n            <IconButton\n              iconProps={{ iconName: \"Cancel\" }}\n              styles={commandStyles}\n              onClick={() => handleDeleteActivity(item.id)}\n            />\n          </TooltipHost>\n        }\n      </React.Fragment>\n    )\n  }\n\n  return <React.Fragment>\n    <DetailsList\n      items={items}\n      columns={columns}\n      onRenderRow={onRenderRow}\n      selectionMode={SelectionMode.none}\n      isHeaderVisible={false}\n    />\n    <Panel\n      isOpen={helpPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"contextual-help:help-panel-header\")}\n      onDismiss={dismissHelpPanel}\n      isFooterAtBottom={true}\n    >\n      <ContextualHelpContent\n        definition=\"Def Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        example=\"\"\n        format=\"Cosi se me face le buc torbellini de sua me. \"\n        guide=\"Guide Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        tips=\"Tips Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\n    </Panel>\n  </React.Fragment>\n\n}\n\n\n\n\n","import React from \"react\";\n\nexport default function PerformanceMeasureForm() {\n  return <div>Performance Measure Form</div>;\n}\n","import React from \"react\";\n\nexport default function RisksForm() {\n  return <div>Risks Form</div>;\n}\n","import React from \"react\";\n\nexport default function BudgetForm() {\n  return <div>Budget Form</div>;\n}\n","import React from \"react\";\n\nexport default function ReportsForm() {\n  return <div>Reports Form</div>;\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Field } from \"formik\";\nimport {\n    Stack,\n    IStackItemProps,\n    IStackProps,\n    IButtonStyles,\n    Icon,\n    IIconProps,\n    ITextStyles,\n    Text,\n    TooltipHost,\n    IconButton,\n    useTheme,\n    ITextFieldProps,\n} from '@fluentui/react';\n\nimport { selectWorkplaceConfig, setConfiguration } from \"store/slices/workplaceslice\";\nimport { Tree } from \"models/tree\";\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\nimport TextFieldInput from \"components/inputs/text\";\n\ntype LogicTextFieldInputProps = {\n    nodeTree: Tree<LogicmodelVertex>,\n    handleAddChild: (id: string) => void,\n    handleDelete: (id: string) => void,\n    hanldeOpenOutputPanel: () => void,\n    hanldeOpenOutcomePanel: () => void,\n    handleOutcomeHelpPanel: () => void\n    handleOutputHelpPanel: () => void\n}\n\nexport default function LogicTextFieldInput(props: LogicTextFieldInputProps) {\n\n    // LOGIC\n    const {\n        nodeTree,\n        handleAddChild,\n        handleDelete,\n        hanldeOpenOutputPanel,\n        hanldeOpenOutcomePanel,\n        handleOutcomeHelpPanel,\n        handleOutputHelpPanel\n    } = props;\n    const { node, children } = nodeTree;\n\n    // STYLES\n    const { palette } = useTheme();\n\n    const rootStackItemProps: IStackItemProps = {\n        grow: 1,\n        styles: {\n            root: {\n                textAlign: \"center\",\n                marginTop: \"0px !important\"\n            },\n        },\n    };\n\n    const childrenStackProps: IStackProps = {\n        horizontal: true,\n        horizontalAlign: \"space-between\",\n        tokens: { childrenGap: 20 }\n    };\n\n    const inputTextFieldProps: ITextFieldProps = {\n        rows: 3,\n        multiline: true,\n        resizable: false,\n        styles: {\n            root: {\n                minWidth: 200,\n            },\n            fieldGroup: {\n                borderRadius: \"0 0 2px 2px\",\n                border: `1px solid ${palette.neutralQuaternary}`,\n                borderTop: `1px solid ${palette.neutralLighter}`,\n                selectors: {\n                    \":hover\": {\n                        border: `1px solid ${palette.neutralTertiary}`,\n                    },\n                },\n            },\n        },\n    };\n\n    const arrowProps: IIconProps = {\n        iconName: \"SortUp\",\n        ariaLabel: \"Belongs to\",\n        styles: {\n            root: {\n                margin: \"8px auto\",\n            },\n        },\n    };\n\n    return (\n        <React.Fragment>\n            <Stack.Item {...rootStackItemProps}>\n                {node.level > 0 && <Icon {...arrowProps} />}\n                <LogicTextFieldHeader\n                    nodeTree={nodeTree}\n                    handleAddChild={handleAddChild}\n                    handleDelete={handleDelete}\n                    hanldeOpenOutputPanel={hanldeOpenOutputPanel}\n                    hanldeOpenOutcomePanel={hanldeOpenOutcomePanel}\n                    handleOutcomeHelpPanel={handleOutcomeHelpPanel}\n                    handleOutputHelpPanel={handleOutputHelpPanel}\n                />\n                <Field\n                    name={`textFiled${node.id}`}\n                    component={TextFieldInput}\n                    {...inputTextFieldProps}\n                />\n            </Stack.Item>\n\n            <Stack.Item {...rootStackItemProps}>\n                <Stack {...childrenStackProps} >\n                    {children && children.map(child =>\n                        <Stack.Item key={child.node.id} grow>\n                            <LogicTextFieldInput\n                                nodeTree={child}\n                                handleAddChild={handleAddChild}\n                                handleDelete={handleDelete}\n                                hanldeOpenOutputPanel={hanldeOpenOutputPanel}\n                                hanldeOpenOutcomePanel={hanldeOpenOutcomePanel}\n                                handleOutcomeHelpPanel={handleOutcomeHelpPanel}\n                                handleOutputHelpPanel={handleOutputHelpPanel}\n                            />\n                        </Stack.Item>\n                    )}\n                </Stack>\n            </Stack.Item>\n        </React.Fragment>\n    )\n}\n\nfunction LogicTextFieldHeader(props: LogicTextFieldInputProps) {\n\n    // LOGIC\n    const { nodeTree,\n        handleAddChild,\n        handleDelete,\n        hanldeOpenOutputPanel,\n        hanldeOpenOutcomePanel,\n        handleOutcomeHelpPanel,\n        handleOutputHelpPanel } = props;\n    const { node, children } = nodeTree;\n\n    const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\n    const dispatch = useDispatch();\n    const { tabsSchema, latestMenuTab } = useSelector(selectWorkplaceConfig);\n\n    // tooltips and buttons\n    const tooltipContent = node.level === 0 ?\n        \"tooltip-add-inmediate-outcome\" : node.level === 1 ?\n            \"tooltip-add-intermediate-outcome\" : \"tooltip-add-output\";\n\n    const canAdd = node.level !== 3;\n    const canDelete = children.length === 0;\n    const isAnOputut = node.level === 3;\n\n    const handleRedirectToActivity = (id: string) => {\n        const formtabKey = tabsSchema.findChildByName(\"activitiesmatrix\").key;\n        const renderPage = tabsSchema.findChildByKey(latestMenuTab, formtabKey).render;\n        dispatch(setConfiguration({ key: latestMenuTab, tab: formtabKey, page: renderPage }));\n    }\n\n    // STYLES\n    const { palette } = useTheme();\n\n    const titleStyles: ITextStyles = {\n        root: {\n            padding: 4,\n            textAlign: \"left\",\n            border: `1px solid ${palette.neutralQuaternary}`,\n            borderBottom: \"none\",\n            borderRadius: \"2px 2px 0 0\",\n            backgroundColor: palette.neutralLighter,\n        },\n    };\n\n    const commandStyles: Partial<IButtonStyles> = {\n        root: {\n            height: 25,\n        },\n        rootHovered: {\n            backgroundColor: palette.neutralLight,\n        },\n        icon: {\n            fontSize: 13,\n            color: palette.black,\n        },\n    };\n\n    return <Stack\n        horizontal\n        styles={titleStyles}\n        horizontalAlign=\"space-between\"\n    >\n        <Stack.Item>\n            <Text variant=\"medium\">{node.id}</Text>\n        </Stack.Item>\n        <Stack.Item>\n\n            {isAnOputut ?\n                <>\n                    <TooltipHost content={t(\"tooltip-see-activities\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"SnapToGrid\" }}\n                            styles={commandStyles}\n                            onClick={() => handleRedirectToActivity(node.id)}\n                        />\n                    </TooltipHost>\n                    <TooltipHost content={t(\"tooltip-sintactic-struct\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"ShowResults\" }}\n                            styles={commandStyles}\n                            onClick={() => hanldeOpenOutputPanel()}\n                        />\n                    </TooltipHost>\n                    <TooltipHost content={t(\"tooltip-contextual-help\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"Help\" }}\n                            styles={commandStyles}\n                            onClick={() => handleOutputHelpPanel()}\n                        />\n                    </TooltipHost>\n                </> : <>\n                    <TooltipHost content={t(\"tooltip-sintactic-struct\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"ShowResults\" }}\n                            styles={commandStyles}\n                            onClick={() => hanldeOpenOutcomePanel()}\n                        />\n                    </TooltipHost>\n                    <TooltipHost content={t(\"contextual-help:tooltip-contextual-help\")}>\n                        <IconButton\n                            iconProps={{ iconName: \"Help\" }}\n                            styles={commandStyles}\n                            onClick={() => handleOutcomeHelpPanel()}\n                        />\n                    </TooltipHost></>\n            }\n            {canAdd &&\n                <TooltipHost content={t(tooltipContent)}>\n                    <IconButton\n                        iconProps={{ iconName: \"Add\" }}\n                        styles={commandStyles}\n                        onClick={() => handleAddChild(node.id)}\n                    />\n                </TooltipHost>\n            }\n            {canDelete &&\n                <TooltipHost content={t(\"tooltip-delete\")}>\n                    <IconButton\n                        iconProps={{ iconName: \"Cancel\" }}\n                        styles={commandStyles}\n                        onClick={() => handleDelete(node.id)}\n                    />\n                </TooltipHost>\n            }\n        </Stack.Item>\n    </Stack>\n}\n\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { string, object } from \"yup\";\nimport { ObjectShape } from \"yup/lib/object\";\nimport { Formik, Form } from \"formik\";\nimport {\n  Stack,\n  Text,\n  IStackProps,\n  ITextStyles,\n  PrimaryButton,\n  DefaultButton,\n  Panel,\n  TooltipHost,\n} from \"@fluentui/react\";\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport LogicTextFieldInput from \"components/inputs/logictext\";\nimport LogicmodelGraph from \"models/canadian/logicmodel\";\nimport { selectProject } from \"store/slices/projectslice\";\nimport { LogicModelOutcomeFormPanel, LogicModelOutputFormPanel } from \"components/sidepanel/formcontents\"\nimport ContextualHelpContent from \"components/help/contextualhelp\"\n\ntype formValuesType = {\n  [key: string]: string;\n}\n\nexport default function LogicModelForm() {\n\n  // LOGIC\n  const project = useSelector(selectProject);\n  const currentForm = project.forms.find(form => form.name === \"logicModelActivities\")!;\n  const logicModelGraph = currentForm.structure as LogicmodelGraph;\n\n  const [graph, setGraph] = useState(logicModelGraph)\n  const [treeToRender, setTreeToRender] = useState(graph.buildTree())\n\n  const handleAddNode = (siblingId: string) => {\n    setGraph(graph.addNode(siblingId));\n    setTreeToRender(graph.buildTree());\n  }\n\n  const handleDeleteNode = (id: string) => {\n    setGraph(graph.deleteNode(id));\n    setTreeToRender(graph.buildTree());\n  }\n\n  // Panels\n  const [outputPanelIsOpen, { setTrue: openOutputPanel, setFalse: dismissOutputPanel }] = useBoolean(false);\n  const [outcomePanelIsOpen, { setTrue: openOutcomePanel, setFalse: dismissOutcomePanel }] = useBoolean(false);\n  const [outcomeHelpPanelIsOpen, { setTrue: openOutcomeHelpPanel, setFalse: dismissOutcomeHelpPanel }] = useBoolean(false);\n  const [outputHelpPanelIsOpen, { setTrue: openOutputHelpPanel, setFalse: dismissOutputHelpPanel }] = useBoolean(false);\n\n  // FORMIK\n  var initialValues: formValuesType = { \"verionMode\": \"\" }; // Take init value from DB\n  for (let v of graph.vertex) {\n    initialValues[`textFiled${v.id}`] = v.text;\n  }\n\n  var shape: ObjectShape = { \"verionMode\": string() };\n  for (let v of graph.vertex) {\n    shape[`textFiled${v.id}`] = string();\n  }\n\n  const validationSchema = object().shape(shape);\n\n  return <React.Fragment>\n    <Formik\n      initialValues={initialValues!}\n      validationSchema={validationSchema}\n      onSubmit={(values) => alert(values)}\n    >\n      <Form>\n        <Stack horizontal tokens={{ childrenGap: 20 }}>\n          {/* Labels */}\n          <Stack.Item>\n            <LogicmodelLabels />\n          </Stack.Item>\n\n          {/* Inputs */}\n          <Stack.Item style={{ width: \"100%\" }}>\n            <Stack tokens={{ childrenGap: 10 }} >\n              <LogicTextFieldInput\n                nodeTree={treeToRender}\n                handleAddChild={handleAddNode}\n                handleDelete={handleDeleteNode}\n                hanldeOpenOutputPanel={openOutputPanel}\n                hanldeOpenOutcomePanel={openOutcomePanel}\n                handleOutcomeHelpPanel={openOutcomeHelpPanel}\n                handleOutputHelpPanel={openOutputHelpPanel}\n              />\n            </Stack>\n          </Stack.Item>\n        </Stack>\n      </Form>\n    </Formik>\n\n    <PanelsRender\n      outcomePanelIsOpen={outcomePanelIsOpen}\n      dismissOutcomePanel={dismissOutcomePanel}\n      outputPanelIsOpen={outputPanelIsOpen}\n      dismissOutputPanel={dismissOutputPanel}\n      outcomeHelpPanelIsOpen={outcomeHelpPanelIsOpen}\n      dismissOutcomeHelpPanel={dismissOutcomeHelpPanel}\n      outputHelpPanelIsOpen={outputHelpPanelIsOpen}\n      dismissOutputHelpPanel={dismissOutputHelpPanel}\n    />\n  </React.Fragment>\n}\n\ntype PanelsRenderPros = {\n  outcomePanelIsOpen: boolean,\n  dismissOutcomePanel: () => void,\n  outputPanelIsOpen: boolean,\n  dismissOutputPanel: () => void,\n  outcomeHelpPanelIsOpen: boolean,\n  dismissOutcomeHelpPanel: () => void,\n  outputHelpPanelIsOpen: boolean,\n  dismissOutputHelpPanel: () => void,\n}\n\nfunction PanelsRender(props: PanelsRenderPros) {\n\n  // LOGIC\n  const { outcomePanelIsOpen,\n    dismissOutcomePanel,\n    outputPanelIsOpen,\n    dismissOutputPanel,\n    outcomeHelpPanelIsOpen,\n    dismissOutcomeHelpPanel,\n    outputHelpPanelIsOpen,\n    dismissOutputHelpPanel,\n  } = props;\n  const { t } = useTranslation([\"logicmodel-activitymatrix-form\", \"contextual-help\"]);\n\n\n  const handleDismissPanel = () => {\n    dismissOutputPanel();\n    dismissOutcomePanel();\n  }\n\n  // RENDER\n  const onRenderFooterContent = React.useCallback(\n    () => (\n      <div>\n        <TooltipHost content={t(\"tooltip-panel-concat\")}>\n          <PrimaryButton onClick={handleDismissPanel} styles={{ root: { marginRight: 8 } }}>\n            {t(\"concat-button-label\")}\n          </PrimaryButton>\n        </TooltipHost>\n        <TooltipHost content={t(\"tooltip-panel-save\")}>\n          <DefaultButton onClick={handleDismissPanel} styles={{ root: { marginRight: 8 } }}>\n            {t(\"sidepanel:save\")}\n          </DefaultButton>\n        </TooltipHost>\n      </div>\n    ),\n    [handleDismissPanel],\n  );\n\n  return <React.Fragment>\n    {/* Outcome Panel */}\n    <Panel\n      isOpen={outcomePanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"outcome-panel-header\")}\n      onDismiss={dismissOutcomePanel}\n      isFooterAtBottom={true}\n      onRenderFooterContent={onRenderFooterContent}\n    >\n      <LogicModelOutcomeFormPanel />\n    </Panel>\n\n    {/* Output Panel */}\n    <Panel\n      isOpen={outputPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"output-panel-header\")}\n      onDismiss={dismissOutputPanel}\n      isFooterAtBottom={true}\n      onRenderFooterContent={onRenderFooterContent}\n    >\n      <LogicModelOutputFormPanel />\n    </Panel>\n\n    {/* Outcome Help Panel */}\n    <Panel\n      isOpen={outcomeHelpPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"contextual-help:help-panel-header\")}\n      onDismiss={dismissOutcomeHelpPanel}\n      isFooterAtBottom={true}\n    >\n      <ContextualHelpContent\n        definition=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        example=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        format=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        guide=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        tips=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\n    </Panel>\n\n    {/* Output Help Panel */}\n    <Panel\n      isOpen={outputHelpPanelIsOpen}\n      closeButtonAriaLabel=\"Close\"\n      isHiddenOnDismiss={true}\n      headerText={t(\"contextual-help:help-panel-header\")}\n      onDismiss={dismissOutputHelpPanel}\n      isFooterAtBottom={true}\n    >\n      <ContextualHelpContent\n        definition=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        example=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        format=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        guide=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \"\n        tips=\"Lorem ipsum dolre mas seit cause frieto mei suilka fraterni de su vormetto. Cosi se me face le buc torbellini de sua me. \" />\n    </Panel>\n  </React.Fragment >\n}\n\nfunction LogicmodelLabels() {\n\n  // LOGIC\n  const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\n\n  // STYLES\n  const labelStackProps: IStackProps = {\n    verticalAlign: \"space-between\",\n    styles: {\n      root: {\n        width: 120,\n        height: \"100%\",\n        maxHeight: 530,\n        padding: \"20px 0 30px 0\",\n      },\n    },\n  };\n\n  const textStyles: ITextStyles = {\n    root: {\n      fontWeight: 600\n    }\n  }\n\n  const TextMediumPlus = (props: { label: string }) => {\n    return <Stack.Item>\n      <Text variant=\"mediumPlus\" styles={textStyles}>\n        {t(props.label)}\n      </Text>\n    </Stack.Item>\n  }\n\n  return <Stack {...labelStackProps}>\n    <TextMediumPlus label=\"ultimate-outcomes\" />\n    <TextMediumPlus label=\"intermediate-outcomes\" />\n    <TextMediumPlus label=\"intermediate-outcomes\" />\n    <TextMediumPlus label=\"outputs\" />\n  </Stack>\n}\n","import { gql, useQuery } from '@apollo/client'\n\nexport default function Apollo() {\n\n    const METHODOLOGIES = gql`\n    query GetMethodologies {\n      methodologies {\n        id\n        name\n      }\n    }`;\n  \n    const {loading, error, data} = useQuery(METHODOLOGIES);\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.methodologies.map(({ id , name } : any) =>  (\n        <div key={id}>\n          <p>\n            {id}: {name}\n          </p>\n        </div>\n        )\n    )\n}\n","import Apollo from \"apollo\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n\n// import { AutoSavingForm2 } from \"./autosave\"\nexport default function Main() {\n\n  return (\n    <React.Fragment>\n      <Link to=\"/workplace\">Workplace</Link>\n      {/* <AutoSavingForm2 /> */}\n\n      <Apollo />\n    </React.Fragment>\n  );\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { animated } from \"react-spring\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nconst Container = styled.div`\n  padding: 20px 5% 50px 5%;\n`;\n\ntype PagecontainerProps = {\n  className?: string;\n  spring: any;\n  scrollHeight: string | number | undefined;\n}\nconst PageContainer: React.FunctionComponent<PagecontainerProps> = (props) => {\n\n  const { className, spring, scrollHeight, children } = props;\n\n  return <animated.div style={spring}>\n    <Scrollbars autoHide autoHeight autoHeightMin={100} autoHeightMax={scrollHeight} >\n      <Container className={className} >\n        {children}\n      </Container>\n    </Scrollbars>\n  </animated.div>\n};\n\nexport default PageContainer\n\n\n\n\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst Fixed = styled.div.attrs(props => ({ direction: \"top\" || \"bottom\" }))`\n  position: fixed;\n  width: 100%;\n  z-index: 10;\n  ${props => props.direction === \"top\" ? \"top : 0\" : \"bottom : 0\"} \n`;\n\ntype StickyProps = {\n    direction: \"top\" | \"bottom\";\n}\n\nexport const Sticky: React.FunctionComponent<StickyProps> = (props) => {\n    return (\n        <Fixed direction={props.direction}>{props.children}</Fixed>\n    )\n}","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// import Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport English from \"languages/locales/en.json\";\nimport Spanish from \"languages/locales/es.json\";\n\ni18n\n  // .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    keySeparator: false,\n    // debug: true,\n    resources: {\n      en: English,\n      es: Spanish,\n    },\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","export function fullscreenToggler() {\n  var elem = document.documentElement;\n\n  if (document.fullscreenElement) {\n    document.exitFullscreen();\n  } else {\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    }\n  }\n}\n","import i18n from \"i18n\"\nimport {\n  ICommandBarItemProps,\n} from \"@fluentui/react\";\n\nimport { fullscreenToggler } from \"components/fullscreentoogler\";\n\ni18n.loadNamespaces(\"commands\");\n\nexport const items: ICommandBarItemProps[] = [\n  {\n    key: \"goback\",\n    iconProps: { iconName: \"Undo\" },\n    text: i18n.t('commands:undo'),\n    iconOnly: true,\n  },\n  {\n    key: \"goforward\",\n    iconProps: { iconName: \"Redo\" },\n    text: i18n.t('commands:redo'),\n    iconOnly: true,\n  },\n  {\n    key: \"share\",\n    iconProps: { iconName: \"Share\" },\n    text: i18n.t('commands:share'),\n    iconOnly: true,\n    onClick: () => alert(\"Share\"),\n  },\n  {\n    key: \"export\",\n    iconProps: { iconName: \"Export\" },\n    text: i18n.t('commands:export'),\n    iconOnly: true,\n    onClick: () => alert(\"Export\"),\n  },\n];\n\nexport const overflowItems: ICommandBarItemProps[] = [\n  {\n    key: \"new\",\n    text: i18n.t(\"commands:newproject\"),\n    iconProps: { iconName: \"Document\" },\n    onClick: () => alert(\"Move to\"),\n  },\n  {\n    key: \"open\",\n    text: i18n.t(\"commands:openproject\"),\n    iconProps: { iconName: \"OpenFolderHorizontal\" },\n    onClick: () => alert(\"Open Project\"),\n  },\n  {\n    key: \"Destroy\",\n    text: i18n.t(\"commands:destroyproject\"),\n    iconProps: { iconName: \"PageRemove\" },\n    onClick: () => alert(\"Destroy project\"),\n  },\n  {\n    key: \"Duplicate\",\n    text: i18n.t(\"commands:duplicate\"),\n    iconProps: { iconName: \"Documentation\" },\n    onClick: () => alert(\"Duplicate project\"),\n  },\n  {\n    key: \"Print\",\n    text: i18n.t(\"commands:print\"),\n    iconProps: { iconName: \"Print\" },\n    onClick: () => alert(\"Print project\"),\n  },\n];\n\nexport const faritems = (OpenLanguagePanel: Function, OpenSettingsPanel: Function) => {\n  return [\n    {\n      key: \"fullscreen\",\n      text: i18n.t(\"commands:fullscreen\"),\n      ariaLabel: \"Full Screen\",\n      iconOnly: true,\n      iconProps: { iconName: \"FullScreen\" },\n      onClick: fullscreenToggler,\n    },\n    {\n      key: \"language\",\n      text: i18n.t(\"commands:language\"),\n      ariaLabel: \"Language\",\n      iconOnly: true,\n      iconProps: { iconName: \"LocaleLanguage\" },\n      onClick: OpenLanguagePanel,\n    },\n    {\n      key: \"settings\",\n      text: i18n.t(\"commands:settings\"),\n      ariaLabel: \"Change Settings\",\n      iconOnly: true,\n      iconProps: { iconName: \"Settings\" },\n      onClick: OpenSettingsPanel,\n    },\n    {\n      key: \"notifications\",\n      text: i18n.t(\"commands:notifications\"),\n      ariaLabel: \"Change Notifications\",\n      iconOnly: true,\n      iconProps: { iconName: \"Ringer\" },\n      onClick: () => alert(\"Notificactions\"),\n    },\n    {\n      key: \"user\",\n      text: \"Gabriela Rodríguez\",\n      ariaLabel: \"User name\",\n      iconOnly: true,\n      iconProps: { iconName: \"Contact\" },\n      onClick: () => alert(\"Contact\"),\n    },\n  ] as ICommandBarItemProps[];\n}\n\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport IState from \"models/state\";\nimport i18n from \"i18n\";\n\nconst LanguageSlice = createSlice({\n  name: \"language\",\n  initialState: i18n.language,\n  reducers: {\n    setLanguage: (state: string, action: PayloadAction<string>) => {\n      const { payload } = action;\n      i18n.changeLanguage(payload);\n      return state = payload;\n    },\n    setEnglish: (state: string) => {\n      state = \"en\";\n      i18n.changeLanguage(state);\n    },\n    setSpanish: (state: string) => {\n      state = \"es\";\n      i18n.changeLanguage(state);\n    },\n    setGerman: (state: string) => {\n      state = \"de\";\n      i18n.changeLanguage(state);\n    },\n  },\n});\n\nexport const selectLanguage = (state: IState) => state.language;\nexport const { setLanguage, setEnglish, setSpanish } = LanguageSlice.actions;\n\nexport default LanguageSlice.reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  IDropdownOption,\n  IStackProps,\n  Stack,\n} from \"@fluentui/react\";\n\nimport { setLanguage, selectLanguage } from \"store/slices/languageslice\";\n\nexport default function LanguagePanel() {\n  const { t } = useTranslation([\"sidepanel\", \"languages\"]);\n  const lang = useSelector(selectLanguage);\n\n  const dispatch = useDispatch();\n\n  const handleDataOnChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption<any>\n  ) => {\n    if (item) dispatch(setLanguage(item.key.toString()));\n  };\n\n  const stackProps: IStackProps = {\n    tokens: {\n      childrenGap: 15\n    },\n    styles: {\n      root: {\n        marginTop: 40\n      }\n    }\n  }\n\n  const suportedLangs = [\n    { key: \"en\", text: t(\"languages:en\") },\n    { key: \"es\", text: t(\"languages:es\") },\n    { key: \"de\", text: t(\"languages:de\") },\n  ];\n\n  return (\n    <Stack {...stackProps}>\n      <Stack.Item>\n        <Dropdown\n          label={t(\"language-ui\")}\n          defaultSelectedKey={lang ? lang : undefined}\n          placeholder={t(\"language-select\")}\n          options={suportedLangs}\n          onChange={handleDataOnChange}\n        />\n      </Stack.Item>\n      <Stack.Item>\n        <Dropdown\n          label={t(\"language-data\")}\n          placeholder={t(\"language-select\")}\n          options={suportedLangs}\n          onChange={() => { }}\n        />\n      </Stack.Item>\n    </Stack>\n  );\n}\n","import { createTheme, IColorCellProps } from \"@fluentui/react\";\n\nexport const themeWord = createTheme({\n  palette: {\n    themePrimary: \"#2b579a\",\n    themeLighterAlt: \"#f4f7fb\",\n    themeLighter: \"#d3deef\",\n    themeLight: \"#b0c3e0\",\n    themeTertiary: \"#6e90c2\",\n    themeSecondary: \"#3d66a5\",\n    themeDarkAlt: \"#274e8a\",\n    themeDark: \"#214274\",\n    themeDarker: \"#183156\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themeExcel = createTheme({\n  palette: {\n    themePrimary: \"#217346\",\n    themeLighterAlt: \"#f2f9f5\",\n    themeLighter: \"#cee9da\",\n    themeLight: \"#a8d5bc\",\n    themeTertiary: \"#62ab83\",\n    themeSecondary: \"#318456\",\n    themeDarkAlt: \"#1e673f\",\n    themeDark: \"#195735\",\n    themeDarker: \"#134027\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themePowerPoint = createTheme({\n  palette: {\n    themePrimary: \"#b7472a\",\n    themeLighterAlt: \"#fcf6f4\",\n    themeLighter: \"#f4dcd6\",\n    themeLight: \"#eabeb4\",\n    themeTertiary: \"#d48672\",\n    themeSecondary: \"#c0583e\",\n    themeDarkAlt: \"#a53f26\",\n    themeDark: \"#8c3620\",\n    themeDarker: \"#672718\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themeTeams = createTheme({\n  palette: {\n    themePrimary: \"#6264a7\",\n    themeLighterAlt: \"#f7f7fb\",\n    themeLighter: \"#e1e1f1\",\n    themeLight: \"#c8c9e4\",\n    themeTertiary: \"#989ac9\",\n    themeSecondary: \"#7173b0\",\n    themeDarkAlt: \"#585a95\",\n    themeDark: \"#4a4c7e\",\n    themeDarker: \"#37385d\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport default themeWord;\n\nexport const colorCells: IColorCellProps[] = [\n  { id: \"1\", label: \"word\", color: \"#2b579a\" },\n  { id: \"2\", label: \"excel\", color: \"#217346\" },\n  { id: \"3\", label: \"powerpoint\", color: \"#a92b1a\" },\n  { id: \"4\", label: \"teams\", color: \"#6264a7\" },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { IPartialTheme, ITheme, loadTheme } from \"@fluentui/react\";\nimport {\n  themeExcel,\n  themeWord,\n  themePowerPoint,\n  themeTeams,\n} from \"themes/office\";\nimport IState from \"models/state\";\n\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState: themeWord,\n  reducers: {\n    setTheme: (state: ITheme, action: PayloadAction<string>) => {\n      const { payload } = action;\n\n      switch (payload) {\n        case \"word\":\n          state = themeWord;\n          break;\n        case \"excel\":\n          state = themeExcel;\n          break;\n        case \"powerpoint\":\n          state = themePowerPoint;\n          break;\n        case \"teams\":\n          state = themeTeams;\n          break;\n      }\n      loadTheme(state as IPartialTheme);\n    },\n    setThemeWord: (state: ITheme) => {\n      state = themeWord;\n      loadTheme(themeWord);\n    },\n    setThemeExcel: (state: ITheme) => {\n      state = themeExcel;\n      loadTheme(themeExcel);\n    },\n    setThemePowerPoint: (state: ITheme) => {\n      state = themePowerPoint;\n      loadTheme(themePowerPoint);\n    },\n    setThemeTeams: (state: ITheme) => {\n      state = themeTeams;\n      loadTheme(themeTeams);\n    },\n  },\n});\n\nexport const selectCurrentTheme = (state: IState) => state.theme;\nexport const {\n  setTheme,\n  setThemeExcel,\n  setThemePowerPoint,\n  setThemeTeams,\n  setThemeWord,\n} = themeSlice.actions;\n\nexport default themeSlice.reducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\nimport { mergeStyleSets } from \"@fluentui/react\";\n\ninterface CircleProps {\n  ariaLabel?: string;\n  size: string;\n  color: string;\n  border: string;\n  className?: string;\n  onClick?: () => void;\n}\n\nconst StyledCircle = styled.div`\n  border-radius: 50%;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n`;\n\nexport function Circle(props: CircleProps) {\n  const classes = mergeStyleSets({\n    circleprops: {\n      height: props.size,\n      width: props.size,\n      backgroundColor: props.color,\n      border: \"4px solid \" + props.border,\n    },\n  });\n\n  return (\n    <StyledCircle\n      onClick={props.onClick}\n      className={classnames(props.className, classes.circleprops)}\n    />\n  );\n}\n","import React from \"react\";\nimport { IColorCellProps, mergeStyleSets, useTheme } from \"@fluentui/react\";\nimport { Circle } from \"components/styled/shapes\";\n\ntype SwatchThemePickerProps = {\n  colorCells: IColorCellProps[];\n  size: string;\n  handler: (id: string) => void;\n};\n\nexport default function ThemePicker(props: SwatchThemePickerProps) {\n  const { colorCells, handler, size } = props;\n\n  // STYLES\n  const { palette } = useTheme();\n  const classes = mergeStyleSets({\n    circle: {\n      \":hover\": {\n        cursor: \"pointer\",\n        border: \"solid 4px \" + palette.neutralLighter,\n      },\n    },\n  });\n\n  return (\n    <React.Fragment>\n      {colorCells.map((cell) => {\n        return (\n          <div key={cell.id}>\n            <Circle\n              ariaLabel={cell.label}\n              size={size}\n              color={cell.color}\n              border={palette.neutralQuaternaryAlt}\n              onClick={() => handler(cell.label || \"\")}\n              className={classes.circle}\n            />\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  ISeparatorProps,\n  IStackProps,\n  ITextFieldStyles,\n  Label,\n  Persona,\n  PersonaInitialsColor,\n  PersonaSize,\n  Separator,\n  Stack,\n  Text,\n  TextField,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { setTheme } from \"store/slices/themeslice\";\nimport ThemePicker from \"components/pickers/themepicker\";\nimport { colorCells } from \"themes/office\";\n\nexport default function SettingsPanel() {\n  // STYLES\n  const { palette } = useTheme();\n\n  // Stack Props\n  const stackProps: IStackProps = {\n    tokens: {\n      childrenGap: 15\n    },\n    styles: {\n      root: {\n        marginTop: 40\n      }\n    }\n  }\n\n  // TextField Styles\n  const nameTextFieldStyles: Partial<ITextFieldStyles> = {\n    fieldGroup: {\n      borderColor: palette.neutralTertiary,\n      \":hover\": {\n        borderColor: palette.neutralSecondary,\n      },\n    },\n  };\n\n  // Horizontal Separators\n  const separatorProps: ISeparatorProps = {\n    alignContent: \"end\",\n    styles: {\n      root: {\n        \"::before\": {\n          background: palette.neutralTertiaryAlt,\n          height: 0.4,\n        },\n      },\n    },\n  };\n\n  // LOGIC\n  const { t } = useTranslation([\"sidepanel\"]);\n  const dispatch = useDispatch();\n\n  return (\n    <Stack {...stackProps}>\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>{t(\"user\")}</b>\n        </Text>\n      </Separator>\n      {/* NAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"name\")}\n          defaultValue=\"Gabriela Rodríguez\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* NICKNAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"nick\")}\n          defaultValue=\"Gabi\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* COIN */}\n      <Stack.Item>\n        <Label>{t(\"coin\")}</Label>\n        <Persona\n          text=\"Gabriela Rodríguez\"\n          size={PersonaSize.size40}\n          initialsColor={PersonaInitialsColor.cyan}\n        />\n      </Stack.Item>\n      <br />\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>{t(\"theme\")}</b>\n        </Text>\n      </Separator>\n      {/* <Stack.Item>\n        <Toggle\n          label=\"Select a theme\"\n          defaultChecked\n          onText=\"Dark\"\n          offText=\"Light\"\n          onChange={handleChangeTheme}\n        />\n      </Stack.Item> */}\n      <Stack.Item>\n        <Label>{t(\"color-theme\")}</Label>\n        <Stack horizontal tokens={{ childrenGap: 5 }}>\n          <ThemePicker\n            colorCells={colorCells}\n            size=\"30px\"\n            handler={(key) => dispatch(setTheme(key))}\n          />\n        </Stack>\n      </Stack.Item>\n    </Stack>\n  );\n}\n","import React from 'react'\nimport { useTheme, CommandBarButton, IContextualMenuItemStyles, IButtonProps, concatStyleSets, IPalette, FontSizes } from '@fluentui/react';\n\nexport function CustomBarButton(props: IButtonProps) {\n\n    const { palette } = useTheme();\n\n    const itemStyles: IContextualMenuItemStyles = {\n        root: {\n            backgroundColor: palette.themePrimary\n        },\n        rootHovered: {\n            backgroundColor: palette.themeDark\n        },\n        rootPressed: {\n            backgroundColor: palette.themeDarker\n        },\n        icon: {\n            color: palette.white\n        },\n        iconHovered: {\n            color: palette.white\n        },\n        iconPressed: {\n            color: palette.white\n        },\n        label: {\n            color: palette.white\n        },\n        labelHovered: {\n            color: palette.white\n        },\n    };\n\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\n\n};\n\nexport function CustomOverflowButton(props: IButtonProps) {\n\n    const { palette } = useTheme();\n\n    const itemStyles: IContextualMenuItemStyles = {\n        root: {\n            backgroundColor: palette.themePrimary,\n\n        },\n        rootHovered: {\n            backgroundColor: palette.themeDark,\n        },\n        rootPressed: {\n            backgroundColor: palette.themeDarker,\n        },\n        rootExpanded: {\n            backgroundColor: palette.themeDarker,\n        },\n        rootExpandedHovered: {\n            backgroundColor: palette.themeDark,\n        },\n        menuIcon: {\n            color: palette.white + \" !important\",\n            fontSize: FontSizes.medium\n        },\n    };\n\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\n\n};\n\n// Overflow Buttons Props\nexport const overflowProps = (palette: IPalette) => {\n    return {\n        ariaLabel: \"More commands\",\n        menuProps: {\n            styles: {\n                subComponentStyles: {\n                    menuItem: {\n                        icon: { color: palette.black }\n                    }\n                }\n            },\n            items: [],\n        }\n    } as IButtonProps;\n};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  CommandBar,\n  ICommandBarStyles,\n  ITextStyles,\n  Text,\n  useTheme,\n  Panel\n} from \"@fluentui/react\";\nimport { useBoolean } from '@fluentui/react-hooks';\n\nimport { faritems, items, overflowItems } from \"./items\";\nimport LanguagePanel from \"components/sidepanel/languagepanel\";\nimport SettingsPanel from \"components/sidepanel/settingspanel\";\nimport { CustomBarButton, CustomOverflowButton, overflowProps } from \"./custombuttons\";\n\nexport default function CommandMenu() {\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const comandBarStyles: ICommandBarStyles = {\n    root: {\n      height: 36,\n      padding: 0,\n      backgroundColor: palette.themePrimary,\n    },\n  };\n\n  const textStyles: ITextStyles = {\n    root: {\n      position: \"absolute\",\n      top: 10,\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      color: palette.themeLight,\n    },\n  };\n\n  // Panel State\n  const { t } = useTranslation(\"methodologies\");\n\n  const [languagePanelOpen, { setTrue: openLanguagePanel, setFalse: dismissLanguagePanel }] = useBoolean(false);\n  const [settingsPanelOpen, { setTrue: openSettingsPanel, setFalse: dismissSettingsPanel }] = useBoolean(false);\n\n  return (\n    <React.Fragment>\n      <Text variant=\"small\" styles={textStyles}>\n        Project 1 - {t(\"methodologies:canadian\")}\n      </Text>\n\n      <CommandBar\n        buttonAs={CustomBarButton}\n        items={items}\n        farItems={faritems(openLanguagePanel, openSettingsPanel)}\n        overflowItems={overflowItems}\n        overflowButtonAs={CustomOverflowButton}\n        overflowButtonProps={overflowProps(palette)}\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n        styles={comandBarStyles}\n      />\n\n      <Panel\n        isOpen={languagePanelOpen}\n        closeButtonAriaLabel=\"Close\"\n        isHiddenOnDismiss={true}\n        headerText={t(\"sidepanel:language-header\")}\n        onDismiss={dismissLanguagePanel}>\n        <LanguagePanel />\n      </Panel>\n\n      <Panel\n        isOpen={settingsPanelOpen}\n        closeButtonAriaLabel=\"Close\"\n        isHiddenOnDismiss={true}\n        headerText={t(\"sidepanel:header-settings\")}\n        onDismiss={dismissSettingsPanel}>\n        <SettingsPanel />\n      </Panel>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  FontSizes,\n  IPivotStyles,\n  Pivot,\n  PivotItem,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { TabSchema } from \"models/workplace\";\nimport { setLatestMenuTab } from \"store/slices/workplaceslice\";\n\ntype PivotBarProps = {\n  schema: TabSchema;\n  setShowToolBar: Function;\n};\n\nexport default function PivotBar(props: PivotBarProps) {\n  const { schema, setShowToolBar } = props;\n  const { tabs } = schema;\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const pivotStyles: Partial<IPivotStyles> = {\n    root: {\n      height: 34,\n      backgroundColor: palette.themePrimary,\n      zIndex: 10,\n    },\n    link: {\n      height: \"inherit\",\n      backgroundColor: palette.themePrimary,\n      color: palette.white,\n      fontSize: FontSizes.small,\n      \":hover\": {\n        backgroundColor: palette.themeDarkAlt,\n        color: palette.white,\n      },\n      \":active\": {\n        backgroundColor: palette.themeDark,\n        color: palette.white,\n      },\n      \":focus\": {\n        backgroundColor: palette.themePrimary,\n        color: palette.white,\n      },\n    },\n    linkIsSelected: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralLighter + \" !important\",\n      color: palette.black + \" !important\",\n    },\n  };\n\n  // LOGIC\n  const { t } = useTranslation(\"menu\");\n\n  // Tabs State\n  const dispatch = useDispatch();\n\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\n    setShowToolBar(true)\n\n    if (item) {\n      const itemkey = item.props.itemKey!;\n      // Update current menu tab\n      dispatch(setLatestMenuTab({ tabKey: itemkey }));\n    }\n  }\n\n  return (\n    <Pivot\n      linkFormat=\"tabs\"\n      defaultSelectedKey=\"key2\"\n      styles={pivotStyles}\n      onLinkClick={handleMenuOnClick}\n    >\n      {tabs.map((tab) => {\n        return (\n          <PivotItem\n            key={tab.key}\n            itemKey={tab.key}\n            headerText={t(tab.name)}\n            itemIcon={tab.icon}\n          />\n        );\n      })}\n    </Pivot>\n  );\n}\n","import React from \"react\";\nimport {\n  Facepile,\n  OverflowButtonType,\n  IFacepilePersona,\n  IButtonProps,\n  PersonaInitialsColor,\n  IFacepileStyles,\n  PersonaSize,\n} from \"@fluentui/react\";\n\n// OverflowButton Props\nconst overflowButtonProps: IButtonProps = {\n  ariaLabel: \"More users\",\n  onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\n    alert(\"overflow icon clicked\"),\n};\n\n// AddButton Props\nconst addButtonProps = () => ({\n  ariaLabel: \"Add a new person\",\n  href: \"/\",\n});\n\n// STYLES\nconst FacePileStyles: Partial<IFacepileStyles> = {\n  root: {\n    position: \"absolute\",\n    top: 38,\n    right: 8,\n    zIndex: 10\n  },\n  itemButton: {\n    margin: \"0 -2px 0 -2px\",\n  },\n};\n\n// Data\nconst faces: IFacepilePersona[] = [\n  {\n    personaName: \"Gabriela Rodríguez\",\n    initialsColor: PersonaInitialsColor.gray,\n  },\n  {\n    personaName: \"Amaury Díaz\",\n    initialsColor: PersonaInitialsColor.gold,\n  },\n  {\n    personaName: \"Iliana Hernandez\",\n    initialsColor: PersonaInitialsColor.lightGreen,\n  },\n  {\n    personaName: \"Laura Rodríguez\",\n    initialsColor: PersonaInitialsColor.warmGray,\n  },\n  {\n    personaName: \"Lili Masters\",\n    initialsColor: PersonaInitialsColor.blue,\n  },\n  {\n    personaName: \"Susana Naranjo\",\n    initialsColor: PersonaInitialsColor.green,\n  },\n  {\n    personaName: \"Lupe Dantes\",\n    initialsColor: PersonaInitialsColor.darkBlue,\n  },\n  {\n    personaName: \"Karen Ganter\",\n    initialsColor: PersonaInitialsColor.lightGreen,\n  },\n  {\n    personaName: \"Josephine Filipie\",\n    initialsColor: PersonaInitialsColor.purple,\n  },\n  {\n    personaName: \"Daniel Hertys\",\n    initialsColor: PersonaInitialsColor.orange,\n  },\n];\n\nexport default function TeamPile() {\n  return (\n    <Facepile\n      personas={faces}\n      personaSize={PersonaSize.size24}\n      maxDisplayablePersonas={4}\n      overflowButtonProps={overflowButtonProps}\n      overflowButtonType={OverflowButtonType.descriptive}\n      addButtonProps={addButtonProps()}\n      ariaDescription=\"To move through the items use left and right arrow keys.\"\n      styles={FacePileStyles}\n    />\n  );\n}\n","import React from \"react\";\n\nimport PivotBar from \"components/menus/mainmenu/pivotbar\";\nimport TeamPile from \"components/menus/mainmenu/teampile\";\nimport { TabSchema } from \"models/workplace\";\n\ntype MenuProps = {\n  tabs: TabSchema;\n  setShowToolBar: Function;\n}\n\nexport default function MainMenu(props: MenuProps) {\n\n  const { setShowToolBar, tabs } = props;\n\n  return (\n    <React.Fragment>\n      <PivotBar schema={tabs} setShowToolBar={setShowToolBar} />\n      <TeamPile />\n    </React.Fragment>\n  );\n}\n","import {\n  useTheme,\n  IconButton,\n  Stack,\n  IStackItemProps,\n  IStackProps\n} from \"@fluentui/react\";\nimport { FunctionComponent, useEffect, useRef } from \"react\";\nimport { animated } from \"react-spring\";\n\ntype ToolBarProps = {\n  isFixed: boolean;\n  handleClose: () => void;\n  handleFix: () => void;\n  transition: Function;\n}\n\nconst ToolBar: FunctionComponent<ToolBarProps> = (props) => {\n  const { children, isFixed, handleClose, handleFix, transition } = props;\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const stackProps: IStackProps = {\n    horizontal: true,\n    horizontalAlign: \"space-between\",\n    styles: {\n      root: {\n        height: 94,\n        padding: \"0 10px 2px 10px\",\n        backgroundColor: palette.neutralLighter,\n        borderBottom: \"1px solid #E0E0E0\",\n        color: palette.black,\n      }\n    }\n  };\n\n  const stackPinProps: IStackItemProps = {\n    align: \"end\"\n  };\n\n  // LOGIC\n  function useOutsideAlerter(ref: any) {\n    useEffect(() => {\n      function handleClickOutside(event: any) {\n        if (ref.current && !ref.current.contains(event.target) && !isFixed) {\n          handleClose();\n        }\n      }\n\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref, isFixed]);\n  }\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  return transition((style: any, item: any) => item &&\n    <animated.div style={style}>\n      <div ref={wrapperRef}>\n        <Stack {...stackProps} >\n          <Stack.Item >\n            {children}\n          </Stack.Item>\n\n          <Stack.Item {...stackPinProps}>\n            {isFixed ?\n              <IconButton iconProps={{ iconName: 'ChevronUp' }} title=\"Cancel\" ariaLabel=\"Cancel\" onClick={(item) => handleClose()} /> :\n              <IconButton iconProps={{ iconName: 'Pin' }} title=\"Pin\" ariaLabel=\"Cancel\" onClick={(item) => handleFix()} />\n            }\n          </Stack.Item>\n        </Stack>\n      </div>\n    </animated.div>\n  )\n};\n\nexport default ToolBar;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  FontSizes,\n  FontWeights,\n  IPivotStyles,\n  Pivot,\n  PivotItem,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { Tab } from \"models/workplace\";\n\ntype PagesTabProps = {\n  tabs?: Tab[];\n  defaultKey?: string;\n  parentKey: string;\n  onClick: (parentkey: string, item?: PivotItem) => void;\n};\n\nexport default function PagesTabs(props: PagesTabProps) {\n\n  // LOGIC\n  const { tabs, onClick, parentKey, defaultKey, } = props;\n\n  const { t } = useTranslation(\"pages\");\n\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement, MouseEvent>) => onClick(parentKey, item)\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const pivotStyles: Partial<IPivotStyles> = {\n    root: {\n      height: 34,\n      backgroundColor: palette.neutralLight,\n    },\n    link: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralLight,\n      color: palette.black,\n      fontSize: FontSizes.small,\n      \":hover\": {\n        backgroundColor: palette.neutralQuaternaryAlt,\n        color: palette.black,\n      },\n      \":active\": {\n        backgroundColor: palette.neutralTertiaryAlt,\n        color: palette.black,\n      },\n      \":focus\": {\n        backgroundColor: palette.neutralQuaternaryAlt,\n        color: palette.black,\n      },\n    },\n    linkIsSelected: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralTertiaryAlt + \" !important\",\n      color: palette.black + \" !important\",\n      fontWeight: FontWeights.semibold + \" !important\",\n    },\n  };\n\n  return (\n    <Pivot\n      linkFormat=\"tabs\"\n      selectedKey={defaultKey}\n      styles={pivotStyles}\n      onLinkClick={handleMenuOnClick}\n      headersOnly={true}\n    >\n      {tabs &&\n        tabs.map((tab) => {\n          return (\n            <PivotItem\n              key={tab.key}\n              itemKey={tab.key}\n              headerText={t(tab.name)}\n              itemIcon={tab.icon}\n            >\n              {tab.render}\n            </PivotItem>\n          );\n        })}\n    </Pivot>\n  );\n}\n","import { IconButton, useTheme } from \"@fluentui/react\";\n\nexport default function AddButton() {\n  const { palette } = useTheme();\n\n  return (\n    <IconButton\n      iconProps={{ iconName: \"CircleAddition\" }}\n      styles={{ root: { color: palette.black } }}\n      onClick={() => alert(\"Add an instrument\")}\n    />\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport {\n  ISeparatorStyles,\n  IStackProps,\n  PivotItem,\n  Separator,\n  Stack,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport PagesTabs from \"./pagestabs\";\nimport AddButton from \"./addbutton\";\nimport { Tab } from \"models/workplace\";\nimport { setConfiguration } from \"store/slices/workplaceslice\";\n\ntype FooterProps = {\n  tab: Tab;\n  selectedkey: string;\n};\n\nexport default function Footer(props: FooterProps) {\n\n  const { tab, selectedkey } = props;\n\n  // STYLES\n  const { palette } = useTheme();\n\n  const stackProps: IStackProps = {\n    horizontal: true,\n    styles: {\n      root: {\n        height: 34,\n        position: \"fixed\",\n        bottom: 0,\n        width: \"100%\",\n        backgroundColor: palette.neutralLight,\n      },\n    },\n  };\n\n  const separatorStyles: Partial<ISeparatorStyles> = {\n    root: {\n      \"::after\": {\n        backgroundColor: palette.neutralQuaternary,\n      },\n    },\n  };\n\n  // LOGIC\n  const dispatch = useDispatch();\n\n  const handleTabOnClick = (parentkey: string, item?: PivotItem) => {\n    if (item) {\n      const itemkey = item.props.itemKey!;\n\n      // Update current configuration\n      dispatch(setConfiguration({ key: parentkey, tab: itemkey, page: item.props.children }))\n    }\n  };\n\n  return (\n    <Stack {...stackProps}>\n      <PagesTabs\n        tabs={tab.childtabs}\n        parentKey={tab.key}\n        defaultKey={selectedkey}\n        onClick={handleTabOnClick}\n      />\n      {tab.addtabs && <AddButton />}\n\n      <Separator vertical styles={separatorStyles} />\n\n      {/* Here goes the horizontal scrollbar when needed for the page */}\n    </Stack>\n  );\n}\n","import React, { FunctionComponent, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useSpring, useTransition } from \"react-spring\";\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\n\nimport { selectWorkplaceConfig } from \"store/slices/workplaceslice\";\nimport PageContainer from \"components/styled/pagecontainer\";\nimport { Sticky } from \"components/styled/sticky\"\n\nimport CommandMenu from \"components/menus/commands/\";\nimport MainMenu from \"components/menus/mainmenu\";\nimport ToolBar from \"components/menus/mainmenu/toolbar\";\nimport Footer from \"components/menus/footer\";\n\nconst WorkplaceLayout: FunctionComponent = (props) => {\n\n  // Global state variables\n  const { latestMenuTab, configuration, tabsSchema } = useSelector(selectWorkplaceConfig);\n  const { tools } = configuration[latestMenuTab];\n  const { page } = configuration[latestMenuTab];\n  const footertab = tabsSchema.findByKey(latestMenuTab);\n  const selectedkey = configuration[latestMenuTab].tab;\n\n  // Toolbar Animation State & Controls\n  const [fixToolBar, setFixToolBar] = useState(true)\n\n  const [showToolBar, setShowToolBar] = useState(true)\n  const toolBarTransition = useTransition(showToolBar, {\n    from: { x: 0, y: -34, opacity: 0 },\n    enter: { x: 0, y: 0, opacity: 1 },\n    leave: { x: 0, y: -34, opacity: 0 },\n  })\n\n  const pageSpring = useSpring({\n    marginTop: showToolBar ? 180 : 80,\n    from: {\n      marginTop: 180,\n    },\n  })\n\n  const handleToolbarClose = () => {\n    setShowToolBar(false);\n    setFixToolBar(false);\n  }\n\n  const handleToolbarFix = () => {\n    setFixToolBar(true);\n  }\n\n  return (\n    <React.Fragment>\n      <RemoveScrollBar />\n\n      <Sticky direction=\"top\">\n        <CommandMenu />\n        <MainMenu tabs={tabsSchema} setShowToolBar={setShowToolBar} />\n        <ToolBar transition={toolBarTransition} isFixed={fixToolBar} handleClose={handleToolbarClose} handleFix={handleToolbarFix}>\n          {tools}\n        </ToolBar>\n      </Sticky>\n\n      <PageContainer spring={pageSpring} scrollHeight={showToolBar ? \"calc(100vh - 220px)\" : \"calc(100vh - 110px)\"}>\n        {page}\n      </PageContainer>\n\n      <Footer tab={footertab} selectedkey={selectedkey} />\n\n    </React.Fragment>\n  );\n};\n\nexport default WorkplaceLayout;\n","import { lazy } from \"react\";\nimport main from \"pages/main\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport WorkplaceLayout from \"layouts/workplace\";\n\n// Canaidan Methodology - Project Tab\nconst GeneralForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/generalform\"));\nconst StakeholdersForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/stakeholdersform\"));\nconst LogicModelForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/logicmodelform\"));\nconst ActivitiesMatrixForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/activitiesform\"));\nconst PerformanceMeasureForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/performanceform\"));\nconst RisksForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/risksform\"));\nconst BudgetForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/budgetform\"));\nconst ReportsForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/reportsform\"));\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/workplace\" render={WorkplaceSwitcher} />\n        <Route path=\"/\" render={main} />\n      </Switch>\n    </Router>\n  );\n}\n\nconst WorkplaceSwitcher = () => (\n  /* Projects, Methodologies, Licitaciones, Bases de Datos */\n  <WorkplaceLayout>\n    <Switch>\n      <Route path=\"/workplace/project\" render={ProjectSwitcher} />\n      {/* <Route path=\"/workplace/methodology\" render={MethodologySwitcher} /> */}\n      {/* <Route path=\"/workplace/licitations\" render={MethodologySwitcher} /> */}\n      {/* <Route path=\"/workplace/database\" render={MethodologySwitcher} /> */}\n    </Switch>\n  </WorkplaceLayout>\n);\n\nconst ProjectSwitcher = () => (\n  /* Projects */\n  // After having users account and project id the url's format should be /workplace/#project_id/project/canadian/general\n  <Switch>\n    <Route path=\"/workplace/project/general\" component={GeneralForm} />\n    <Route path=\"/workplace/project/stakeholdres\" component={StakeholdersForm} />\n    <Route path=\"/workplace/project/logicmodel\" component={LogicModelForm} />\n    <Route path=\"/workplace/project/activitiesmatrix\" component={ActivitiesMatrixForm} />\n    <Route path=\"/workplace/project/performance\" component={PerformanceMeasureForm} />\n    <Route path=\"/workplace/project/risks\" component={RisksForm} />\n    <Route path=\"/workplace/project/budget\" component={BudgetForm} />\n    <Route path=\"/workplace/project/reports\" component={ReportsForm} />\n  </Switch>\n);\n","import React, { Suspense } from \"react\";\nimport Routes from \"routes\";\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Routes />\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport IState from \"models/state\";\n\nconst HelpSlice = createSlice({\n  name: \"helpTooltips\",\n  initialState: true,\n  reducers: {\n    toogleHelp: (state: boolean) => {\n      return !state;\n    },\n    setHelp: (state: boolean) => {\n      return state = true;\n    },\n    removeHelp: (state: boolean) => {\n      return state = false;\n    },\n  },\n});\n\nexport const help = (state: IState) => state.helpTooltips;\nexport const { toogleHelp, setHelp, removeHelp } = HelpSlice.actions;\n\nexport default HelpSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport themeReducer from \"store/slices/themeslice\";\nimport languageReducer from \"store/slices/languageslice\";\nimport helpReducer from \"store/slices/settingslice\";\nimport projectReducer from \"store/slices/projectslice\";\nimport workplaceReducer from \"store/slices/workplaceslice\";\n\nconst store = configureStore({\n  reducer: {\n    theme: themeReducer,\n    language: languageReducer,\n    help: helpReducer,\n    project: projectReducer,\n    workplace: workplaceReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18n\";\n\nimport { initializeIcons, loadTheme } from \"@fluentui/react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n\n// Apollo\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'http://80.209.237.197:3000/graphql',\n  cache: new InMemoryCache()\n});\n\n// Styling\nloadTheme(store.getState().theme);\ninitializeIcons();\n\n// Render\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { TextField } from \"@fluentui/react\";\n\nconst TextFieldInput = ({ field, form, ...props }: any) => {\n  const handleGetError = (value: string) => {\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\n  };\n\n  return (\n    <TextField\n      {...field}\n      {...props}\n      onGetErrorMessage={handleGetError}\n      deferredValidationTime={500}\n    />\n  );\n};\n\nexport default TextFieldInput;\n\n\n","import React from \"react\";\n\nexport default function ChangeNarrativeForm() {\n    return <div>ChangeNarrative Form</div>;\n}\n","import React from \"react\";\n\nexport default function LotForm() {\n  return <div>Lot Form</div>;\n}\n","import React from \"react\";\n\nexport default function SpecificationsForm() {\n  return <div>Specification Form</div>;\n}\n","import React from \"react\";\n\nexport default function TechnicalOfferForm() {\n  return <div>Technical Offer Form</div>;\n}\n","import React from \"react\";\n\nexport default function FinancialOfferForm() {\n  return <div>Financial Offer Form</div>;\n}\n","import React from \"react\";\n\nexport default function FormsTutorials() {\n  return <div>Forms Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function SectorsTutorials() {\n  return <div>Sectors Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function GuidesTutorials() {\n  return <div>Guides Tutorials</div>;\n}\n","import React from \"react\";\n\nexport default function MethodologyTutorials() {\n  return <div>Methodology Tutorials</div>;\n}\n","import React from \"react\";\n\nexport default function OutcomesTutorial() {\n  return <div>Outcomes Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function IndicatorsTutorial() {\n  return <div>Indicators Tutorials</div>;\n}\n","import React, { ReactNode } from \"react\";\nimport { Label } from \"@fluentui/react\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport IState from \"models/state\";\nimport IWorkplaceConfiguration, { TabSchema } from \"models/workplace\";\nimport tabsConfiguration from \"pages/methodologies/canadian/tabsconfiguration\";\n\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\n\nconst initialState: IWorkplaceConfiguration = {\n    tabsSchema: tabsConfiguration,\n    latestMenuTab: \"key2\",\n    configuration: { // menuTabKey : { toolBarComponentToRender, latestFormTab, pageComponentToRender}\n        key1: { tools: <Label>ToolBar #1</Label>, tab: \"key1\", page: <React.Fragment /> },\n        key2: { tools: <Label>ToolBar #2</Label>, tab: \"key1\", page: <GeneralForm /> },\n        key3: { tools: <Label>ToolBar #3</Label>, tab: \"key1\", page: <SpecificationsForm /> },\n        key4: { tools: <Label>ToolBar #4</Label>, tab: \"key1\", page: <FormsTutorials /> },\n        key5: { tools: <Label>ToolBar #5</Label>, tab: \"key1\", page: <React.Fragment /> },\n        key6: { tools: <Label>ToolBar #6</Label>, tab: \"key1\", page: <React.Fragment /> },\n    }\n};\n\nconst workplaceSlice = createSlice({\n    name: \"workplace\",\n    initialState,\n    reducers: {\n        setTabSchema: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabs: TabSchema }>) => {\n            state.tabsSchema = action.payload.tabs;\n        },\n        setLatestMenuTab: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabKey: string }>) => {\n            state.latestMenuTab = action.payload.tabKey;\n        },\n        setConfiguration: (state: IWorkplaceConfiguration, action: PayloadAction<{ key: string, tab: string, page: ReactNode }>) => {\n            const { key, tab, page } = action.payload;\n            const { tools } = state.configuration[key];\n            state.configuration[key] = { tools, tab, page }\n        }\n    },\n});\n\nexport const selectWorkplaceConfig = (state: IState) => state.workplace;\nexport const { setTabSchema, setLatestMenuTab, setConfiguration } = workplaceSlice.actions;\n\nexport default workplaceSlice.reducer;\n","import { Redirect } from \"react-router\";\nimport { Label } from \"@fluentui/react\";\n\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\nimport StakeholdersForm from \"pages/methodologies/canadian/projectforms/stakeholdersform\";\nimport LogicModelForm from \"pages/methodologies/canadian/projectforms/logicmodelform\";\nimport ActivitiesMatrixForm from \"pages/methodologies/canadian/projectforms/activitiesform\";\nimport PerformanceMeasureForm from \"pages/methodologies/canadian/projectforms/performanceform\";\nimport RisksForm from \"pages/methodologies/canadian/projectforms/risksform\";\nimport BudgetForm from \"pages/methodologies/canadian/projectforms/budgetform\";\nimport ReportsForm from \"pages/methodologies/canadian/projectforms/reportsform\";\nimport ChangeNarrativeForm from \"pages/methodologies/canadian/projectforms/changenarrativeform\";\n\nimport LotForm from \"pages/methodologies/canadian/licitationforms/lotform\";\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\nimport TechnicalOfferForm from \"pages/methodologies/canadian/licitationforms/technicalofferform\";\nimport FinancialOfferForm from \"pages/methodologies/canadian/licitationforms/financialofferform\";\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\nimport SectorsTutorials from \"pages/methodologies/canadian/tutorials/sectorstutorial\";\nimport GuidesTutorials from \"pages/methodologies/canadian/tutorials/guidestutorial\";\nimport Tutorials from \"pages/methodologies/canadian/tutorials/methodologytutorials\";\nimport OutcomesTutorial from \"pages/methodologies/canadian/tutorials/outcomestutorial\";\nimport IndicatorsTutorial from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\nimport FinancingForm from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\nimport { TabSchema } from \"models/workplace\";\n\nconst tabsConfiguration = new TabSchema([\n  {\n    key: \"key1\",\n    name: \"wikiml\",\n    icon: \"WebComponents\",\n    render: <Redirect to=\"/\" />,\n    // toolBar: \n  },\n  {\n    key: \"key2\",\n    name: \"project\",\n    icon: \"Page\",\n    render: <Label>ToolBar #1</Label>,\n    addtabs: true,\n    childtabs: [\n      {\n        key: \"key1\",\n        name: \"general\",\n        icon: \"Info\",\n        render: <GeneralForm />\n      },\n      {\n        key: \"key2\",\n        name: \"stakeholders\",\n        icon: \"Commitments\",\n        render: <StakeholdersForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"logicmodel\",\n        icon: \"LargeGrid\",\n        render: <LogicModelForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"activitiesmatrix\",\n        icon: \"GripperDotsVertical\",\n        render: <ActivitiesMatrixForm />,\n      },\n      {\n        key: \"key5\",\n        name: \"performance\",\n        icon: \"GripperDotsVertical\",\n        render: <PerformanceMeasureForm />,\n      },\n      {\n        key: \"key6\",\n        name: \"changenarrative\",\n        icon: \"GripperDotsVertical\",\n        render: <ChangeNarrativeForm />,\n      },\n      {\n        key: \"key7\",\n        name: \"risks\",\n        icon: \"DoubleDownArrow\",\n        render: <RisksForm />,\n      },\n      {\n        key: \"key8\",\n        name: \"budget\",\n        icon: \"PaymentCard\",\n        render: <BudgetForm />,\n      },\n      {\n        key: \"key9\",\n        name: \"financing\",\n        icon: \"StackColumnChart\",\n        render: <FinancingForm />,\n      },\n      {\n        key: \"key10\",\n        name: \"reports\",\n        icon: \"BarChart4\",\n        render: <ReportsForm />,\n      },\n    ],\n  },\n  {\n    key: \"key3\",\n    name: \"licitations\",\n    icon: \"Library\",\n    render: <Label>ToolBar #2</Label>,\n    childtabs: [\n      { key: \"key1\", name: \"lot\", icon: \"OEM\", render: <LotForm /> },\n      {\n        key: \"key2\",\n        name: \"specifications\",\n        icon: \"PageList\",\n        render: <SpecificationsForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"tecoffer\",\n        icon: \"PageListSolid\",\n        render: <TechnicalOfferForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"finoffer\",\n        icon: \"Financial\",\n        render: <FinancialOfferForm />,\n      },\n    ],\n  },\n  {\n    key: \"key4\",\n    name: \"methodology\",\n    icon: \"StackIndicator\",\n    render: <Label>ToolBar #3</Label>,\n    childtabs: [\n      {\n        key: \"key1\",\n        name: \"forms\",\n        icon: \"PageData\",\n        render: <FormsTutorials />,\n      },\n      {\n        key: \"key2\",\n        name: \"sectors\",\n        icon: \"Sections\",\n        render: <SectorsTutorials />,\n      },\n      {\n        key: \"key3\",\n        name: \"guides\",\n        icon: \"GUID\",\n        render: <GuidesTutorials />,\n      },\n      {\n        key: \"key4\",\n        name: \"tutorials\",\n        icon: \"Video\",\n        render: <Tutorials />,\n      },\n      {\n        key: \"key5\",\n        name: \"outcomes\",\n        icon: \"ReportDocument\",\n        render: <OutcomesTutorial />,\n      },\n      {\n        key: \"key6\",\n        name: \"indicators\",\n        icon: \"CRMReport\",\n        render: <IndicatorsTutorial />,\n      },\n    ],\n  },\n  {\n    key: \"key5\",\n    name: \"database\",\n    icon: \"Database\",\n    render: <Label>ToolBar #4</Label>,\n  },\n  {\n    key: \"key6\",\n    name: \"more\",\n    icon: \"MoreVertical\",\n    render: <Label>ToolBar #5</Label>,\n  },\n]);\n\nexport default tabsConfiguration;","import { ReactNode } from \"react\"\n\n// Workplace Configuration\ntype FormRender = {\n  tab: string;\n  page: ReactNode;\n  tools: ReactNode;\n}\n\ntype FormRenderDictionary = {\n  [key: string]: FormRender\n}\n\nexport default interface IWorkplaceConfiguration {\n  tabsSchema: TabSchema,\n  latestMenuTab: string,\n  configuration: FormRenderDictionary\n}\n\n// tabSchema\nexport type Tab = {\n  key: string;\n  name: string;\n  icon: string;\n  render?: JSX.Element;\n  addtabs?: boolean;\n  childtabs?: Tab[];\n  onClick?: Function;\n};\n\nexport class TabSchema {\n\n  tabs: Tab[];\n\n  constructor(tabs: Tab[]) {\n    this.tabs = tabs\n  }\n\n  findByKey(key: string): Tab {\n    return this.tabs.find(tab => tab.key === key) || {} as Tab\n  }\n\n  findChildByKey(key: string, childkey: string): Tab {\n    const parenttab = this.tabs.find(tab => tab.key === key) || {} as Tab\n    let child;\n\n    if (parenttab.childtabs) {\n      child = parenttab.childtabs.find(tab => tab.key === childkey)\n    }\n    return child || {} as Tab\n  }\n\n  findByName(name: string): Tab {\n    return this.tabs.find(tab => tab.name === name) || {} as Tab\n  }\n\n  findChildByName(name: string): Tab {\n    for (let tab of this.tabs) {\n      if (tab.childtabs) {\n        const tabFound = tab.childtabs.find(childTab => childTab.name === name) || {} as Tab\n        if (tabFound) return tabFound;\n      }\n    }\n\n    return {} as Tab;\n  }\n\n  // getInitialConfiguration() : FormRenderDictionary {\n  //   this.tabs.map()\n  // } \n};","export enum ECanadianSector {\n    \"Agriculture and Nutrition\",\n    \"Economical Growth\",\n    \"Human Rights\",\n    \"Human Development\",\n    \"Energy\",\n    \"Infrastructure\",\n    \"Enviroment\",\n    \"Migration & Refuge\",\n    \"Information & Comunication Technology\",\n}\n\nexport enum EGermanSector {\n    \"Agriculture and Nutrition\",\n    \"Economical Growth\",\n    \"Human Rights\",\n    \"Human Development\",\n    \"Energy\",\n    \"Infrastructure\",\n    \"Enviroment\",\n    \"Migration & Refuge\",\n    \"Information & Comunication Technology\",\n}","import { IGroup } from '@fluentui/react';\nimport INodeInfo from 'models/nodeinfo';\n\nexport enum CategoryName { \"beneficiary\", \"intermediary\", \"implementer\", \"donor\", \"other\" }\n\nexport interface Category {\n    name: CategoryName,\n    minMain?: number,\n    hasNoMain?: boolean\n}\n\nexport const categories = {\n    beneficiary: { name: 0, minMain: 0 } as Category,\n    intermediary: { name: 1, minMain: 1 } as Category,\n    implementer: { name: 2, minMain: 1 } as Category,\n    donor: { name: 3, minMain: 1 } as Category,\n    other: { name: 4, hasNoMain: true } as Category,\n}\n\nexport interface IStakeholder {\n    id: number;\n    name: string;\n    category: Category;\n    main?: boolean;\n    orderInGroup: number;\n}\n\nexport default class Stakeholders {\n    list: IStakeholder[];\n\n    constructor(list: IStakeholder[]) {\n        this.list = list;\n    }\n\n    getStakeholdersByCategory(category: CategoryName): IStakeholder[] {\n        switch (category) {\n            case 0:\n                return this.getBeneficaries();\n            case 1:\n                return this.getIntermediaries();\n            case 2:\n                return this.getImplementors();\n            case 3:\n                return this.getDonors();\n            default:\n                return this.getOthers();\n        }\n    }\n\n    getBeneficaries(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 0);\n    }\n\n    getIntermediaries(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 1);\n    }\n\n    getImplementors(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 2);\n    }\n\n    getDonors(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 3);\n    }\n\n    getOthers(): IStakeholder[] {\n        return this.list.filter(sh => sh.category.name === 4);\n    }\n\n    addStakeholder(order: number, category: Category): Stakeholders {\n        // new Stakeholder\n        const newSh = {\n            id: this.list.length,\n            name: \"\",\n            category: category,\n            main: false,\n            orderInGroup: order + 1\n        } as IStakeholder;\n\n        // Fix rest of orders\n        this.getStakeholdersByCategory(category.name).forEach(sibling => {\n            if (sibling.orderInGroup >= newSh.orderInGroup) {\n                sibling.orderInGroup += 1;\n            }\n        })\n\n        // now push new element after orders have been fixed\n        this.list.push(newSh)\n        this.list = this.list.sort((a, b) => a.orderInGroup - b.orderInGroup)\n\n        return this;\n    }\n\n    deleteStakeholder(id: number): Stakeholders {\n        const node = this.list.find(sh => sh.id === id);\n\n        if (node) {\n            // Fix rest of orders\n            this.getStakeholdersByCategory(node.category.name).forEach(sibling => {\n                if (sibling.orderInGroup >= node.orderInGroup) {\n                    sibling.orderInGroup -= 1;\n                }\n            })\n\n            // if the removed node was the main stakeholder, then asign other stakeholder\n            if (node.main && node.category.minMain !== 0) {\n                this.getStakeholdersByCategory(node.category.name).find(sh => sh.orderInGroup === 0)!.main = true;\n            }\n\n            // Remove node\n            this.list = this.list.filter(sh => sh.id !== id).sort((a, b) => a.id - b.id);\n        }\n        return this;\n    }\n\n    setMainStakeholder(id: number): Stakeholders {\n        const newMain = this.list.find(sh => sh.id === id)!;\n        const previousMain = this.getStakeholdersByCategory(newMain.category.name).find(sh => sh.main === true)!\n\n        // Unset previous main if there is one\n        if(previousMain) previousMain.main = false;\n\n        // Set new main\n        newMain.main = true;\n\n        return this;\n    }\n\n    buidStakeholdersList(): IStakholderInfo[] {\n        // Sort items by category and then by id\n        return this.list.sort((a, b) => a.category.name - b.category.name || a.orderInGroup - b.orderInGroup).map(sh => {\n            return {\n                id: sh.id,\n                name: sh.name,\n                category: sh.category,\n                main: sh.main,\n                hasSiblings: this.getStakeholdersByCategory(sh.category.name).length > 1,\n                orderInGroup: sh.orderInGroup\n            } as IStakholderInfo\n        });\n    }\n\n    buildStakeholdersGroups(translator: Function): IGroup[] {\n        const benefCount = this.getBeneficaries().length;\n        const intermCount = this.getIntermediaries().length;\n        const inpemCount = this.getImplementors().length;\n        const donorCount = this.getDonors().length;\n        const otherCount = this.getOthers().length;\n\n        const counts = [benefCount, intermCount, inpemCount, donorCount, otherCount]\n        let index = 0;\n\n        let groups = [] as IGroup[];\n\n        for (var key in CategoryName) {\n            if (CategoryName[key]) {\n                groups.push({\n                    key: `stakeholder${key}`, name: translator(CategoryName[key]), startIndex: index, count: counts[key]\n                })\n                index += counts[key];\n            }\n            else break;\n        }\n        return groups;\n    }\n}\n\nexport interface IStakholderInfo extends INodeInfo {\n    id: number;\n    name: string;\n    category: Category;\n    main: boolean;\n    orderInGroup: number;\n    hasSiblings?: boolean;\n}","import { toNumber } from \"lodash\";\nimport { Graph, Edge } from \"../tree\";\n\nexport type LogicmodelVertex = {\n    id: string;\n    text: string;\n    level: number;\n}\n\nexport default class LogicmodelGraph extends Graph<LogicmodelVertex> {\n\n    setNodeText(id: string, char: string): LogicmodelGraph {\n        const node = this.vertex.find(v => v.id === id);\n\n        if (node) {\n            node.text += char;\n        }\n\n        return this;\n    }\n\n    getInmediateTree(id: string) {\n        const outputs = this.edges.filter(e => e.from === id).map(e => this.findNode(e.to));\n\n        return { node: this.findNode(id), outputs: outputs };\n    }\n\n    getParentId(id: string, level: number): string {\n        return id.slice(0, level).padEnd(4, \"0\");\n    }\n\n    addNode(parentId: string): LogicmodelGraph {\n        const parentNode = this.findNode(parentId)!;\n\n        const newNode = {\n            id: this.generateId(parentId, parentNode.level, this.findChildrenIds(parentId).length),\n            text: \"\",\n            level: parentNode.level + 1\n        } as LogicmodelVertex\n\n        // Add to graph\n        this.vertex.push(newNode);\n        this.edges.push({ from: parentNode.id, to: newNode.id } as Edge);\n\n        return this\n    }\n\n    addSibling(siblingId: string) {\n\n        const { id, level, order } = this.generateSiblingId(siblingId);\n\n        const newNode = {\n            id: id,\n            text: \"added node \" + id,\n            level: level\n        } as LogicmodelVertex\n\n        // Fix siblings ids\n        const parentId = this.getParentId(id.toString(), level);\n        const siblingsIds = this.findChildrenIds(parentId).sort();\n\n        // Updating siblings vertex and edges and its descendant's\n        for (let i = order - 1; i < siblingsIds.length; i++) {\n            const oldId = siblingsIds[i];\n\n            // Find sibling\n            const childNode = this.findNode(oldId);\n\n            if (childNode) {\n                // Update sibling vertex & edges\n                const newInfo = this.generateSiblingId(oldId);\n                childNode.id = newInfo.id;\n\n                this.edges = this.edges.map(e => ({\n                    from: e.from === oldId ? newInfo.id : e.from,\n                    to: e.to === oldId ? newInfo.id : e.to\n                } as Edge));\n\n                // Update descendants\n                const commonRoot = id.substr(0, level + 1);\n\n                const descendants = this.findAllDescendants(oldId);\n\n                descendants.forEach(desc => {\n                    // update vertex id\n                    const n = toNumber(desc.id.charAt(desc.level));\n                    const oldDescId = desc.id;\n                    desc.id = this.generateId(childNode.id, desc.level, n);\n\n                    // update\n                    this.edges = this.edges.map(e => ({\n                        from: e.from === oldDescId ? desc.id : e.from,\n                        to: e.to === oldDescId ? desc.id : e.to\n                    } as Edge));\n                })\n            }\n        }\n\n        // Add new sibling to graph\n        this.vertex.push(newNode);\n        this.edges.push({ from: parentId, to: newNode.id } as Edge);\n\n        this.vertex = this.vertex.sort((a, b) => toNumber(a.id) - toNumber(b.id));\n        return this\n    }\n\n    deleteNode(nodeId: string): LogicmodelGraph {\n        const node = this.findNode(nodeId);\n\n        if (node) {\n            // Remove from graph\n            this.vertex = this.vertex.filter(v => v.id !== nodeId);\n            this.edges = this.edges.filter(e => e.from !== nodeId && e.to !== nodeId);\n\n            // Update children ids\n            const parentId = this.getParentId(nodeId, node.level);\n            const childrenIds = this.findChildrenIds(parentId).sort();\n\n            // Updating vertex and edges\n            for (let i = 0; i < childrenIds.length; i++) {\n                const oldId = childrenIds[i];\n\n                const childNode = this.findNode(oldId);\n                if (childNode) {\n                    const newId = this.generateId(parentId, this.getNodeLevel(parentId), i);\n                    childNode.id = newId;\n\n                    this.edges = this.edges.map(e => ({\n                        from: e.from === oldId ? newId : e.from,\n                        to: e.to === oldId ? newId : e.to\n                    } as Edge));\n                }\n            }\n        }\n        return this;\n    }\n}\n\n// Examples\nexport const vertexExample: LogicmodelVertex[] = [\n    {\n        id: \"1000\",\n        text:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\n        level: 0,\n    },\n    {\n        id: \"1100\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1110\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1111\",\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\n        level: 3,\n    },\n    {\n        id: \"1120\",\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1121\",\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\n        level: 3,\n    },\n    {\n        id: \"1200\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1210\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1211\",\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\n        level: 3,\n    },\n    {\n        id: \"1220\",\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1221\",\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\n        level: 3,\n    },\n];\n\nexport const edgesExample: Edge[] = [\n    // Edges from 1\n    { from: \"1000\", to: \"1100\" },\n    { from: \"1000\", to: \"1200\" },\n\n    // Edges from 1.1\n    { from: \"1100\", to: \"1110\" },\n    { from: \"1100\", to: \"1120\" },\n\n    // Edges from 1.1.1\n    { from: \"1110\", to: \"1111\" },\n    // Edges from 1.1.2\n    { from: \"1120\", to: \"1121\" },\n\n    // Edges from 1.2\n    { from: \"1200\", to: \"1210\" },\n    { from: \"1200\", to: \"1220\" },\n\n    // Edges from 1.2.1\n    { from: \"1210\", to: \"1211\" },\n    // Edges from 1.2.2\n    { from: \"1220\", to: \"1221\" },\n];\n\nexport const logicmodelGraphExample = new LogicmodelGraph(vertexExample, edgesExample)\n","import { toNumber } from \"lodash\";\nimport { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\n\nexport type Vertex = {\n    id: string;\n}\n\nexport type Edge = {\n    from: string;\n    to: string;\n}\n\ninterface IGraph<T> {\n    vertex: T[];\n    edges: Edge[];\n}\n\nexport type Tree<T extends Vertex | LogicmodelVertex | ActivityVertex> = {\n    node: T;\n    children: Tree<T>[];\n}\n\nexport class Graph<T extends Vertex | LogicmodelVertex | ActivityVertex> implements IGraph<T> {\n\n    vertex: T[];\n    edges: Edge[];\n\n    constructor(vertex: T[], edges: Edge[]) {\n        this.vertex = vertex;\n        this.edges = edges;\n    };\n\n    findNode(id: string): T {\n        return this.vertex.find(v => v.id === id) || {} as T;\n    }\n\n    getNodeLevel(id: string): number {\n        return 3 - id.split(\"\").filter(c => c === \"0\").length;\n    }\n\n    findChildrenIds(parentId: string): string[] {\n        return this.edges.filter(e => e.from === parentId).map(e => e.to);\n    }\n\n    generateId(parentId: string, level: number, num: number): string {\n        return parentId.slice(0, level + 1).concat((num + 1).toString()).padEnd(4, \"0\");\n    }\n\n    generateSiblingId(siblingId: string, num?: number) {\n        // Get level\n        const level = this.getNodeLevel(siblingId);\n\n        // Generate new id\n        let id = siblingId.slice(0, level);\n        const order = num ? num : toNumber(siblingId[level]) + 1;\n        id += order.toString();\n        id = id.padEnd(4, \"0\");\n        return { id: id.toString(), level: level, order };\n    }\n\n    findAllDescendants(id: string) {\n        const level = this.getNodeLevel(id);\n        const commonRoot = id.substr(0, level + 1);\n\n        return this.vertex.filter(v => v.id.substr(0, level + 1) === commonRoot);\n    }\n\n    buildTree(): Tree<T> {\n        let tree: Tree<T> = { node: this.findNode(\"1000\")!, children: [] };\n\n        return this.buildTreeRec(tree);\n    }\n\n    private buildTreeRec(tree: Tree<T>) {\n\n        const childVertex = this.edges.filter(edge => edge.from === tree.node.id).map(edge => this.findNode(edge.to)!);\n\n        tree.children = childVertex.map(child => ({ node: child, children: [] } as Tree<T>));\n\n        tree.children.forEach(child => {\n            this.buildTreeRec(child);\n        })\n\n        return tree;\n    }\n}\n","import { toNumber } from \"lodash\";\nimport INodeInfo from \"models/nodeinfo\";\nimport { Edge } from \"../tree\";\nimport LogicmodelGraph, { LogicmodelVertex } from \"./logicmodel\"\n\nexport type ActivityVertex = {\n    outputId: string;\n    id: string;\n    text: string;\n}\n\nexport default class LogicModelActivitiesMatrix extends LogicmodelGraph {\n\n    activities: ActivityVertex[];\n\n    constructor(vertex: LogicmodelVertex[], edges: Edge[], activities: ActivityVertex[]) {\n        super(vertex, edges);\n        this.activities = activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\n    }\n\n    findActivitiesByOutput(outputId: string) {\n        return this.activities.filter(a => a.outputId === outputId);\n    }\n\n    addActivityToOutput(outputId: string, id: string): LogicModelActivitiesMatrix {\n        // Update siblingsIds below\n        let i = toNumber(id)\n        this.activities.filter(a => a.outputId === outputId && toNumber(a.id) >= i).sort().forEach((sibling, key) => {\n            sibling.id = (i + key + 1).toString();\n        })\n\n        // Create nwe activity\n        const newActivity = {\n            outputId: outputId,\n            id: id,\n            text: \"\",\n        } as ActivityVertex\n\n        // Add to graph\n        this.activities.push(newActivity);\n        this.activities = this.activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\n        return this\n    }\n\n    deleteActivity(outputId: string, id: string): LogicModelActivitiesMatrix {\n        // Delete from activities\n        this.activities = this.activities.filter(a => !(a.id === id && a.outputId === outputId));\n\n        // Update children ids\n        this.activities.filter(a => a.outputId === outputId).sort().forEach((child, key) => {\n            child.id = key.toString();\n        });\n\n        return this;\n    }\n\n    buidOutputsActivityList() {\n        // get all Inmediate Outcomes Ids\n        const inmediatesIds = this.vertex.filter(v => v.level === 2).sort((a, b) => toNumber(a.id) - toNumber(b.id)).map(v => v.id);\n        const items: IActivityInfo[] = [];\n\n        inmediatesIds.forEach(id => {\n            const { node, outputs } = this.getInmediateTree(id);\n\n            // Push Inmediate Outcome\n            items.push({\n                id: node.id,\n                name: \"inmediate-outcomes\",\n                level: 0,\n                description: node.text\n            } as IActivityInfo);\n\n            // Push Outputs & Activities\n            outputs.forEach(output => {\n                // Push Output\n                items.push({\n                    id: output.id,\n                    name: \"outputs\",\n                    level: 1,\n                    description: output.text\n                } as IActivityInfo)\n\n                // Push Activities\n                const siblings = this.findActivitiesByOutput(output.id);\n                siblings.forEach(activity => {\n                    items.push({\n                        id: output.id + activity.id,\n                        name: \"activity\",\n                        level: 2,\n                        description: activity.text,\n                        hasSiblings: siblings.length > 1\n                    } as IActivityInfo)\n                })\n            })\n        })\n\n        return items;\n    }\n}\n\nexport interface IActivityInfo extends INodeInfo {\n    id: string;\n    name: string;\n    level: number;\n    description: string;\n    hasSiblings?: boolean;\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport IState from \"models/state\";\nimport { IProjectInfo } from \"models/project\";\nimport { ECanadianSector } from \"models/sector\";\nimport IProject from \"models/project\";\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\nimport LogicModelActivitiesMatrix, { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\nimport { Edge } from \"models/tree\";\nimport Stakeholders, { categories } from \"models/canadian/stakeholders\";\n\n// Examples - Set initial in blank\nconst initialProjectInfoState: IProjectInfo<ECanadianSector> = {\n    name: \"Large Project Name Test\",\n    shortname: \"Short Project Name\",\n    description: \"Lorem ipsum dolre description asedore son lisiu tredo.\",\n    methodology: \"Canadian Test\",\n    status: \"pending\",\n    wikicode: \"X54S0\",\n    organization: \"Organization Test\",\n    intermediary: \"Intermediary Organization Test\",\n    duration: 34,\n    country: \"Country Test\",\n    program: \"Program Test\",\n    sector: ECanadianSector.Energy,\n    donorcode: \"2F8HT\",\n    leader: { name: \"Leader Test\", email: \"test@gmail.com\" },\n    team: [\n        { name: \"team1\", email: \"team-test@gmal.com\" },\n        { name: \"team2\", email: \"team-test@gmal.com\" },\n    ],\n    currency: \"Euro\",\n    budget: 200.00,\n    budgetItems: 22.00,\n    budgetAct: 33.00,\n    budgetFinanced: 150.00,\n    solicitedBudget: 44.00,\n    approvedBudget: 44.00,\n    approvedDate: new Date(),\n    finalDate: new Date(),\n    initialDate: new Date(),\n    donor: \"Donor Test\",\n    contribution: 1000.00,\n};\n\nconst vertexExample: LogicmodelVertex[] = [\n    {\n        id: \"1000\",\n        text:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\n        level: 0,\n    },\n    {\n        id: \"1100\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1110\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1111\",\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\n        level: 3,\n    },\n    {\n        id: \"1120\",\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1121\",\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\n        level: 3,\n    },\n    {\n        id: \"1200\",\n        text: \"\",\n        level: 1,\n    },\n    {\n        id: \"1210\",\n        text: \"\",\n        level: 2,\n    },\n    {\n        id: \"1211\",\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\n        level: 3,\n    },\n    {\n        id: \"1220\",\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\n        level: 2,\n    },\n    {\n        id: \"1221\",\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\n        level: 3,\n    },\n];\n\nconst edgesExample: Edge[] = [\n    // Edges from 1\n    { from: \"1000\", to: \"1100\" },\n    { from: \"1000\", to: \"1200\" },\n\n    // Edges from 1.1\n    { from: \"1100\", to: \"1110\" },\n    { from: \"1100\", to: \"1120\" },\n\n    // Edges from 1.1.1\n    { from: \"1110\", to: \"1111\" },\n    // Edges from 1.1.2\n    { from: \"1120\", to: \"1121\" },\n\n    // Edges from 1.2\n    { from: \"1200\", to: \"1210\" },\n    { from: \"1200\", to: \"1220\" },\n\n    // Edges from 1.2.1\n    { from: \"1210\", to: \"1211\" },\n    // Edges from 1.2.2\n    { from: \"1220\", to: \"1221\" },\n];\n\nconst actvitiesExamples: ActivityVertex[] = [\n    {\n        outputId: \"1111\",\n        id: \"0\",\n        text: \"\"\n    },\n    {\n        outputId: \"1111\",\n        id: \"1\",\n        text: \"\"\n    },\n    {\n        outputId: \"1111\",\n        id: \"2\",\n        text: \"\"\n    },\n    {\n        outputId: \"1121\",\n        id: \"0\",\n        text: \"\"\n    },\n    {\n        outputId: \"1121\",\n        id: \"1\",\n        text: \"\"\n    },\n    {\n        outputId: \"1211\",\n        id: \"0\",\n        text: \"\"\n    },\n    {\n        outputId: \"1211\",\n        id: \"1\",\n        text: \"\"\n    },\n    {\n        outputId: \"1211\",\n        id: \"2\",\n        text: \"\"\n    },\n]\n\nconst actmatrixGraphExample = new LogicModelActivitiesMatrix(vertexExample, edgesExample, actvitiesExamples);\n\nconst stakeholders = new Stakeholders([\n    {\n        id: 0,\n        name: \"Stakeholder1 Ben\",\n        category: categories.beneficiary,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 1,\n        name: \"Stakeholder2 Ben\",\n        category: categories.beneficiary,\n        main: false,\n        orderInGroup: 1\n    },\n    {\n        id: 2,\n        name: \"Stakeholder3 Ben\",\n        category: categories.beneficiary,\n        main: false,\n        orderInGroup: 2\n    },\n    {\n        id: 3,\n        name: \"Stakeholder4 Don\",\n        category: categories.donor,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 4,\n        name: \"Stakeholder5 Imp\",\n        category: categories.implementer,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 5,\n        name: \"Stakeholder6 Int\",\n        category: categories.intermediary,\n        main: true,\n        orderInGroup: 0\n    },\n    {\n        id: 6,\n        name: \"Stakeholder7 Int\",\n        category: categories.intermediary,\n        main: false,\n        orderInGroup: 1\n    },\n    {\n        id: 7,\n        name: \"Stakeholder8 Other\",\n        category: categories.other,\n        main: false,\n        orderInGroup: 0\n    },\n])\n\nconst initialState: IProject = {\n    info: initialProjectInfoState,\n    methodology: \"canadian\",\n    forms: [\n        { name: \"logicModelActivities\", structure: actmatrixGraphExample },\n        { name: \"stakeholders\", structure: stakeholders },\n    ],\n}\n\nconst projectSlice = createSlice({\n    name: \"project\",\n    initialState,\n    reducers: {\n        setCurrentProject: (state, action) => {\n            state = action.payload;\n        },\n    },\n});\n\nexport const selectProject = (state: IState) => state.project;\nexport const { setCurrentProject } = projectSlice.actions;\n\nexport default projectSlice.reducer;\n"],"sourceRoot":""}