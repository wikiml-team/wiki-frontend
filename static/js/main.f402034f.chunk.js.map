{"version":3,"sources":["pages/main.tsx","components/fullscreentoogler.js","components/menus/commands/faritems.tsx","components/sidepanel/index.tsx","i18n.js","languages/languageSlice.tsx","components/sidepanel/languagepanel.tsx","themes/office.tsx","themes/themeSlice.tsx","components/styled/shapes.tsx","components/pickers/themepicker.tsx","components/sidepanel/settings/settingspanel.tsx","components/menus/commands/index.tsx","components/menus/commands/items.tsx","components/menus/mainmenu/toolbar.tsx","components/menus/pagesbar/addbutton.tsx","components/menus/pagesbar/pagestabs.tsx","components/menus/pagesbar/index.tsx","pages/methodologies/canadian/projectforms/generalform.tsx","pages/methodologies/canadian/licitationforms/specificationsform.tsx","pages/methodologies/canadian/tutorials/formstutorial.tsx","components/styled/pagecontainer.tsx","components/menus/mainmenu/pivotbar.tsx","components/menus/mainmenu/teampile.tsx","pages/methodologies/canadian/projectforms/stakeholdersform.tsx","pages/methodologies/canadian/projectforms/logicmodelform.tsx","pages/methodologies/canadian/projectforms/activitiesform.tsx","pages/methodologies/canadian/projectforms/performanceform.tsx","pages/methodologies/canadian/projectforms/risksform.tsx","pages/methodologies/canadian/projectforms/budgetform.tsx","pages/methodologies/canadian/projectforms/reportsform.tsx","pages/methodologies/canadian/licitationforms/lotform.tsx","pages/methodologies/canadian/licitationforms/technicalofferform.tsx","pages/methodologies/canadian/licitationforms/financialofferform.tsx","pages/methodologies/canadian/tutorials/sectorstutorial.tsx","pages/methodologies/canadian/tutorials/guidestutorial.tsx","pages/methodologies/canadian/tutorials/methodologytutorials.tsx","pages/methodologies/canadian/tutorials/outcomestutorial.tsx","pages/methodologies/canadian/tutorials/indicatorstutorial.tsx","components/menus/mainmenu/maintabs.tsx","components/menus/mainmenu/index.tsx","layouts/workplace.tsx","routes.tsx","App.tsx","reportWebVitals.ts","components/sidepanel/settings/settingslice.tsx","store/index.tsx","index.tsx"],"names":["Main","Fragment","to","fullscreenToggler","elem","document","documentElement","fullscreenElement","exitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","SidePanel","props","Panel","headerText","header","isBlocking","isOpen","onDismiss","handleClose","closeButtonAriaLabel","styles","root","marginTop","content","paddingTop","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","resources","en","English","es","Spanish","LanguageSlice","createSlice","name","initialState","language","reducers","setLanguage","state","action","payload","changeLanguage","setEnglish","setSpanish","selectLang","actions","LanguagePanel","t","useTranslation","lang","useSelector","dispatch","useDispatch","suportedLangs","key","text","Stack","tokens","childrenGap","Dropdown","label","defaultSelectedKey","undefined","placeholder","options","onChange","event","item","themeWord","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","themeExcel","themePowerPoint","themeTeams","themeSlice","setTheme","loadTheme","setThemeWord","setThemeExcel","setThemePowerPoint","setThemeTeams","StyledCircle","styled","div","Circle","classes","mergeStyleSets","circleprops","height","size","width","backgroundColor","color","border","onClick","className","classnames","ThemePicker","colorCells","handler","useTheme","circle","cursor","map","cell","ariaLabel","id","SettingsPanel","nameTextFieldStyles","fieldGroup","borderColor","separatorProps","alignContent","background","Separator","Text","variant","Item","TextField","defaultValue","Label","Persona","PersonaSize","size40","initialsColor","PersonaInitialsColor","cyan","horizontal","CommandMenu","comandBarStyles","padding","zIndex","textStyles","position","top","left","transform","useState","languagePanelOpen","setLanguagePanelOpen","settingsPanelOpen","setSettingsPanelOpen","OpenLanguagePanel","useCallback","CloseLanguagePanel","OpenSettingsPanel","CloseSettingsPanel","whiteIconStyle","blackIconStyle","blueButtonStyles","rootHovered","rootPressed","iconHovered","iconPressed","overflowProps","rootExpanded","rootExpandedHovered","menuIcon","mainItems","iconProps","iconName","iconOnly","buttonStyles","console","log","overflowItems","getItems","farItems","userButtonStyles","borderLeft","borderWidth","labelHovered","farButtonStyles","alert","getFarItems","CommandBar","items","overflowButtonProps","ToolBar","borderBottom","children","AddButton","IconButton","PagesTabs","tabs","addButton","handleOnClick","getTabId","parentKey","defaultKey","pivotStyles","link","fontSize","FontSizes","small","linkIsSelected","fontWeight","FontWeights","semibold","Pivot","linkFormat","aria-label","selectedKey","onLinkClick","ev","headersOnly","tab","PivotItem","itemKey","itemIcon","icon","render","PagesBar","stackProps","bottom","separatorStyles","childtabs","addtabs","vertical","GeneralForm","SpecificationsForm","FormsTutorials","Container","PageContainer","PivotBar","key1","key2","key3","key4","key5","key6","selectedPageTabs","setSelectedPageTabs","lastFormsRendered","setLastFormsRendered","currentPage","setCurrentPage","handlePageTabOnClick","parentkey","newTabsState","newFormsRenderedState","aria-labelledby","role","FacePileStyles","right","itemButton","margin","faces","personaName","gray","gold","lightGreen","warmGray","blue","green","darkBlue","purple","orange","TeamPile","Facepile","personas","personaSize","size24","maxDisplayablePersonas","overflowButtonType","OverflowButtonType","descriptive","addButtonProps","href","ariaDescription","StakeholdersForm","LogicModelForm","ActivitiesMatrixForm","PerformanceMeasureForm","RisksForm","BudgetForm","ReportsForm","LotForm","TechnicalOfferForm","FinancialOfferForm","SectorsTutorials","GuidesTutorials","MethodologyTutorials","OutcomesTutorial","IndicatorsTutorial","MainMenu","topstickybar","bottomstickybar","WorkplaceLayout","Routes","path","WorkplaceSwitcher","main","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HelpSlice","toogleHelp","setHelp","removeHelp","store","configureStore","reducer","theme","themeReducer","languageReducer","help","helpReducer","getState","initializeIcons","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f402034f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Main() {\n  return (\n    <React.Fragment>\n      <Link to=\"/workplace\">Workplace</Link>\n    </React.Fragment>\n  );\n}\n","export function fullscreenToggler() {\n  var elem = document.documentElement;\n\n  if (document.fullscreenElement) {\n    document.exitFullscreen();\n  } else {\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    }\n  }\n}\n","import {\n  IButtonStyles,\n  ICommandBarItemProps,\n  IIconStyles,\n  IPalette,\n} from \"@fluentui/react\";\n\nimport { fullscreenToggler } from \"components/fullscreentoogler\";\n\ntype FarItemsProps = {\n  OpenLanguagePanel: () => void;\n  OpenSettingsPanel: () => void;\n  palette: IPalette;\n  t: Function;\n};\n\nexport const getFarItems = (props: FarItemsProps) => {\n  // STYLE\n  const { OpenLanguagePanel, OpenSettingsPanel, palette, t } = props;\n\n  // Button & Icon Styles\n  const whiteIconStyle: IIconStyles = { root: { color: palette.white } };\n\n  const userButtonStyles: IButtonStyles = {\n    root: {\n      borderLeft: \"2px solid \" + palette.neutralQuaternaryAlt,\n      borderWidth: \"thin\",\n      backgroundColor: palette.themePrimary,\n      color: palette.white,\n    },\n    rootHovered: {\n      background: palette.themeDarkAlt,\n    },\n    rootPressed: {\n      backgroundColor: palette.themePrimary,\n    },\n    iconHovered: {\n      color: palette.white,\n    },\n    iconPressed: {\n      color: palette.neutralQuaternaryAlt,\n    },\n    labelHovered: {\n      color: palette.white,\n    },\n    label: {\n      \":active\": {\n        color: palette.white,\n      },\n    },\n  };\n\n  const farButtonStyles: IButtonStyles = {\n    root: {\n      backgroundColor: palette.themePrimary,\n    },\n    rootHovered: {\n      backgroundColor: palette.themePrimary,\n    },\n    rootPressed: {\n      backgroundColor: palette.themePrimary,\n    },\n    iconHovered: {\n      color: palette.white,\n    },\n    iconPressed: {\n      color: palette.neutralQuaternaryAlt,\n    },\n  };\n\n  // LOGIC\n  return [\n    {\n      key: \"fullscreen\",\n      text: t(\"fullscreen\"),\n      ariaLabel: \"Full Screen\",\n      iconOnly: true,\n      iconProps: { iconName: \"FullScreen\", styles: whiteIconStyle },\n      onClick: fullscreenToggler,\n      buttonStyles: farButtonStyles,\n    },\n    {\n      key: \"language\",\n      text: t(\"language\"),\n      ariaLabel: \"Language\",\n      iconOnly: true,\n      iconProps: { iconName: \"LocaleLanguage\", styles: whiteIconStyle },\n      onClick: OpenLanguagePanel,\n      buttonStyles: farButtonStyles,\n    },\n    {\n      key: \"settings\",\n      text: t(\"settings\"),\n      ariaLabel: \"Change Settings\",\n      iconOnly: true,\n      iconProps: { iconName: \"Settings\", styles: whiteIconStyle },\n      onClick: OpenSettingsPanel,\n      buttonStyles: farButtonStyles,\n    },\n    {\n      key: \"notifications\",\n      text: t(\"notifications\"),\n      ariaLabel: \"Change Notifications\",\n      iconOnly: true,\n      iconProps: { iconName: \"Ringer\", styles: whiteIconStyle },\n      // onClick: () => void,\n      buttonStyles: farButtonStyles,\n    },\n    {\n      key: \"user\",\n      text: \"Gabriela Rodríguez\",\n      ariaLabel: \"User name\",\n      iconProps: { iconName: \"Contact\", styles: whiteIconStyle },\n      onClick: () => alert(\"Contact\"),\n      buttonStyles: userButtonStyles,\n    },\n  ] as ICommandBarItemProps[];\n};\n","import { Panel, IPanelStyles } from \"@fluentui/react\";\n\ntype SidePanelProps = {\n  header: string;\n  content: JSX.Element;\n  isOpen: boolean;\n  handleClose: () => void;\n};\n\nexport default function SidePanel(props: SidePanelProps) {\n  // Panel Styles\n  const PanelStyles: Partial<IPanelStyles> = {\n    root: {\n      marginTop: 70,\n    },\n    content: {\n      paddingTop: 50,\n    },\n  };\n\n  return (\n    <Panel\n      headerText={props.header}\n      isBlocking={false}\n      isOpen={props.isOpen}\n      onDismiss={props.handleClose}\n      closeButtonAriaLabel=\"Close\"\n      styles={PanelStyles}\n    >\n      {props.content}\n    </Panel>\n  );\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// import Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport English from \"languages/locales/en.json\";\nimport Spanish from \"languages/locales/es.json\";\n\ni18n\n  // .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    // debug: true,\n    resources: {\n      en: English,\n      es: Spanish,\n    },\n  });\n\nexport default i18n;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport IState from \"models/state\";\nimport i18n from \"i18n\";\n\nconst LanguageSlice = createSlice({\n  name: \"language\",\n  initialState: i18n.language,\n  reducers: {\n    setLanguage: (state, action) => {\n      const { payload } = action;\n      i18n.changeLanguage(payload);\n      return (state = payload);\n    },\n    setEnglish: (state) => {\n      i18n.changeLanguage(state);\n      return (state = \"en\");\n    },\n    setSpanish: (state) => {\n      i18n.changeLanguage(state);\n      return (state = \"es\");\n    },\n  },\n});\n\nexport const selectLang = (state: IState) => state.language;\nexport const { setLanguage, setEnglish, setSpanish } = LanguageSlice.actions;\n\nexport default LanguageSlice.reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  IDropdownOption,\n  IStackTokens,\n  Stack,\n} from \"@fluentui/react\";\n\nimport { setLanguage, selectLang } from \"languages/languageSlice\";\n\nexport default function LanguagePanel() {\n  const { t } = useTranslation([\"sidepanel\", \"lenguages\"]);\n  const lang = useSelector(selectLang);\n\n  const dispatch = useDispatch();\n\n  const handleDataOnChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption<any>\n  ) => {\n    if (item) dispatch(setLanguage(item.key));\n  };\n\n  const stackTokens: IStackTokens = { childrenGap: 20 };\n\n  const suportedLangs = [\n    { key: \"en\", text: t(\"lenguages:en\") },\n    { key: \"es\", text: t(\"lenguages:es\") },\n    { key: \"de\", text: t(\"lenguages:de\") },\n  ];\n\n  return (\n    <Stack tokens={stackTokens}>\n      <Dropdown\n        label={t(\"langUI\")}\n        defaultSelectedKey={lang ? lang : undefined}\n        placeholder={t(\"selectlang\")}\n        options={suportedLangs}\n        onChange={handleDataOnChange}\n      />\n      <Dropdown\n        label={t(\"langdata\")}\n        placeholder={t(\"selectlang\")}\n        options={suportedLangs}\n        onChange={() => {}}\n      />\n    </Stack>\n  );\n}\n","import { createTheme } from \"@fluentui/react\";\n\nexport const themeWord = createTheme({\n  palette: {\n    themePrimary: \"#2b579a\",\n    themeLighterAlt: \"#f4f7fb\",\n    themeLighter: \"#d3deef\",\n    themeLight: \"#b0c3e0\",\n    themeTertiary: \"#6e90c2\",\n    themeSecondary: \"#3d66a5\",\n    themeDarkAlt: \"#274e8a\",\n    themeDark: \"#214274\",\n    themeDarker: \"#183156\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themeExcel = createTheme({\n  palette: {\n    themePrimary: \"#217346\",\n    themeLighterAlt: \"#f2f9f5\",\n    themeLighter: \"#cee9da\",\n    themeLight: \"#a8d5bc\",\n    themeTertiary: \"#62ab83\",\n    themeSecondary: \"#318456\",\n    themeDarkAlt: \"#1e673f\",\n    themeDark: \"#195735\",\n    themeDarker: \"#134027\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themePowerPoint = createTheme({\n  palette: {\n    themePrimary: \"#b7472a\",\n    themeLighterAlt: \"#fcf6f4\",\n    themeLighter: \"#f4dcd6\",\n    themeLight: \"#eabeb4\",\n    themeTertiary: \"#d48672\",\n    themeSecondary: \"#c0583e\",\n    themeDarkAlt: \"#a53f26\",\n    themeDark: \"#8c3620\",\n    themeDarker: \"#672718\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport const themeTeams = createTheme({\n  palette: {\n    themePrimary: \"#6264a7\",\n    themeLighterAlt: \"#f7f7fb\",\n    themeLighter: \"#e1e1f1\",\n    themeLight: \"#c8c9e4\",\n    themeTertiary: \"#989ac9\",\n    themeSecondary: \"#7173b0\",\n    themeDarkAlt: \"#585a95\",\n    themeDark: \"#4a4c7e\",\n    themeDarker: \"#37385d\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#a19f9d\",\n    neutralSecondary: \"#605e5c\",\n    neutralPrimaryAlt: \"#3b3a39\",\n    neutralPrimary: \"#323130\",\n    neutralDark: \"#201f1e\",\n    black: \"#000000\",\n    white: \"#ffffff\",\n  },\n});\n\nexport default themeWord;\n","import { IPartialTheme, loadTheme } from \"@fluentui/react\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  themeExcel,\n  themeWord,\n  themePowerPoint,\n  themeTeams,\n} from \"themes/office\";\nimport IState from \"models/state\";\n\nconst themeSlice = createSlice({\n  name: \"theme\",\n  initialState: themeWord,\n  reducers: {\n    setTheme: (state, action) => {\n      const { payload } = action;\n\n      switch (payload) {\n        case \"word\":\n          state = themeWord;\n          break;\n        case \"excel\":\n          state = themeExcel;\n          break;\n        case \"powerpoint\":\n          state = themePowerPoint;\n          break;\n        case \"teams\":\n          state = themeTeams;\n          break;\n      }\n      loadTheme(state as IPartialTheme);\n    },\n    setThemeWord: (state) => {\n      state = themeWord;\n      loadTheme(themeWord);\n    },\n    setThemeExcel: (state) => {\n      state = themeExcel;\n      loadTheme(themeExcel);\n    },\n    setThemePowerPoint: (state) => {\n      state = themePowerPoint;\n      loadTheme(themePowerPoint);\n    },\n    setThemeTeams: (state) => {\n      state = themeTeams;\n      loadTheme(themeTeams);\n    },\n  },\n});\n\nexport const selectTheme = (state: IState) => state.theme;\nexport const {\n  setTheme,\n  setThemeExcel,\n  setThemePowerPoint,\n  setThemeTeams,\n  setThemeWord,\n} = themeSlice.actions;\n\nexport default themeSlice.reducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport classnames from \"classnames\";\nimport { mergeStyleSets } from \"@fluentui/react\";\n\ninterface CircleProps {\n  ariaLabel?: string;\n  size: string;\n  color: string;\n  border: string;\n  className?: string;\n  onClick?: () => void;\n}\n\nconst StyledCircle = styled.div`\n  border-radius: 50%;\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n`;\n\nexport function Circle(props: CircleProps) {\n  const classes = mergeStyleSets({\n    circleprops: {\n      height: props.size,\n      width: props.size,\n      backgroundColor: props.color,\n      border: \"4px solid \" + props.border,\n    },\n  });\n\n  return (\n    <StyledCircle\n      onClick={props.onClick}\n      className={classnames(props.className, classes.circleprops)}\n    />\n  );\n}\n","import React from \"react\";\nimport { IColorCellProps, mergeStyleSets, useTheme } from \"@fluentui/react\";\nimport { Circle } from \"components/styled/shapes\";\n\ntype SwatchThemePickerProps = {\n  colorCells: IColorCellProps[];\n  size: string;\n  handler: (id: string) => void;\n};\n\nexport default function ThemePicker(props: SwatchThemePickerProps) {\n  const { colorCells, handler, size } = props;\n\n  // STYLES\n  const palette = useTheme().palette;\n  const classes = mergeStyleSets({\n    circle: {\n      \":hover\": {\n        cursor: \"pointer\",\n        border: \"solid 4px \" + palette.neutralLighter,\n      },\n    },\n  });\n\n  return (\n    <React.Fragment>\n      {colorCells.map((cell) => {\n        return (\n          <div key={cell.id}>\n            <Circle\n              ariaLabel={cell.label}\n              size={size}\n              color={cell.color}\n              border={palette.neutralQuaternaryAlt}\n              onClick={() => handler(cell.label || \"\")}\n              className={classes.circle}\n            />\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  IColorCellProps,\n  ISeparatorProps,\n  ITextFieldStyles,\n  Label,\n  Persona,\n  PersonaInitialsColor,\n  PersonaSize,\n  Separator,\n  Stack,\n  Text,\n  TextField,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { setTheme } from \"themes/themeSlice\";\nimport ThemePicker from \"components/pickers/themepicker\";\n\nconst colorCells: IColorCellProps[] = [\n  { id: \"1\", label: \"word\", color: \"#2b579a\" },\n  { id: \"2\", label: \"excel\", color: \"#217346\" },\n  { id: \"3\", label: \"powerpoint\", color: \"#a92b1a\" },\n  { id: \"4\", label: \"teams\", color: \"#6264a7\" },\n];\n\nexport default function SettingsPanel() {\n  // STYLES\n  const palette = useTheme().palette;\n\n  // TextField Styles\n  const nameTextFieldStyles: Partial<ITextFieldStyles> = {\n    fieldGroup: {\n      borderColor: palette.neutralTertiary,\n      \":hover\": {\n        borderColor: palette.neutralSecondary,\n      },\n      \"::after\": {\n        borderColor: palette.neutralPrimaryAlt,\n      },\n    },\n  };\n\n  // Horizontal Separators\n  const separatorProps: Partial<ISeparatorProps> = {\n    alignContent: \"end\",\n    styles: {\n      root: {\n        \"::before\": {\n          background: palette.neutralTertiaryAlt,\n          height: 0.4,\n        },\n      },\n    },\n  };\n\n  // LOGIC\n  const { t } = useTranslation([\"sidepanel\", \"lenguages\"]);\n  const dispatch = useDispatch();\n\n  return (\n    <Stack tokens={{ childrenGap: 15 }}>\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>User</b>\n        </Text>\n      </Separator>\n      {/* NAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"name\")}\n          defaultValue=\"Gabriela Rodríguez\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* NICKNAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"nick\")}\n          defaultValue=\"Gabi\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* COIN */}\n      <Stack.Item>\n        <Label>{t(\"coin\")}</Label>\n        <Persona\n          text=\"Gabriela Rodríguez\"\n          size={PersonaSize.size40}\n          initialsColor={PersonaInitialsColor.cyan}\n        />\n      </Stack.Item>\n      <br />\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>{t(\"theme\")}</b>\n        </Text>\n      </Separator>\n      {/* <Stack.Item>\n        <Toggle\n          label=\"Select a theme\"\n          defaultChecked\n          onText=\"Dark\"\n          offText=\"Light\"\n          onChange={handleChangeTheme}\n        />\n      </Stack.Item> */}\n      <Stack.Item>\n        <Label>{t(\"colortheme\")}</Label>\n        <Stack horizontal tokens={{ childrenGap: 5 }}>\n          <ThemePicker\n            colorCells={colorCells}\n            size=\"30px\"\n            handler={(key) => dispatch(setTheme(key))}\n          />\n        </Stack>\n      </Stack.Item>\n    </Stack>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  CommandBar,\n  ICommandBarStyles,\n  ITextStyles,\n  Text,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { getItems } from \"./items\";\nimport { getFarItems } from \"./faritems\";\nimport SidePanel from \"components/sidepanel\";\nimport LanguagePanel from \"components/sidepanel/languagepanel\";\nimport SettingsPanel from \"components/sidepanel/settings/settingspanel\";\n\nexport default function CommandMenu() {\n  const palette = useTheme().palette;\n\n  // ComandBar Styles\n  const comandBarStyles: Partial<ICommandBarStyles> = {\n    root: {\n      height: 36,\n      padding: 0,\n      zIndex: 100,\n      backgroundColor: palette.themePrimary,\n    },\n  };\n\n  // ComandBar Styles\n  const textStyles: Partial<ITextStyles> = {\n    root: {\n      position: \"absolute\",\n      top: 10,\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      color: palette.themeLight,\n      zIndex: 999,\n    },\n  };\n\n  // Panel State\n  const [languagePanelOpen, setLanguagePanelOpen] = useState(false);\n  const [settingsPanelOpen, setSettingsPanelOpen] = useState(false);\n\n  const OpenLanguagePanel = useCallback(() => {\n    setLanguagePanelOpen(true);\n    setSettingsPanelOpen(false);\n  }, []);\n  const CloseLanguagePanel = useCallback(() => setLanguagePanelOpen(false), []);\n\n  const OpenSettingsPanel = useCallback(() => {\n    setSettingsPanelOpen(true);\n    setLanguagePanelOpen(false);\n  }, []);\n  const CloseSettingsPanel = useCallback(() => setSettingsPanelOpen(false), []);\n\n  const { t } = useTranslation([\"commands\", \"sidepanel\", \"methodologies\"]);\n  const { mainItems, overflowItems, overflowProps } = getItems({ palette, t });\n  const farItems = getFarItems({\n    OpenLanguagePanel,\n    OpenSettingsPanel,\n    palette,\n    t,\n  });\n\n  return (\n    <React.Fragment>\n      <Text variant=\"small\" styles={textStyles}>\n        Project 1 - {t(\"methodologies:canadian\")}\n      </Text>\n      <CommandBar\n        items={mainItems}\n        overflowItems={overflowItems}\n        overflowButtonProps={overflowProps}\n        farItems={farItems}\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\n        styles={comandBarStyles}\n      />\n      <SidePanel\n        header={t(\"sidepanel:headerlang\")}\n        content={<LanguagePanel />}\n        isOpen={languagePanelOpen}\n        handleClose={CloseLanguagePanel}\n      />\n      <SidePanel\n        header={t(\"sidepanel:headersettings\")}\n        content={<SettingsPanel />}\n        isOpen={settingsPanelOpen}\n        handleClose={CloseSettingsPanel}\n      />\n    </React.Fragment>\n  );\n}\n","import {\n  IButtonProps,\n  IButtonStyles,\n  ICommandBarItemProps,\n  IIconStyles,\n  IPalette,\n} from \"@fluentui/react\";\n\ntype getItemsProps = {\n  palette: IPalette;\n  t: Function;\n};\n\n// Items of the command bar\nexport const getItems = (props: getItemsProps) => {\n  const { palette, t } = props;\n\n  // Icons Styles\n  const whiteIconStyle: IIconStyles = { root: { color: palette.white } };\n  const blackIconStyle: IIconStyles = { root: { color: palette.black } };\n\n  // Button Styles\n  const blueButtonStyles: IButtonStyles = {\n    root: {\n      backgroundColor: palette.themePrimary,\n    },\n    rootHovered: {\n      backgroundColor: palette.themeDark,\n    },\n    rootPressed: {\n      backgroundColor: palette.themeDarker,\n    },\n    iconHovered: {\n      color: palette.white,\n    },\n    iconPressed: {\n      color: palette.white,\n    },\n  };\n\n  const overflowButtonStyles: IButtonStyles = {\n    root: {\n      backgroundColor: palette.themePrimary,\n    },\n    rootHovered: {\n      backgroundColor: palette.themeDark,\n    },\n    rootPressed: {\n      backgroundColor: palette.themeDarker,\n    },\n    rootExpanded: {\n      backgroundColor: palette.themeDarker,\n    },\n    rootExpandedHovered: {\n      backgroundColor: palette.themeDark,\n    },\n    menuIcon: {\n      color: palette.white + \" !important\",\n    },\n  };\n\n  // Buttons Props\n  const overflowProps: IButtonProps = {\n    ariaLabel: \"More commands\",\n    styles: overflowButtonStyles,\n  };\n\n  const mainItems: ICommandBarItemProps[] = [\n    {\n      key: \"goback\",\n      iconProps: { iconName: \"Undo\", styles: whiteIconStyle },\n      text: t(\"undo\"),\n      iconOnly: true,\n      buttonStyles: blueButtonStyles,\n    },\n    {\n      key: \"goforward\",\n      iconProps: { iconName: \"Redo\", styles: whiteIconStyle },\n      text: t(\"redo\"),\n      iconOnly: true,\n      buttonStyles: blueButtonStyles,\n    },\n    {\n      key: \"share\",\n      iconProps: { iconName: \"Share\", styles: whiteIconStyle },\n      text: t(\"share\"),\n      iconOnly: true,\n      onClick: () => console.log(\"Share\"),\n      buttonStyles: blueButtonStyles,\n    },\n    {\n      key: \"export\",\n      iconProps: { iconName: \"Export\", styles: whiteIconStyle },\n      text: t(\"export\"),\n      iconOnly: true,\n      onClick: () => console.log(\"Export\"),\n      buttonStyles: blueButtonStyles,\n    },\n  ] as ICommandBarItemProps[];\n\n  const overflowItems: ICommandBarItemProps[] = [\n    {\n      key: \"new\",\n      text: t(\"newproject\"),\n      onClick: () => console.log(\"Move to\"),\n      iconProps: {\n        iconName: \"Document\",\n        styles: blackIconStyle,\n      },\n      buttonStyles: blueButtonStyles,\n    },\n    {\n      key: \"open\",\n      text: t(\"openproject\"),\n      onClick: () => console.log(\"Open Project\"),\n      iconProps: { iconName: \"OpenFolderHorizontal\", styles: blackIconStyle },\n      buttonStyles: blueButtonStyles,\n    },\n    {\n      key: \"Destroy\",\n      text: t(\"destroyproject\"),\n      onClick: () => console.log(\"Destroy project\"),\n      iconProps: { iconName: \"PageRemove\", styles: blackIconStyle },\n      buttonStyles: blueButtonStyles,\n    },\n    {\n      key: \"Duplicate\",\n      text: t(\"duplicate\"),\n      onClick: () => console.log(\"Duplicate project\"),\n      iconProps: { iconName: \"Documentation\", styles: blackIconStyle },\n      buttonStyles: blueButtonStyles,\n    },\n    {\n      key: \"Print\",\n      text: t(\"print\"),\n      onClick: () => console.log(\"Print project\"),\n      iconProps: { iconName: \"Print\", styles: blackIconStyle },\n      buttonStyles: blueButtonStyles,\n    },\n  ];\n\n  return { mainItems, overflowItems, overflowProps };\n};\n","import { mergeStyleSets, useTheme } from \"@fluentui/react\";\nimport { FunctionComponent } from \"react\";\n\nconst ToolBar: FunctionComponent = (props) => {\n  // STYLES\n  const palette = useTheme().palette;\n  const classes = mergeStyleSets({\n    root: {\n      height: 94,\n      padding: \"4px 10px 2px 10px\",\n      backgroundColor: palette.neutralLighter,\n      borderBottom: \"1px solid #E0E0E0\",\n      color: palette.black,\n    },\n  });\n\n  return <div className={classes.root}>{props.children}</div>;\n};\n\nexport default ToolBar;\n","import { IconButton, useTheme } from \"@fluentui/react\";\n\nexport default function AddButton() {\n  const palette = useTheme().palette;\n\n  return (\n    <IconButton\n      iconProps={{ iconName: \"CircleAddition\" }}\n      styles={{ root: { color: palette.black } }}\n      onClick={() => alert(\"Add an instrument\")}\n    />\n  );\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  FontSizes,\n  FontWeights,\n  IPivotStyles,\n  Pivot,\n  PivotItem,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { PivotTabs } from \"../mainmenu/maintabs\";\nimport AddButton from \"./addbutton\";\n\ntype PagesTabProps = {\n  tabs?: PivotTabs[];\n  addButton?: boolean;\n  defaultKey?: string;\n  parentKey: string;\n  getTabId: (itemKey: string, index: number) => string;\n  handleOnClick: (parentkey: string, item?: PivotItem) => void;\n};\n\nexport default function PagesTabs(props: PagesTabProps) {\n  const {\n    tabs,\n    addButton,\n    handleOnClick,\n    getTabId,\n    parentKey,\n    defaultKey,\n  } = props;\n\n  const { t } = useTranslation(\"pages\");\n\n  // STYLES\n  const palette = useTheme().palette;\n  const pivotStyles: Partial<IPivotStyles> = {\n    root: {\n      height: 34,\n      backgroundColor: palette.neutralLight,\n    },\n    link: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralLight,\n      color: palette.black,\n      fontSize: FontSizes.small,\n      \":hover\": {\n        backgroundColor: palette.neutralQuaternaryAlt,\n        color: palette.black,\n      },\n      \":active\": {\n        backgroundColor: palette.neutralTertiaryAlt,\n        color: palette.black,\n      },\n      \":focus\": {\n        backgroundColor: palette.neutralQuaternaryAlt,\n        color: palette.black,\n      },\n    },\n    linkIsSelected: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralTertiaryAlt + \" !important\",\n      color: palette.black + \" !important\",\n      fontWeight: FontWeights.semibold + \" !important\",\n    },\n  };\n\n  return (\n    <React.Fragment>\n      <Pivot\n        linkFormat=\"tabs\"\n        styles={pivotStyles}\n        aria-label=\"Pages Pivot\"\n        selectedKey={defaultKey}\n        onLinkClick={(\n          item?: PivotItem,\n          ev?: React.MouseEvent<HTMLElement, MouseEvent>\n        ) => handleOnClick(parentKey, item)}\n        headersOnly={true}\n        getTabId={getTabId}\n      >\n        {tabs &&\n          tabs.map((tab) => {\n            return (\n              <PivotItem\n                key={tab.key}\n                headerText={t(tab.name)}\n                itemKey={tab.key}\n                itemIcon={tab.icon}\n              >\n                {tab.render}\n              </PivotItem>\n            );\n          })}\n      </Pivot>\n      {addButton && <AddButton />}\n    </React.Fragment>\n  );\n}\n","import {\n  ISeparatorStyles,\n  IStackProps,\n  PivotItem,\n  Separator,\n  Stack,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { PivotTabs } from \"../mainmenu/maintabs\";\nimport PagesTabs from \"./pagestabs\";\n\ntype PagesBarProps = {\n  tab: PivotTabs;\n  defaultKey?: string;\n  getTabId: (itemKey: string, index: number) => string;\n  handleOnClick: (parentkey: string, item?: PivotItem) => void;\n};\n\nexport default function PagesBar(props: PagesBarProps) {\n  const { tab, handleOnClick, getTabId, defaultKey } = props;\n\n  // STYLES\n  const palette = useTheme().palette;\n\n  const stackProps: Partial<IStackProps> = {\n    horizontal: true,\n    styles: {\n      root: {\n        height: 34,\n        position: \"fixed\",\n        bottom: 0,\n        zIndex: 999,\n        width: \"100%\",\n        backgroundColor: palette.neutralLight,\n      },\n    },\n  };\n\n  const separatorStyles: Partial<ISeparatorStyles> = {\n    root: {\n      \"::after\": {\n        backgroundColor: palette.neutralQuaternary,\n      },\n    },\n  };\n\n  return (\n    <Stack {...stackProps}>\n      <PagesTabs\n        tabs={tab.childtabs}\n        addButton={tab.addtabs}\n        parentKey={tab.key}\n        defaultKey={defaultKey}\n        handleOnClick={handleOnClick}\n        getTabId={getTabId}\n      />\n      <Separator vertical styles={separatorStyles} />\n\n      {/* Here goes the horizontal scrollbar when needed for the page */}\n    </Stack>\n  );\n}\n","import React from \"react\";\n\nexport default function GeneralForm() {\n  return <div>General Form</div>;\n}\n","import React from \"react\";\n\nexport default function SpecificationsForm() {\n  return <div>Specification Form</div>;\n}\n","import React from \"react\";\n\nexport default function FormsTutorials() {\n  return <div>Forms Tutorial</div>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 10px;\n`;\n\ninterface PagecontainerProps {\n  className?: string;\n  role?: string;\n}\nexport const PageContainer: React.FunctionComponent<PagecontainerProps> = (\n  props\n) => <Container className={props.className}>{props.children}</Container>;\n","import React, { ReactNode, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  FontSizes,\n  IPivotStyles,\n  Pivot,\n  PivotItem,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { PivotTabs } from \"./maintabs\";\nimport ToolBar from \"./toolbar\";\nimport PagesBar from \"../pagesbar\";\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\nimport { PageContainer } from \"components/styled/pagecontainer\";\n\ntype StringDic = {\n  [index: string]: string;\n};\n\ntype NodeDic = {\n  [index: string]: ReactNode;\n};\n\ntype PivotBarProps = {\n  tabs: PivotTabs[];\n};\n\nexport default function PivotBar(props: PivotBarProps) {\n  // STYLES\n  const palette = useTheme().palette;\n\n  const pivotStyles: Partial<IPivotStyles> = {\n    root: {\n      height: 34,\n      backgroundColor: palette.themePrimary,\n    },\n    link: {\n      height: \"inherit\",\n      backgroundColor: palette.themePrimary,\n      color: palette.white,\n      fontSize: FontSizes.small,\n      \":hover\": {\n        backgroundColor: palette.themeDarkAlt,\n        color: palette.white,\n      },\n      \":active\": {\n        backgroundColor: palette.themeDark,\n        color: palette.white,\n      },\n      \":focus\": {\n        backgroundColor: palette.themePrimary,\n        color: palette.white,\n      },\n    },\n    linkIsSelected: {\n      height: \"inherit\",\n      backgroundColor: palette.neutralLighter + \" !important\",\n      color: palette.black + \" !important\",\n    },\n  };\n\n  // LOGIC\n  const { tabs } = props;\n  const { t } = useTranslation(\"menu\");\n\n  const [selectedPageTabs, setSelectedPageTabs] = useState<StringDic>({\n    key1: \"key1\",\n    key2: \"key1\",\n    key3: \"key1\",\n    key4: \"key1\",\n    key5: \"key1\",\n    key6: \"key1\",\n  });\n\n  const [lastFormsRendered, setLastFormsRendered] = useState<NodeDic>({\n    key1: <React.Fragment />,\n    key2: <GeneralForm />,\n    key3: <SpecificationsForm />,\n    key4: <FormsTutorials />,\n    key5: <React.Fragment />,\n    key6: <React.Fragment />,\n  });\n\n  const [currentPage, setCurrentPage] = useState(\"key1\");\n\n  const getTabId = (itemKey: string) => {\n    return `pivot_${itemKey}`;\n  };\n\n  const handlePageTabOnClick = (parentkey: string, item?: PivotItem) => {\n    if (item) {\n      let newTabsState = selectedPageTabs;\n      newTabsState[parentkey] = item.props.itemKey!;\n      setSelectedPageTabs(newTabsState);\n      setCurrentPage(item.props.itemKey!);\n\n      let newFormsRenderedState = lastFormsRendered;\n      newFormsRenderedState[parentkey] = item.props.children;\n      setLastFormsRendered(newFormsRenderedState);\n    }\n  };\n\n  return (\n    <Pivot\n      aria-label=\"Main menu tabs\"\n      linkFormat=\"tabs\"\n      defaultSelectedKey=\"1\"\n      styles={pivotStyles}\n    >\n      {tabs.map((tab) => {\n        return (\n          <PivotItem key={tab.key} headerText={t(tab.name)} itemIcon={tab.icon}>\n            <ToolBar>{tab.render}</ToolBar>\n\n            <PageContainer\n              aria-labelledby={getTabId(currentPage)}\n              role=\"tabpanel\"\n            >\n              {lastFormsRendered[tab.key]}\n            </PageContainer>\n\n            <PagesBar\n              tab={tab}\n              defaultKey={selectedPageTabs[tab.key]}\n              handleOnClick={handlePageTabOnClick}\n              getTabId={getTabId}\n            />\n          </PivotItem>\n        );\n      })}\n    </Pivot>\n  );\n}\n","import React from \"react\";\nimport {\n  Facepile,\n  OverflowButtonType,\n  IFacepilePersona,\n  IButtonProps,\n  PersonaInitialsColor,\n  IFacepileStyles,\n  PersonaSize,\n} from \"@fluentui/react\";\n\n// OverflowButton Props\nconst overflowButtonProps: Partial<IButtonProps> = {\n  ariaLabel: \"More users\",\n  onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\n    alert(\"overflow icon clicked\"),\n};\n\n// AddButton Props\nconst addButtonProps = () => ({\n  ariaLabel: \"Add a new person\",\n  href: \"/\",\n});\n\n// STYLES\nconst FacePileStyles: Partial<IFacepileStyles> = {\n  root: {\n    position: \"absolute\",\n    top: 38,\n    right: 8,\n    zIndex: 999,\n  },\n  itemButton: {\n    margin: \"0 -2px 0 -2px\",\n  },\n};\n\n// Data\nconst faces: Partial<IFacepilePersona>[] = [\n  {\n    personaName: \"Gabriela Rodríguez\",\n    initialsColor: PersonaInitialsColor.gray,\n  },\n  {\n    personaName: \"Amaury Díaz\",\n    initialsColor: PersonaInitialsColor.gold,\n  },\n  {\n    personaName: \"Iliana Hernandez\",\n    initialsColor: PersonaInitialsColor.lightGreen,\n  },\n  {\n    personaName: \"Laura Rodríguez\",\n    initialsColor: PersonaInitialsColor.warmGray,\n  },\n  {\n    personaName: \"Lili Masters\",\n    initialsColor: PersonaInitialsColor.blue,\n  },\n  {\n    personaName: \"Susana Naranjo\",\n    initialsColor: PersonaInitialsColor.green,\n  },\n  {\n    personaName: \"Lupe Dantes\",\n    initialsColor: PersonaInitialsColor.darkBlue,\n  },\n  {\n    personaName: \"Karen Ganter\",\n    initialsColor: PersonaInitialsColor.lightGreen,\n  },\n  {\n    personaName: \"Josephine Filipie\",\n    initialsColor: PersonaInitialsColor.purple,\n  },\n  {\n    personaName: \"Daniel Hertys\",\n    initialsColor: PersonaInitialsColor.orange,\n  },\n];\n\nexport default function TeamPile() {\n  return (\n    <Facepile\n      personas={faces}\n      personaSize={PersonaSize.size24}\n      maxDisplayablePersonas={4}\n      overflowButtonProps={overflowButtonProps}\n      overflowButtonType={OverflowButtonType.descriptive}\n      addButtonProps={addButtonProps()}\n      ariaDescription=\"To move through the items use left and right arrow keys.\"\n      styles={FacePileStyles}\n    />\n  );\n}\n","import React from \"react\";\n\nexport default function StakeholdersForm() {\n  return <div>Stakeholders Form</div>;\n}\n","import React from \"react\";\n\nexport default function LogicModelForm() {\n  return <div>Logic Model Form</div>;\n}\n","import React from \"react\";\n\nexport default function ActivitiesMatrixForm() {\n  return <div>Activities Matrix Form</div>;\n}\n","import React from \"react\";\n\nexport default function PerformanceMeasureForm() {\n  return <div>Performance Measure Form</div>;\n}\n","import React from \"react\";\n\nexport default function RisksForm() {\n  return <div>Risks Form</div>;\n}\n","import React from \"react\";\n\nexport default function BudgetForm() {\n  return <div>Budget Form</div>;\n}\n","import React from \"react\";\n\nexport default function ReportsForm() {\n  return <div>Reports Form</div>;\n}\n","import React from \"react\";\n\nexport default function LotForm() {\n  return <div>Lot Form</div>;\n}\n","import React from \"react\";\n\nexport default function TechnicalOfferForm() {\n  return <div>Technical Offer Form</div>;\n}\n","import React from \"react\";\n\nexport default function FinancialOfferForm() {\n  return <div>Financial Offer Form</div>;\n}\n","import React from \"react\";\n\nexport default function SectorsTutorials() {\n  return <div>Sectors Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function GuidesTutorials() {\n  return <div>Guides Tutorials</div>;\n}\n","import React from \"react\";\n\nexport default function MethodologyTutorials() {\n  return <div>Methodology Tutorials</div>;\n}\n","import React from \"react\";\n\nexport default function OutcomesTutorial() {\n  return <div>Outcomes Tutorial</div>;\n}\n","import React from \"react\";\n\nexport default function IndicatorsTutorial() {\n  return <div>Indicators Tutorials</div>;\n}\n","import { Redirect } from \"react-router\";\nimport { Label } from \"@fluentui/react\";\n\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\nimport StakeholdersForm from \"pages/methodologies/canadian/projectforms/stakeholdersform\";\nimport LogicModelForm from \"pages/methodologies/canadian/projectforms/logicmodelform\";\nimport ActivitiesMatrixForm from \"pages/methodologies/canadian/projectforms/activitiesform\";\nimport PerformanceMeasureForm from \"pages/methodologies/canadian/projectforms/performanceform\";\nimport RisksForm from \"pages/methodologies/canadian/projectforms/risksform\";\nimport BudgetForm from \"pages/methodologies/canadian/projectforms/budgetform\";\nimport ReportsForm from \"pages/methodologies/canadian/projectforms/reportsform\";\n\nimport LotForm from \"pages/methodologies/canadian/licitationforms/lotform\";\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\nimport TechnicalOfferForm from \"pages/methodologies/canadian/licitationforms/technicalofferform\";\nimport FinancialOfferForm from \"pages/methodologies/canadian/licitationforms/financialofferform\";\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\nimport SectorsTutorials from \"pages/methodologies/canadian/tutorials/sectorstutorial\";\nimport GuidesTutorials from \"pages/methodologies/canadian/tutorials/guidestutorial\";\nimport Tutorials from \"pages/methodologies/canadian/tutorials/methodologytutorials\";\nimport OutcomesTutorial from \"pages/methodologies/canadian/tutorials/outcomestutorial\";\nimport IndicatorsTutorial from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\n\nexport type PivotTabs = {\n  key: string;\n  name: string;\n  icon: string;\n  render?: JSX.Element;\n  addtabs?: boolean;\n  childtabs?: PivotTabs[];\n  onClick?: Function;\n};\n\nexport const maintabs: PivotTabs[] = [\n  {\n    key: \"key1\",\n    name: \"wikiml\",\n    icon: \"WebComponents\",\n    render: <Redirect to=\"/\" />,\n  },\n  {\n    key: \"key2\",\n    name: \"project\",\n    icon: \"Page\",\n    render: <Label>Pivot #1</Label>,\n    addtabs: true,\n    childtabs: [\n      { key: \"key1\", name: \"general\", icon: \"Info\", render: <GeneralForm /> },\n      {\n        key: \"key2\",\n        name: \"stakeholders\",\n        icon: \"Commitments\",\n        render: <StakeholdersForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"logicmodel\",\n        icon: \"LargeGrid\",\n        render: <LogicModelForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"activitiesmatrix\",\n        icon: \"GripperDotsVertical\",\n        render: <ActivitiesMatrixForm />,\n      },\n      {\n        key: \"key5\",\n        name: \"performance\",\n        icon: \"GripperDotsVertical\",\n        render: <PerformanceMeasureForm />,\n      },\n      {\n        key: \"key6\",\n        name: \"risks\",\n        icon: \"DoubleDownArrow\",\n        render: <RisksForm />,\n      },\n      {\n        key: \"key7\",\n        name: \"budget\",\n        icon: \"PaymentCard\",\n        render: <BudgetForm />,\n      },\n      {\n        key: \"key8\",\n        name: \"reports\",\n        icon: \"BarChart4\",\n        render: <ReportsForm />,\n      },\n    ],\n  },\n  {\n    key: \"key3\",\n    name: \"licitations\",\n    icon: \"Library\",\n    render: <Label>Pivot #2</Label>,\n    childtabs: [\n      { key: \"key1\", name: \"lot\", icon: \"OEM\", render: <LotForm /> },\n      {\n        key: \"key2\",\n        name: \"specifications\",\n        icon: \"PageList\",\n        render: <SpecificationsForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"tecoffer\",\n        icon: \"PageListSolid\",\n        render: <TechnicalOfferForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"finoffer\",\n        icon: \"Financial\",\n        render: <FinancialOfferForm />,\n      },\n    ],\n  },\n  {\n    key: \"key4\",\n    name: \"methodology\",\n    icon: \"StackIndicator\",\n    render: <Label>Pivot #3</Label>,\n    childtabs: [\n      {\n        key: \"key1\",\n        name: \"forms\",\n        icon: \"PageData\",\n        render: <FormsTutorials />,\n      },\n      {\n        key: \"key2\",\n        name: \"sectors\",\n        icon: \"Sections\",\n        render: <SectorsTutorials />,\n      },\n      {\n        key: \"key3\",\n        name: \"guides\",\n        icon: \"GUID\",\n        render: <GuidesTutorials />,\n      },\n      {\n        key: \"key4\",\n        name: \"tutorials\",\n        icon: \"Video\",\n        render: <Tutorials />,\n      },\n      {\n        key: \"key5\",\n        name: \"outcomes\",\n        icon: \"ReportDocument\",\n        render: <OutcomesTutorial />,\n      },\n      {\n        key: \"key6\",\n        name: \"indicators\",\n        icon: \"CRMReport\",\n        render: <IndicatorsTutorial />,\n      },\n    ],\n  },\n  {\n    key: \"key5\",\n    name: \"database\",\n    icon: \"Database\",\n    render: <Label>Pivot #4</Label>,\n  },\n  {\n    key: \"key6\",\n    name: \"more\",\n    icon: \"MoreVertical\",\n    render: <Label>Pivot #5</Label>,\n  },\n];\n","import React from \"react\";\n\nimport PivotBar from \"components/menus/mainmenu/pivotbar\";\nimport TeamPile from \"components/menus/mainmenu/teampile\";\nimport { maintabs } from \"./maintabs\";\n\nconst tabs = maintabs;\n\nexport default function MainMenu() {\n  return (\n    <React.Fragment>\n      <PivotBar tabs={tabs} />\n      <TeamPile />\n    </React.Fragment>\n  );\n}\n","import React, { FunctionComponent } from \"react\";\nimport { mergeStyleSets } from \"@fluentui/react\";\n\nimport CommandMenu from \"components/menus/commands/\";\nimport MainMenu from \"components/menus/mainmenu\";\n\nconst classes = mergeStyleSets({\n  topstickybar: {\n    width: \"100%\",\n    position: \"fixed\",\n    top: 0,\n    zIndex: 999,\n  },\n  bottomstickybar: {\n    // width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n    zIndex: 999,\n  },\n});\n\nconst WorkplaceLayout: FunctionComponent = (props) => {\n  return (\n    <React.Fragment>\n      <CommandMenu />\n      <MainMenu />\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nexport default WorkplaceLayout;\n","import main from \"pages/main\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport WorkplaceLayout from \"layouts/workplace\";\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/workplace\" render={WorkplaceSwitcher} />\n        <Route path=\"/\" render={main} />\n      </Switch>\n    </Router>\n  );\n}\n\nconst WorkplaceSwitcher = () => (\n  /* Projects, Methodologies, Licitaciones, Bases de Datos */\n  <WorkplaceLayout>\n    <Switch>\n      {/* <Route path=\"/workplace/project\" render={(ProjectSwitcher} /> */}\n      {/* <Route path=\"/workplace/methodology\" render={MethodologySwitcher} /> */}\n      {/* <Route path=\"/workplace/licitations\" render={MethodologySwitcher} /> */}\n      {/* <Route path=\"/workplace/database\" render={MethodologySwitcher} /> */}\n    </Switch>\n  </WorkplaceLayout>\n);\n","import React, { Suspense } from \"react\";\nimport Routes from \"routes\";\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Routes />\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport IState from \"models/state\";\n\nconst HelpSlice = createSlice({\n  name: \"helpTooltips\",\n  initialState: true,\n  reducers: {\n    toogleHelp: (state) => {\n      return !state;\n    },\n    setHelp: (state) => {\n      return (state = true);\n    },\n    removeHelp: (state) => {\n      return (state = false);\n    },\n  },\n});\n\nexport const help = (state: IState) => state.helpTooltips;\nexport const { toogleHelp, setHelp, removeHelp } = HelpSlice.actions;\n\nexport default HelpSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport themeReducer from \"themes/themeSlice\";\nimport languageReducer from \"languages/languageSlice\";\nimport helpReducer from \"components/sidepanel/settings/settingslice\";\n\nconst store = configureStore({\n  reducer: {\n    theme: themeReducer,\n    language: languageReducer,\n    help: helpReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18n\";\n\nimport { initializeIcons, loadTheme } from \"@fluentui/react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n\nloadTheme(store.getState().theme);\ninitializeIcons();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}