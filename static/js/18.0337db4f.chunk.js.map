{"version":3,"sources":["pages/settings/privacy.tsx"],"names":["Privacy","t","useTranslation","keyPrefix","t_basics","t_forms","tabsSchema","useSelector","selectWorkplaceConfig","useBoolean","privateProject","togglePrivateProject","toggle","useState","findForms","forms","setForms","columns","key","name","fieldName","minWidth","maxWidth","data","onRender","item","formRender","CheckboxRender","classes","mergeStyleSets","title","marginBottom","display","subtitle","margin","linkStyles","root","fontSize","FontSizes","smallPlus","form","variant","public","checked","toggleChecked","handleOnChange","React","useCallback","ev","newForms","map","f","onChange","disabled","Fragment","className","block","href","styles","label","inlineLabel","defaultChecked","onText","offText","event","items","selectionMode","SelectionMode","none"],"mappings":"sRAqBe,SAASA,IAEtB,IAAQC,EAAMC,YAAe,WAAY,CAAEC,UAAW,iBAA9CF,EACGG,EAAaF,YAAe,UAA/BD,EACGI,EAAYH,YAAe,SAA9BD,EAEAK,EAAeC,YAAYC,KAA3BF,WACR,EAA2DG,aAAW,GAAtE,mBAAOC,EAAP,KAAiCC,EAAjC,KAAyBC,OACzB,EAA0BC,mBAAkBP,EAAWQ,aAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAqB,CACzB,CACEC,IAAK,UACLC,KAAMlB,EAAE,eACRmB,UAAW,QACXC,SAAU,IACVC,SAAU,IACVC,KAAM,SACNC,SAAU,SAACC,GAAD,OAAiBC,EAAWD,KAExC,CACEP,IAAK,UACLC,KAAMlB,EAAE,iBACRmB,UAAW,UACXC,SAAU,IACVE,KAAM,SACNC,SAAU,SAACC,GAAD,OAAiBE,EAAeF,MAuBxCG,EAAUC,YAAe,CAC7BC,MAAO,CACLC,aAAc,GACdC,QAAS,SAEXC,SAAU,CACRC,OAAQ,eACRF,QAAS,WAIPG,EAA0B,CAC9BC,KAAM,CACJC,SAAUC,IAAUC,YAIlBb,EAAa,SAACc,GAClB,OAAO,cAAC,IAAD,CAAMC,QAAQ,SAAd,SAAwBpC,EAAQ,GAAD,OAAImC,EAAKrB,KAAT,eAGlCQ,EAAiB,SAACa,GACtB,MAA6C/B,aAAY+B,EAAKE,QAA9D,mBAAOC,EAAP,KAA0BC,EAA1B,KAAkBhC,OAEZiC,EAAiBC,IAAMC,aAC3B,SACEC,EACAL,GAEAC,IACA,IAAMK,EAAWlC,EAAMmC,KAAI,SAACC,GAC1B,OAAOA,EAAEjC,MAAQsB,EAAKtB,IAAf,2BAEEiC,GAFF,IAGDT,QAASC,IAEXH,KAENxB,EAASiC,KAEX,CAACL,EAAeJ,IAGlB,OACE,cAAC,IAAD,CACEG,QAASA,EACTS,SAAUP,EACVQ,SAAU3C,KAKhB,OACE,eAAC,IAAM4C,SAAP,WACE,cAAC,IAAD,CAAMb,QAAQ,SAASc,UAAW3B,EAAQE,MAA1C,SACG7B,EAAE,YAIL,cAAC,IAAD,CAAMwC,QAAQ,QAAQc,UAAW3B,EAAQK,SAAzC,SACGhC,EAAE,sBAEL,cAAC,IAAD,CAAMwC,QAAQ,SAASe,OAAK,EAA5B,SACGvD,EAAE,yBAEL,cAAC,IAAD,CAAMwD,KAAK,GAAGC,OAAQvB,EAAtB,SACGlC,EAAE,gCAIL,cAAC,IAAD,CAAMwC,QAAQ,QAAQc,UAAW3B,EAAQK,SAAzC,SACGhC,EAAE,yBAEL,cAAC,IAAD,CAAMwC,QAAQ,SAASe,OAAK,EAA5B,SACGvD,EAAE,4BAGL,uBACA,cAAC,IAAD,CACE0D,MAAO1D,EAAE,gBACT2D,aAAW,EACXC,gBAAc,EACdC,OAAQ1D,EAAS,WACjB2D,QAAS3D,EAAS,UAClBgD,SAtGsB,SAC1BY,EACArB,GAIA,GAFAhC,IAEIgC,EAAS,CACX,IAAMM,EAAWlC,EAAMmC,KAAI,SAACC,GAC1B,OAAO,2BACFA,GADL,IAEET,QAAQ,OAGZ1B,EAASiC,OA2FT,cAAC,IAAD,CACEgB,MAAOlD,EACPE,QAASA,EACTiD,cAAeC,IAAcC","file":"static/js/18.0337db4f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nimport {\n  Checkbox,\n  DetailsList,\n  FontSizes,\n  IColumn,\n  ILinkStyles,\n  Link,\n  mergeStyleSets,\n  SelectionMode,\n  Text,\n  Toggle,\n} from \"@fluentui/react\";\nimport { useBoolean } from \"@fluentui/react-hooks\";\n\nimport { selectWorkplaceConfig } from \"store/slices/workplaceslice\";\nimport { IForm } from \"models/workplace\";\n\nexport default function Privacy() {\n  // LOGIC\n  const { t } = useTranslation(\"settings\", { keyPrefix: \"privacy-page\" });\n  const { t: t_basics } = useTranslation(\"basics\");\n  const { t: t_forms } = useTranslation(\"forms\");\n\n  const { tabsSchema } = useSelector(selectWorkplaceConfig);\n  const [privateProject, { toggle: togglePrivateProject }] = useBoolean(true);\n  const [forms, setForms] = useState<IForm[]>(tabsSchema.findForms());\n\n  const columns: IColumn[] = [\n    {\n      key: \"column1\",\n      name: t(\"table-forms\"),\n      fieldName: \"forms\",\n      minWidth: 100,\n      maxWidth: 300,\n      data: \"string\",\n      onRender: (item: IForm) => formRender(item),\n    },\n    {\n      key: \"column2\",\n      name: t(\"table-privacy\"),\n      fieldName: \"Private\",\n      minWidth: 100,\n      data: \"string\",\n      onRender: (item: IForm) => CheckboxRender(item),\n    },\n  ];\n\n  // Handlers\n  const handleChangePrivacy = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    checked?: boolean | undefined\n  ) => {\n    togglePrivateProject();\n\n    if (checked) {\n      const newForms = forms.map((f) => {\n        return {\n          ...f,\n          public: false,\n        };\n      });\n      setForms(newForms);\n    }\n  };\n\n  // STYLES\n  const classes = mergeStyleSets({\n    title: {\n      marginBottom: 20,\n      display: \"block\",\n    },\n    subtitle: {\n      margin: \"30px 0 5px 0\",\n      display: \"block\",\n    },\n  });\n\n  const linkStyles: ILinkStyles = {\n    root: {\n      fontSize: FontSizes.smallPlus,\n    },\n  };\n\n  const formRender = (form: IForm) => {\n    return <Text variant=\"medium\">{t_forms(`${form.name}.header`)}</Text>;\n  };\n\n  const CheckboxRender = (form: IForm) => {\n    const [checked, { toggle: toggleChecked }] = useBoolean(!form.public);\n\n    const handleOnChange = React.useCallback(\n      (\n        ev?: React.FormEvent<HTMLElement | HTMLInputElement>,\n        checked?: boolean\n      ): void => {\n        toggleChecked();\n        const newForms = forms.map((f) => {\n          return f.key === form.key\n            ? ({\n                ...f,\n                public: !checked,\n              } as IForm)\n            : form;\n        });\n        setForms(newForms);\n      },\n      [toggleChecked, form]\n    );\n\n    return (\n      <Checkbox\n        checked={checked}\n        onChange={handleOnChange}\n        disabled={privateProject}\n      />\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Text variant=\"xLarge\" className={classes.title}>\n        {t(\"header\")}\n      </Text>\n\n      {/* Welcome */}\n      <Text variant=\"large\" className={classes.subtitle}>\n        {t(\"welcome-subtitle\")}\n      </Text>\n      <Text variant=\"medium\" block>\n        {t(\"welcome-description\")}\n      </Text>\n      <Link href=\"\" styles={linkStyles}>\n        {t(\"commitment-to-privacy-link\")}\n      </Link>\n\n      {/* Set Privacy */}\n      <Text variant=\"large\" className={classes.subtitle}>\n        {t(\"management-subtitle\")}\n      </Text>\n      <Text variant=\"medium\" block>\n        {t(\"management-description\")}\n      </Text>\n\n      <br />\n      <Toggle\n        label={t(\"toggle-label\")}\n        inlineLabel\n        defaultChecked\n        onText={t_basics(\"private\")}\n        offText={t_basics(\"public\")}\n        onChange={handleChangePrivacy}\n      />\n      <DetailsList\n        items={forms}\n        columns={columns}\n        selectionMode={SelectionMode.none}\n      />\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}