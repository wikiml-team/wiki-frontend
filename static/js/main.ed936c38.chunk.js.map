{"version":3,"sources":["components/inputs/dropdown.tsx","components/inputs/datepicker.tsx","pages/methodologies/canadian/projectforms/generalform.tsx","pages/methodologies/canadian/projectforms/stakeholdersform.tsx","pages/methodologies/canadian/projectforms/performanceform.tsx","pages/methodologies/canadian/projectforms/risksform.tsx","pages/methodologies/canadian/projectforms/budgetform.tsx","pages/methodologies/canadian/projectforms/reportsform.tsx","components/inputs/logictext.tsx","pages/methodologies/canadian/projectforms/logicmodelform.tsx","components/inputs/activitytext.tsx","pages/methodologies/canadian/projectforms/activitiesform.tsx","pages/main.tsx","components/styled/pagecontainer.tsx","components/styled/sticky.tsx","i18n.js","components/fullscreentoogler.js","components/menus/commands/items.tsx","components/sidepanel/index.tsx","store/slices/languageslice.tsx","components/sidepanel/languagepanel.tsx","themes/office.tsx","store/slices/themeslice.tsx","components/styled/shapes.tsx","components/pickers/themepicker.tsx","components/sidepanel/settings/settingspanel.tsx","components/menus/commands/custombuttons.tsx","components/menus/commands/index.tsx","components/menus/mainmenu/pivotbar.tsx","components/menus/mainmenu/teampile.tsx","components/menus/mainmenu/index.tsx","components/menus/mainmenu/toolbar.tsx","components/menus/footer/pagestabs.tsx","components/menus/footer/addbutton.tsx","components/menus/footer/index.tsx","layouts/workplace.tsx","routes.tsx","App.tsx","reportWebVitals.ts","store/slices/settingslice.tsx","store/index.tsx","index.tsx","components/inputs/text.tsx","pages/methodologies/canadian/projectforms/changenarrativeform.tsx","pages/methodologies/canadian/licitationforms/lotform.tsx","pages/methodologies/canadian/licitationforms/specificationsform.tsx","pages/methodologies/canadian/licitationforms/technicalofferform.tsx","pages/methodologies/canadian/licitationforms/financialofferform.tsx","pages/methodologies/canadian/tutorials/formstutorial.tsx","pages/methodologies/canadian/tutorials/sectorstutorial.tsx","pages/methodologies/canadian/tutorials/guidestutorial.tsx","pages/methodologies/canadian/tutorials/methodologytutorials.tsx","pages/methodologies/canadian/tutorials/outcomestutorial.tsx","pages/methodologies/canadian/tutorials/indicatorstutorial.tsx","store/slices/workplaceslice.tsx","pages/methodologies/canadian/tabsconfiguration.tsx","models/workplace.ts","models/sector.ts","models/canadian/logicmodel.ts","models/tree.ts","models/canadian/actvitiesmatrix.ts","store/slices/projectslice.tsx","models/methodologies.ts"],"names":["DropdownFieldInput","field","form","props","Dropdown","onGetErrorMessage","value","touched","errors","name","deferredValidationTime","DateFieldInput","t","useTranslation","DayPickerStrings","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","closeButtonAriaLabel","minDate","useConst","addMonths","Date","now","DatePicker","placeholder","strings","styles","root","height","GeneralForm","classes","mergeStyleSets","circle","width","borderRadius","minWidth","fontSize","headerStackProps","tokens","childrenGap","horizontal","horizontalAlign","paddingRight","separatorProps","alignContent","generalInfo","useSelector","selectProject","methodology","instruments","useState","initialDate","setInitialDate","approvedDate","setApprovedDate","initValues","shortName","shortname","largeName","description","country","impOrganization","organization","intOrganization","intermediary","budget","budgetPerItems","budgetItems","budgetPerAct","budgetAct","budgetFinanced","budgetSolicited","solicitedBudget","program","sector","duration","donor","approvedBudget","finalDate","contribution","validationSchema","object","shape","string","max","required","min","currency","number","useEffect","setLocale","mixed","default","countries","key","text","initialValues","onSubmit","values","setSubmitting","alert","console","log","dir","label","component","TextFieldInput","sizeLg","multiline","autoAdjustHeight","marginTop","sizeSm","sizeMd","Separator","PrimaryButton","className","Stack","Item","Label","status","wikicode","options","suffix","prefix","readOnly","donorcode","onSelectDate","date","type","StandardField","TextField","grow","generalFormViewMode","StakeholdersForm","PerformanceMeasureForm","RisksForm","BudgetForm","ReportsForm","LogicTextFieldInput","nodeTree","handleAddChild","handleDelete","node","children","palette","useTheme","rootStackItemProps","textAlign","inputTextFieldProps","rows","resizable","fieldGroup","border","neutralQuaternary","borderTop","neutralLighter","selectors","neutralTertiary","Fragment","level","Icon","iconName","ariaLabel","margin","LogicTextFieldHeader","id","map","child","dispatch","useDispatch","selectWorkplaceConfig","tabsSchema","latestMenuTab","tooltipContent","canAdd","canDelete","length","canRedirectOutput","titleStyles","padding","borderBottom","backgroundColor","commandStyles","rootHovered","neutralLight","icon","color","black","Text","variant","TooltipHost","content","IconButton","iconProps","onClick","formtabKey","findChildByName","renderPage","findChildByKey","render","setConfiguration","tab","page","handleRedirectToActivity","LogicModelForm","logicModelGraph","logicModel","graph","setGraph","buildTree","treeToRender","setTreeToRender","vertex","v","LagicmodelLabels","style","siblingId","addNode","deleteNode","verticalAlign","maxHeight","ActivityMatrixTextFieldInput","rowItems","groups","handleAddActivity","handleDeleteActivity","columns","fieldName","maxWidth","data","onRender","item","fieldRender","isRowHeader","codeRender","isResizable","isPadded","isMultiline","descriptionRender","operatorsRender","DetailsList","items","onRenderRow","customStyles","themeLighter","FontSizes","medium","themeLighterAlt","white","DetailsRow","selectionMode","SelectionMode","none","isHeaderVisible","html","textFieldProps","defaultValue","handleAdd","hasSiblings","ActivitiesMatrixForm","logicModelActivitiesMatrix","logicModelActivities","initialItems","buidOutputsActivityList","setItems","activitiesMatrix","setActivitiesMatrix","itemId","outputId","slice","activityId","addActivityToOutput","toNumber","toString","deleteActivity","Main","to","SignupForm","formik","useFormik","email","JSON","stringify","handleSubmit","htmlFor","onChange","handleChange","Container","styled","div","PageContainer","spring","scrollHeight","autoHide","autoHeight","autoHeightMin","autoHeightMax","Fixed","attrs","direction","Sticky","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","resources","en","English","es","Spanish","interpolation","escapeValue","fullscreenToggler","elem","document","documentElement","fullscreenElement","exitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","loadNamespaces","iconOnly","overflowItems","faritems","OpenLanguagePanel","OpenSettingsPanel","SidePanel","Panel","headerText","header","isBlocking","isOpen","onDismiss","handleClose","paddingTop","LanguageSlice","createSlice","initialState","language","reducers","setLanguage","state","action","payload","changeLanguage","setEnglish","setSpanish","setGerman","selectLanguage","actions","LanguagePanel","lang","suportedLangs","defaultSelectedKey","undefined","event","themeWord","createTheme","themePrimary","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralQuaternaryAlt","neutralTertiaryAlt","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","themeExcel","themePowerPoint","themeTeams","colorCells","themeSlice","setTheme","loadTheme","setThemeWord","setThemeExcel","setThemePowerPoint","setThemeTeams","StyledCircle","Circle","circleprops","size","classnames","ThemePicker","handler","cursor","cell","SettingsPanel","nameTextFieldStyles","borderColor","background","Persona","PersonaSize","size40","initialsColor","PersonaInitialsColor","cyan","CustomBarButton","itemStyles","rootPressed","iconHovered","iconPressed","labelHovered","CommandBarButton","concatStyleSets","CustomOverflowButton","rootExpanded","rootExpandedHovered","menuIcon","overflowProps","menuProps","subComponentStyles","menuItem","CommandMenu","comandBarStyles","textStyles","position","top","left","transform","languagePanelOpen","setLanguagePanelOpen","settingsPanelOpen","setSettingsPanelOpen","useCallback","CloseLanguagePanel","CloseSettingsPanel","CommandBar","buttonAs","farItems","overflowButtonAs","overflowButtonProps","PivotBar","schema","setShowToolBar","tabs","pivotStyles","zIndex","link","small","linkIsSelected","Pivot","linkFormat","onLinkClick","ev","itemkey","itemKey","setLatestMenuTab","tabKey","PivotItem","itemIcon","FacePileStyles","right","itemButton","faces","personaName","gray","gold","lightGreen","warmGray","blue","green","darkBlue","purple","orange","TeamPile","Facepile","personas","personaSize","size24","maxDisplayablePersonas","overflowButtonType","OverflowButtonType","descriptive","addButtonProps","href","ariaDescription","MainMenu","ToolBar","isFixed","handleFix","transition","stackProps","stackPinProps","align","ref","wrapperRef","useRef","handleClickOutside","current","contains","target","addEventListener","removeEventListener","title","PagesTabs","parentKey","defaultKey","fontWeight","FontWeights","semibold","selectedKey","headersOnly","AddButton","Footer","selectedkey","bottom","separatorStyles","childtabs","parentkey","addtabs","vertical","WorkplaceLayout","configuration","tools","footertab","findByKey","fixToolBar","setFixToolBar","showToolBar","toolBarTransition","useTransition","from","x","y","opacity","enter","leave","pageSpring","useSpring","lazy","Routes","path","WorkplaceSwitcher","main","ProjectSwitcher","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HelpSlice","toogleHelp","setHelp","removeHelp","store","configureStore","reducer","theme","themeReducer","languageReducer","help","helpReducer","project","projectReducer","workplace","workplaceReducer","getState","initializeIcons","ReactDOM","StrictMode","getElementById","ChangeNarrativeForm","LotForm","SpecificationsForm","TechnicalOfferForm","FinancialOfferForm","FormsTutorials","SectorsTutorials","GuidesTutorials","MethodologyTutorials","OutcomesTutorial","IndicatorsTutorial","this","find","childkey","parenttab","tabFound","childTab","key1","key2","key3","key4","key5","key6","workplaceSlice","setTabSchema","ECanadianSector","EGermanSector","LogicmodelGraph","char","outputs","edges","filter","e","findNode","padEnd","parentId","parentNode","newNode","generateId","findChildrenIds","push","generateSiblingId","order","getParentId","siblingsIds","sort","i","oldId","childNode","newInfo","substr","findAllDescendants","forEach","desc","n","charAt","oldDescId","a","b","nodeId","childrenIds","newId","getNodeLevel","split","c","num","concat","commonRoot","tree","buildTreeRec","childVertex","edge","logicmodelGraphExample","LogicModelActivitiesMatrix","activities","sibling","newActivity","inmediatesIds","getInmediateTree","output","siblings","findActivitiesByOutput","activity","Energy","leader","team","projectSlice","setCurrentProject"],"mappings":"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","file":"static/js/main.ed936c38.chunk.js","sourcesContent":["import { Dropdown } from \"@fluentui/react\";\r\n\r\nconst DropdownFieldInput = ({ field, form, ...props }: any) => {\r\n  const handleGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleGetError}\r\n      deferredValidationTime={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropdownFieldInput;\r\n","import { addMonths, DatePicker, IDatePickerStrings, IDatePickerStyles } from \"@fluentui/react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useConst } from \"@fluentui/react-hooks\";\r\n\r\nconst DateFieldInput = ({ field, form, ...props }: any) => {\r\n  const { t } = useTranslation([\r\n    \"months\",\r\n    \"shortMonths\",\r\n    \"days\",\r\n    \"shortDays\",\r\n    \"calendar\",\r\n    \"general-form\"\r\n  ]);\r\n\r\n  const DayPickerStrings: IDatePickerStrings = {\r\n    months: [\r\n      t(\"january\"),\r\n      t(\"february\"),\r\n      t(\"march\"),\r\n      t(\"april\"),\r\n      t(\"may\"),\r\n      t(\"june\"),\r\n      t(\"july\"),\r\n      t(\"august\"),\r\n      t(\"september\"),\r\n      t(\"october\"),\r\n      t(\"november\"),\r\n      t(\"december\"),\r\n    ],\r\n\r\n    shortMonths: [\r\n      t(\"shortmonths:jan\"),\r\n      t(\"shortmonths:feb\"),\r\n      t(\"shortmonths:mar\"),\r\n      t(\"shortmonths:apr\"),\r\n      t(\"shortmonths:may\"),\r\n      t(\"shortmonths:jun\"),\r\n      t(\"shortmonths:jul\"),\r\n      t(\"shortmonths:aug\"),\r\n      t(\"shortmonths:sep\"),\r\n      t(\"shortmonths:oct\"),\r\n      t(\"shortmonths:nov\"),\r\n      t(\"shortmonths:dec\"),\r\n    ],\r\n\r\n    days: [\r\n      t(\"days:sunday\"),\r\n      t(\"days:monday\"),\r\n      t(\"days:tuesday\"),\r\n      t(\"days:wednesday\"),\r\n      t(\"days:thursday\"),\r\n      t(\"days:friday\"),\r\n      t(\"days:saturday\"),\r\n    ],\r\n\r\n    shortDays: [\r\n      t(\"shortdays:sunday\"),\r\n      t(\"shortdays:monday\"),\r\n      t(\"shortdays:tuesday\"),\r\n      t(\"shortdays:wednesday\"),\r\n      t(\"shortdays:thursday\"),\r\n      t(\"shortdays:friday\"),\r\n      t(\"shortdays:saturday\"),\r\n    ],\r\n\r\n    goToToday: t(\"calendar:goToToday\"),\r\n    prevMonthAriaLabel: t(\"calendar:prevMonthAriaLabel\"),\r\n    nextMonthAriaLabel: t(\"calendar:nextMonthAriaLabel\"),\r\n    prevYearAriaLabel: t(\"calendar:prevYearAriaLabel\"),\r\n    nextYearAriaLabel: t(\"calendar:nextYearAriaLabel\"),\r\n    closeButtonAriaLabel: t(\"calendar:closeButtonAriaLabel\"),\r\n  };\r\n\r\n  const handleGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  const minDate = useConst(addMonths(new Date(Date.now()), -1));\r\n\r\n\r\n  const datepickerStyles: Partial<IDatePickerStyles> = {\r\n    root: {\r\n      height: 60.4\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DatePicker\r\n      placeholder={t(\"general-form:date-placeholder\")}\r\n      minDate={minDate}\r\n      onGetErrorMessage={handleGetError}\r\n      deferredValidationTime={500}\r\n      strings={DayPickerStrings}\r\n      styles={datepickerStyles}\r\n      {...field}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateFieldInput;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { string, object, number, setLocale } from \"yup\";\r\nimport { Grid, Col, Row } from \"fluentui-react-grid\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Stack,\r\n  ITextFieldProps,\r\n  IDropdownOption,\r\n  IStackProps,\r\n  mergeStyleSets,\r\n  Separator,\r\n  PrimaryButton,\r\n  ISeparatorProps,\r\n  Label,\r\n} from \"@fluentui/react\";\r\n\r\nimport { selectProject } from \"store/slices/projectslice\";\r\nimport { ECanadianSector } from \"models/sector\";\r\nimport DropdownFieldInput from \"components/inputs/dropdown\";\r\nimport TextFieldInput from \"components/inputs/text\";\r\nimport DateFieldInput from \"components/inputs/datepicker\";\r\nimport { IProjectInfo } from \"models/generalinfo\";\r\n\r\ntype formValuesType = {\r\n  shortName: string;\r\n  largeName: string;\r\n  description: string;\r\n  country: string;\r\n  impOrganization: string;\r\n  intOrganization: string;\r\n  budget: number;\r\n  budgetPerItems: number;\r\n  budgetPerAct: number;\r\n  budgetFinanced: number;\r\n  budgetSolicited: number;\r\n  program: string;\r\n  sector: ECanadianSector;\r\n  duration: number;\r\n  donor: string;\r\n  approvedBudget: number;\r\n  approvedDate: Date | string;\r\n  initialDate: Date | string;\r\n  finalDate: Date | string;\r\n  contribution: number;\r\n};\r\n\r\nexport default function GeneralForm() {\r\n  // STYLE\r\n  const classes = mergeStyleSets({\r\n    circle: {\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: \"50%\",\r\n      minWidth: 40,\r\n      fontSize: 16,\r\n    },\r\n  });\r\n\r\n  const multilineTextFieldProps: ITextFieldProps = {\r\n    required: true,\r\n    multiline: true,\r\n    autoAdjustHeight: true,\r\n    styles: {\r\n      root: {\r\n        width: \"100%\",\r\n        marginTop: 10,\r\n      },\r\n      field: {\r\n        height: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  const headerStackProps: IStackProps = {\r\n    tokens: { childrenGap: \"m\" },\r\n    horizontal: true,\r\n    horizontalAlign: \"space-between\",\r\n    styles: {\r\n      root: {\r\n        paddingRight: 40,\r\n      },\r\n    },\r\n  };\r\n\r\n  const separatorProps: ISeparatorProps = {\r\n    alignContent: \"start\",\r\n  };\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation([\"general-form\", \"status\"]);\r\n  const project = useSelector(selectProject);\r\n  const generalInfo = project.methodology.instruments.generalInfo as IProjectInfo<ECanadianSector>;\r\n\r\n  const [initialDate, setInitialDate] = useState(generalInfo.initialDate as Date)\r\n  const [approvedDate, setApprovedDate] = useState(generalInfo.approvedDate as Date)\r\n\r\n  const handleSelectInitialDate = (date: Date) => {\r\n    setInitialDate(date);\r\n  }\r\n\r\n  const handleSelectApprovedDate = (date: Date) => {\r\n    setApprovedDate(date);\r\n  }\r\n\r\n  const initValues: formValuesType = {\r\n    shortName: generalInfo.shortname,\r\n    largeName: generalInfo.name,\r\n    description: generalInfo.description,\r\n    country: generalInfo.country,\r\n    impOrganization: generalInfo.organization,\r\n    intOrganization: generalInfo.intermediary,\r\n    budget: generalInfo.budget,\r\n    budgetPerItems: generalInfo.budgetItems,\r\n    budgetPerAct: generalInfo.budgetAct,\r\n    budgetFinanced: generalInfo.budgetFinanced,\r\n    budgetSolicited: generalInfo.solicitedBudget,\r\n    program: generalInfo.program,\r\n    sector: generalInfo.sector,\r\n    duration: generalInfo.duration,\r\n    donor: generalInfo.donor,\r\n    approvedBudget: generalInfo.approvedBudget,\r\n    approvedDate: generalInfo.approvedDate,\r\n    initialDate: generalInfo.initialDate,\r\n    finalDate: generalInfo.finalDate,\r\n    contribution: generalInfo.contribution\r\n  };\r\n\r\n  const validationSchema = object().shape({\r\n    shortName: string().max(20, t(\"shortname-error\")).required(t(\"required\")),\r\n    largeName: string()\r\n      .min(20, t(\"largename-error\"))\r\n      .max(100, t(\"largename-error\"))\r\n      .required(t(\"required\")),\r\n    description: string(),\r\n    country: string().required(t(\"required\")),\r\n    impOrganization: string().required(t(\"required\")),\r\n    intOrganization: string().required(t(\"required\")),\r\n    currency: string().required(t(\"required\")),\r\n    budget: number().required(t(\"required\")),\r\n    budgetPerItems: number().required(t(\"required\")),\r\n    budgetPerAct: number().required(t(\"required\")),\r\n    budgetFinanced: number().required(t(\"required\")),\r\n    budgetSolicited: number().required(t(\"required\")),\r\n    program: string().required(t(\"required\")),\r\n    sector: string().required(t(\"required\")),\r\n    duration: number().required(t(\"required\")),\r\n    donor: string().required(t(\"required\")),\r\n    approvedBudget: number().required(t(\"required\")),\r\n    approvedDate: string().required(t(\"required\")),\r\n    initialDate: string().required(t(\"required\")),\r\n    finalDate: string().required(t(\"required\")),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLocale({\r\n      // use constant translation keys for messages without values\r\n      mixed: {\r\n        default: \"field_invalid\",\r\n      },\r\n      // use functions to generate an error object that includes the value from the schema\r\n      string: {\r\n        default: \"asi mismo\",\r\n      },\r\n      number: {\r\n        default: \"asimismo\",\r\n      },\r\n    });\r\n  }, [validationSchema]);\r\n\r\n  const handleSubmit = (values: formValuesType, { setSubmitting }: any) => {\r\n    alert(values);\r\n    console.log(\"values\");\r\n    console.log(values);\r\n  };\r\n\r\n  const countries: IDropdownOption[] = [\r\n    { key: \"1\", text: \"Cuba\" },\r\n    { key: \"2\", text: \"England\" },\r\n    { key: \"3\", text: \"United States\" },\r\n    { key: \"4\", text: \"España\" },\r\n    { key: \"5\", text: \"Canada\" },\r\n  ];\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Form>\r\n        <Grid dir=\"ltr\">\r\n          {/* Names */}\r\n          <Row>\r\n            <TextField\r\n              required\r\n              label={t(\"shortname-field\")}\r\n              name=\"shortName\"\r\n              component={TextFieldInput}\r\n              sizeLg={3}\r\n            />\r\n\r\n            <TextField\r\n              required\r\n              label={t(\"largename-field\")}\r\n              name=\"largeName\"\r\n              component={TextFieldInput}\r\n              sizeLg={9}\r\n            />\r\n          </Row>\r\n          {/* Description */}\r\n          <Row>\r\n            <TextField\r\n              label={t(\"description-field\")}\r\n              name=\"description\"\r\n              component={TextFieldInput}\r\n              {...multilineTextFieldProps}\r\n              sizeLg={12}\r\n\r\n            />\r\n          </Row>\r\n          <br />\r\n\r\n          <Row>\r\n            {/* 1. Project */}\r\n            <Col sizeSm={12} sizeMd={8} sizeLg={8}>\r\n              <Row>\r\n                <Separator {...separatorProps}>\r\n                  <PrimaryButton text=\"1\" className={classes.circle} />\r\n                </Separator>\r\n              </Row>\r\n\r\n              <Stack {...headerStackProps}>\r\n                <Stack.Item>\r\n                  <Label>{t(\"status-field\")}</Label>\r\n                  {t(`status:${generalInfo.status}`)}\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                  <Label>{t(\"wikicode-field\")}</Label>\r\n                  {generalInfo.wikicode}\r\n                </Stack.Item>\r\n              </Stack>\r\n              <br />\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"country-field\")}\r\n                  name=\"country\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"imporganization-field\")}\r\n                  name=\"impOrganization\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"intorganization-field\")}\r\n                  name=\"intOrganization\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"currency-field\")}\r\n                  name=\"currency\"\r\n                  component={DropdownFieldInput}\r\n                />\r\n                <StandardField\r\n                  label={t(\"program-field\")}\r\n                  name=\"program\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"sector-field\")}\r\n                  name=\"sector\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                />\r\n                <StandardField\r\n                  label={t(\"duration-field\")}\r\n                  name=\"duration\"\r\n                  component={TextFieldInput}\r\n                  suffix={t(\"duration-suffix\")}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n\r\n                <StandardField\r\n                  label={t(\"budget-field\")}\r\n                  name=\"budget\"\r\n                  component={TextFieldInput}\r\n                  prefix={t(\"budget-prefix\")}\r\n                />\r\n                <StandardField\r\n                  label={t(\"calculated-field\")}\r\n                  name=\"budgetPerItems\"\r\n                  component={TextFieldInput}\r\n                  prefix={t(\"budgetitems-prefix\")}\r\n                  readOnly\r\n                />\r\n                <StandardField\r\n                  label={t(\"calculated-field\")}\r\n                  name=\"budgetPerAct\"\r\n                  component={TextFieldInput}\r\n                  prefix={t(\"budgetact-prefix\")}\r\n                  readOnly\r\n                />\r\n                <StandardField\r\n                  label={t(\"financed-field\")}\r\n                  name=\"budgetFinanced\"\r\n                  component={TextFieldInput}\r\n                />\r\n              </Row>\r\n\r\n\r\n            </Col>\r\n\r\n            {/* 2. Donor */}\r\n            <Col sizeSm={12} sizeMd={4} sizeLg={4}>\r\n              <Row>\r\n                <Separator {...separatorProps}>\r\n                  <PrimaryButton text=\"2\" className={classes.circle} />\r\n                </Separator>\r\n              </Row>\r\n\r\n              <Stack {...headerStackProps}>\r\n                <Stack.Item>\r\n                  <Label>{t(\"donorcode-field\")}</Label>\r\n                  {generalInfo.donorcode}\r\n                </Stack.Item>\r\n              </Stack>\r\n              <br />\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"donor-field\")}\r\n                  name=\"donor\"\r\n                  component={DropdownFieldInput}\r\n                  options={countries}\r\n                  sizeLg={6}\r\n                />\r\n                <StandardField\r\n                  label={t(\"approvedate-field\")}\r\n                  name=\"approveDate\"\r\n                  component={DateFieldInput}\r\n                  onSelectDate={handleSelectApprovedDate}\r\n                  sizeLg={6}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"initialdate-field\")}\r\n                  name=\"initialDate\"\r\n                  component={DateFieldInput}\r\n                  minDate={approvedDate}\r\n                  onSelectDate={handleSelectInitialDate}\r\n                  sizeLg={6}\r\n                />\r\n                <StandardField\r\n                  label={t(\"finaldate-field\")}\r\n                  name=\"finalDate\"\r\n                  component={DateFieldInput}\r\n                  minDate={initialDate}\r\n                  sizeLg={6}\r\n                />\r\n              </Row>\r\n\r\n              <Row>\r\n                <StandardField\r\n                  label={t(\"approvebudget-field\")}\r\n                  name=\"approvedBudget\"\r\n                  component={TextFieldInput}\r\n                  options={countries}\r\n                  suffix={generalInfo.currency}\r\n                  sizeLg={6}\r\n                />\r\n                <StandardField\r\n                  label={t(\"contribution-field\")}\r\n                  name=\"contribution\"\r\n                  component={TextFieldInput}\r\n                  sizeLg={6}\r\n                />\r\n              </Row>\r\n\r\n\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n        <button type=\"submit\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nconst StandardField = (props: any) => {\r\n  return (\r\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\r\n      <Field {...props} />\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst TextField = ({ grow, ...props }: any) => {\r\n  return (\r\n    <Col sizeSm={props.sizeSm || 2} sizeMd={props.sizeMd || 6} sizeLg={props.sizeLg || 3}>\r\n      <Field {...props} />\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport function generalFormViewMode() {\r\n  return <div>Form Basics</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function StakeholdersForm() {\r\n  return <div>Stakeholders Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PerformanceMeasureForm() {\r\n  return <div>Performance Measure Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RisksForm() {\r\n  return <div>Risks Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function BudgetForm() {\r\n  return <div>Budget Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ReportsForm() {\r\n  return <div>Reports Form</div>;\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Field } from \"formik\";\r\nimport {\r\n    Stack,\r\n    IStackItemProps,\r\n    IStackProps,\r\n    IButtonStyles,\r\n    Icon,\r\n    IIconProps,\r\n    ITextStyles,\r\n    Text,\r\n    TooltipHost,\r\n    IconButton,\r\n    useTheme,\r\n    ITextFieldProps,\r\n} from '@fluentui/react';\r\n\r\nimport { selectWorkplaceConfig, setConfiguration } from \"store/slices/workplaceslice\";\r\nimport { Tree } from \"models/tree\";\r\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\r\nimport TextFieldInput from \"components/inputs/text\";\r\n\r\ntype LogicTextFieldInputProps = {\r\n    nodeTree: Tree<LogicmodelVertex>,\r\n    handleAddChild: (id: string) => void,\r\n    handleDelete: (id: string) => void,\r\n}\r\n\r\nexport default function LogicTextFieldInput(props: LogicTextFieldInputProps) {\r\n\r\n    // LOGIC\r\n    const {\r\n        nodeTree,\r\n        handleAddChild,\r\n        handleDelete,\r\n    } = props;\r\n    const { node, children } = nodeTree;\r\n\r\n    // STYLES\r\n    const { palette } = useTheme();\r\n\r\n    const rootStackItemProps: IStackItemProps = {\r\n        grow: 1,\r\n        styles: {\r\n            root: {\r\n                textAlign: \"center\",\r\n                marginTop: \"0px !important\"\r\n            },\r\n        },\r\n    };\r\n\r\n    const childrenStackProps: IStackProps = {\r\n        horizontal: true,\r\n        horizontalAlign: \"space-between\",\r\n        tokens: { childrenGap: 20 }\r\n    };\r\n\r\n    const inputTextFieldProps: ITextFieldProps = {\r\n        rows: 3,\r\n        multiline: true,\r\n        resizable: false,\r\n        styles: {\r\n            root: {\r\n                minWidth: 200,\r\n            },\r\n            fieldGroup: {\r\n                borderRadius: \"0 0 2px 2px\",\r\n                border: `1px solid ${palette.neutralQuaternary}`,\r\n                borderTop: `1px solid ${palette.neutralLighter}`,\r\n                selectors: {\r\n                    \":hover\": {\r\n                        border: `1px solid ${palette.neutralTertiary}`,\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    const arrowProps: IIconProps = {\r\n        iconName: \"SortUp\",\r\n        ariaLabel: \"Belongs to\",\r\n        styles: {\r\n            root: {\r\n                margin: \"8px auto\",\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Stack.Item {...rootStackItemProps}>\r\n                {node.level > 0 && <Icon {...arrowProps} />}\r\n                <LogicTextFieldHeader\r\n                    nodeTree={nodeTree}\r\n                    handleAddChild={handleAddChild}\r\n                    handleDelete={handleDelete}\r\n                />\r\n                <Field\r\n                    name={`textFiled${node.id}`}\r\n                    component={TextFieldInput}\r\n                    {...inputTextFieldProps}\r\n                />\r\n            </Stack.Item>\r\n\r\n            <Stack.Item {...rootStackItemProps}>\r\n                <Stack {...childrenStackProps} >\r\n                    {children && children.map(child =>\r\n                        <Stack.Item key={child.node.id} grow>\r\n                            <LogicTextFieldInput\r\n                                nodeTree={child}\r\n                                handleAddChild={handleAddChild}\r\n                                handleDelete={handleDelete}\r\n                            />\r\n                        </Stack.Item>\r\n                    )}\r\n                </Stack>\r\n            </Stack.Item>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction LogicTextFieldHeader(props: LogicTextFieldInputProps) {\r\n\r\n    // LOGIC\r\n    const { nodeTree, handleAddChild, handleDelete } = props;\r\n    const { node, children } = nodeTree;\r\n\r\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\r\n    const dispatch = useDispatch();\r\n    const { tabsSchema, latestMenuTab } = useSelector(selectWorkplaceConfig);\r\n\r\n    const tooltipContent = node.level === 0 ?\r\n        \"tooltip-addIntOutcome\" : node.level === 1 ?\r\n            \"tooltip-addInmOutcome\" : \"tooltip-addOutput\";\r\n\r\n    const canAdd = node.level !== 3;\r\n    const canDelete = children.length === 0;\r\n    const canRedirectOutput = node.level === 3;\r\n\r\n    const handleRedirectToActivity = (id: string) => {\r\n        const formtabKey = tabsSchema.findChildByName(\"activitiesmatrix\").key;\r\n        const renderPage = tabsSchema.findChildByKey(latestMenuTab, formtabKey).render;\r\n        dispatch(setConfiguration({ key: latestMenuTab, tab: formtabKey, page: renderPage }));\r\n    }\r\n\r\n    // STYLES\r\n    const { palette } = useTheme();\r\n\r\n    const titleStyles: ITextStyles = {\r\n        root: {\r\n            padding: 4,\r\n            textAlign: \"left\",\r\n            border: `1px solid ${palette.neutralQuaternary}`,\r\n            borderBottom: \"none\",\r\n            borderRadius: \"2px 2px 0 0\",\r\n            backgroundColor: palette.neutralLighter,\r\n        },\r\n    };\r\n\r\n    const commandStyles: Partial<IButtonStyles> = {\r\n        root: {\r\n            height: 25,\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: palette.neutralLight,\r\n        },\r\n        icon: {\r\n            fontSize: 13,\r\n            color: palette.black,\r\n        },\r\n    };\r\n\r\n    return <Stack\r\n        horizontal\r\n        styles={titleStyles}\r\n        horizontalAlign=\"space-between\"\r\n    >\r\n        <Stack.Item>\r\n            <Text variant=\"medium\">{node.id}</Text>\r\n        </Stack.Item>\r\n        <Stack.Item>\r\n            {canRedirectOutput &&\r\n                <TooltipHost content={t(\"tooltip-redirectToAct\")}>\r\n                    <IconButton\r\n                        iconProps={{ iconName: \"MultiSelect\" }}\r\n                        styles={commandStyles}\r\n                        onClick={() => handleRedirectToActivity(node.id)}\r\n                    />\r\n                </TooltipHost>\r\n            }\r\n            {canAdd &&\r\n                <TooltipHost content={t(tooltipContent)}>\r\n                    <IconButton\r\n                        iconProps={{ iconName: \"Add\" }}\r\n                        styles={commandStyles}\r\n                        onClick={() => handleAddChild(node.id)}\r\n                    />\r\n                </TooltipHost>\r\n            }\r\n            {canDelete &&\r\n                <TooltipHost content={t(\"tooltip-delete\")}>\r\n                    <IconButton\r\n                        iconProps={{ iconName: \"Cancel\" }}\r\n                        styles={commandStyles}\r\n                        onClick={() => handleDelete(node.id)}\r\n                    />\r\n                </TooltipHost>\r\n            }\r\n        </Stack.Item>\r\n    </Stack>\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { string, object } from \"yup\";\r\nimport { ObjectShape } from \"yup/lib/object\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  Stack,\r\n  Text,\r\n  IStackProps,\r\n} from \"@fluentui/react\";\r\n\r\nimport LogicTextFieldInput from \"components/inputs/logictext\";\r\nimport LogicmodelGraph from \"models/canadian/logicmodel\";\r\nimport { selectProject } from \"store/slices/projectslice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ntype formValuesType = {\r\n  [key: string]: string;\r\n}\r\n\r\nexport default function LogicModelForm() {\r\n  // LOGIC\r\n\r\n  const project = useSelector(selectProject);\r\n  const logicModelGraph = project.methodology.instruments.logicModel as LogicmodelGraph;\r\n\r\n  const [graph, setGraph] = useState(logicModelGraph)\r\n  const [treeToRender, setTreeToRender] = useState(graph.buildTree())\r\n\r\n\r\n\r\n  const handleAddNode = (siblingId: string) => {\r\n    setGraph(graph.addNode(siblingId));\r\n    setTreeToRender(graph.buildTree());\r\n  }\r\n\r\n  const handleDeleteNode = (id: string) => {\r\n    setGraph(graph.deleteNode(id));\r\n    setTreeToRender(graph.buildTree());\r\n  }\r\n\r\n  // FORMIK\r\n  var initialValues: formValuesType = { \"verionMode\": \"\" }; // Take init value from DB\r\n  for (let v of graph.vertex) {\r\n    initialValues[`textFiled${v.id}`] = v.text;\r\n  }\r\n\r\n  var shape: ObjectShape = { \"verionMode\": string() };\r\n  for (let v of graph.vertex) {\r\n    shape[`textFiled${v.id}`] = string();\r\n  }\r\n\r\n  const validationSchema = object().shape(shape);\r\n\r\n  return <Formik\r\n    initialValues={initialValues!}\r\n    validationSchema={validationSchema}\r\n    onSubmit={(values) => alert(values)}\r\n  >\r\n    <Form>\r\n      <Stack horizontal tokens={{ childrenGap: 20 }}>\r\n        {/* Labels */}\r\n        <Stack.Item>\r\n          <LagicmodelLabels />\r\n        </Stack.Item>\r\n\r\n        {/* Inputs */}\r\n        <Stack.Item style={{ width: \"100%\" }}>\r\n          <Stack tokens={{ childrenGap: 10 }} >\r\n            <LogicTextFieldInput\r\n              nodeTree={treeToRender}\r\n              handleAddChild={handleAddNode}\r\n              handleDelete={handleDeleteNode}\r\n            />\r\n          </Stack>\r\n        </Stack.Item>\r\n      </Stack>\r\n    </Form>\r\n  </Formik>\r\n}\r\n\r\nfunction LagicmodelLabels() {\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\r\n\r\n  // STYLES\r\n  const labelStackProps: IStackProps = {\r\n    verticalAlign: \"space-between\",\r\n    styles: {\r\n      root: {\r\n        width: 120,\r\n        height: \"100%\",\r\n        maxHeight: 530,\r\n        padding: \"20px 0 30px 0\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Stack {...labelStackProps}>\r\n    <Stack.Item>\r\n      <Text variant=\"mediumPlus\">\r\n        <b>{t(\"ultimate-outcomes\")}</b>\r\n      </Text>\r\n    </Stack.Item>\r\n    <Stack.Item>\r\n      <Text variant=\"mediumPlus\">\r\n        <b>{t(\"intermediate-outcomes\")}</b>\r\n      </Text>\r\n    </Stack.Item>\r\n    <Stack.Item>\r\n      <Text variant=\"mediumPlus\">\r\n        <b>{t(\"inmediate-outcomes\")}</b>\r\n      </Text>\r\n    </Stack.Item>\r\n    <Stack.Item>\r\n      <Text variant=\"mediumPlus\">\r\n        <b>{t(\"outputs\")}</b>\r\n      </Text>\r\n    </Stack.Item>\r\n  </Stack>\r\n}\r\n","import React from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n    DetailsList,\r\n    IGroup,\r\n    IDetailsListProps,\r\n    SelectionMode,\r\n    useTheme,\r\n    IDetailsRowStyles,\r\n    DetailsRow,\r\n    IColumn,\r\n    TooltipHost,\r\n    FontSizes,\r\n    TextField,\r\n    ITextFieldProps,\r\n    IPalette,\r\n    Text,\r\n    IconButton,\r\n    IGroupDividerProps,\r\n    IButtonStyles\r\n} from '@fluentui/react';\r\n\r\nimport { NodeInfo } from 'models/canadian/actvitiesmatrix';\r\n\r\ntype ActivityMatrixTextFieldInputProps = {\r\n    rowItems: NodeInfo[];\r\n    groups?: IGroup[];\r\n    handleAddActivity: (outputId: string, itemId: string) => void;\r\n    handleDeleteActivity: (outputId: string, itemId: string) => void;\r\n}\r\n\r\nexport default function ActivityMatrixTextFieldInput(props: ActivityMatrixTextFieldInputProps) {\r\n\r\n    // STYLES\r\n    const { palette } = useTheme();\r\n\r\n    // LOGIC\r\n    const { rowItems, groups, handleAddActivity, handleDeleteActivity } = props;\r\n    const { t } = useTranslation(\"logicmodel-activitymatrix-form\");\r\n\r\n    const columns: IColumn[] = [\r\n        {\r\n            key: 'column1',\r\n            name: 'Field',\r\n            styles: { root: { textAlign: \"right\", fontSize: 40 } },\r\n            ariaLabel: 'Outcomes, Outputs and Activities',\r\n            fieldName: 'field',\r\n            minWidth: 10,\r\n            maxWidth: 150,\r\n            data: 'string',\r\n            onRender: (item: NodeInfo) => fieldRender(item, t)\r\n        },\r\n        {\r\n            key: 'column2',\r\n            name: 'Code',\r\n            fieldName: 'code',\r\n            ariaLabel: \"Code\",\r\n            minWidth: 0,\r\n            maxWidth: 350,\r\n            isRowHeader: true,\r\n            data: 'number',\r\n            onRender: (item: NodeInfo) => codeRender(item),\r\n        },\r\n        {\r\n            key: 'column3',\r\n            name: 'Description',\r\n            fieldName: 'description',\r\n            minWidth: 70,\r\n            data: 'string',\r\n            isResizable: true,\r\n            isPadded: true,\r\n            isMultiline: true,\r\n            // isFiltered: true,\r\n            onRender: (item: NodeInfo) => descriptionRender(item, palette),\r\n        },\r\n        {\r\n            key: 'column4',\r\n            name: '',\r\n            fieldName: 'operators',\r\n            minWidth: 70,\r\n            data: 'string',\r\n            isResizable: true,\r\n            isPadded: true,\r\n            // isFiltered: true,\r\n            onRender: (item: NodeInfo) => operatorsRender(item, palette, t, handleAddActivity, handleDeleteActivity),\r\n        },\r\n    ]\r\n\r\n    const onRenderRow: IDetailsListProps['onRenderRow'] = props => {\r\n        const customStyles: Partial<IDetailsRowStyles> = {};\r\n\r\n        if (props) {\r\n            const { item } = props;\r\n            switch (item.level) {\r\n                case 0:\r\n                    customStyles.root = {\r\n                        backgroundColor: palette.themeLighter,\r\n                        fontSize: FontSizes.medium,\r\n                        \":hover\": {\r\n                            backgroundColor: palette.themeLighter,\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    customStyles.root = {\r\n                        backgroundColor: palette.themeLighterAlt,\r\n                        \":hover\": {\r\n                            backgroundColor: palette.themeLighterAlt,\r\n                        }\r\n                    }\r\n                    break;\r\n                case 2:\r\n                    customStyles.root = {\r\n                        \":hover\": {\r\n                            backgroundColor: palette.white,\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return <DetailsRow {...props} styles={customStyles} />;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Collapse behaviour\r\n    const onToggleCollapseRow = (props: IGroupDividerProps) => {\r\n        return () => {\r\n            props!.onToggleCollapse!(props!.group!);\r\n        };\r\n    }\r\n\r\n    return (\r\n        <DetailsList\r\n            items={rowItems}\r\n            columns={columns}\r\n            groups={groups}\r\n            onRenderRow={onRenderRow}\r\n            selectionMode={SelectionMode.none}\r\n            isHeaderVisible={false}\r\n        />\r\n    )\r\n}\r\n\r\nconst fieldRender = (item: NodeInfo, t: Function) => {\r\n\r\n    const variant = item.level === 0 ? \"medium\" : \"small\";\r\n    return (\r\n        <div style={{ textAlign: \"end\", color: \"black\" }}>\r\n            <Text variant={variant}><b>{t(item.name)}</b></Text>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst codeRender = (item: NodeInfo) => {\r\n    return item.id\r\n}\r\n\r\nconst descriptionRender = (item: NodeInfo, palette: IPalette) => {\r\n\r\n    const textFieldProps: ITextFieldProps = {\r\n        rows: 1,\r\n        multiline: true,\r\n        resizable: false,\r\n        defaultValue: item.description,\r\n        styles: {\r\n            root: {\r\n                minWidth: 200,\r\n            },\r\n            fieldGroup: {\r\n                borderRadius: \"0 0 2px 2px\",\r\n                border: `1px solid ${palette.neutralLighter}`,\r\n                selectors: {\r\n                    \":hover\": {\r\n                        border: `1px solid ${palette.neutralTertiary}`,\r\n\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    }\r\n\r\n    let html;\r\n    switch (item.level) {\r\n        case 2:\r\n            html = <TextField {...textFieldProps}>\r\n                {item.description}\r\n            </TextField>\r\n            break;\r\n        default:\r\n            html = <span>{item.description}</span>\r\n            break;\r\n    }\r\n\r\n    return html\r\n}\r\n\r\nconst operatorsRender = (item: NodeInfo, palette: IPalette, t: Function, handleAdd: Function, handleDelete: Function) => {\r\n    const commandStyles: Partial<IButtonStyles> = {\r\n        root: {\r\n            height: 25,\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: palette.neutralLighter,\r\n        },\r\n        icon: {\r\n            fontSize: 13,\r\n            color: palette.black,\r\n        },\r\n    };\r\n\r\n    return (item.level === 2 &&\r\n        <React.Fragment>\r\n            <TooltipHost content={t(\"tooltip-add-act\")}>\r\n                <IconButton\r\n                    iconProps={{ iconName: \"Add\" }}\r\n                    styles={commandStyles}\r\n                    onClick={() => handleAdd(item.id)}\r\n                />\r\n            </TooltipHost>\r\n            {item.hasSiblings &&\r\n                <TooltipHost content={t(\"tooltip-delete-act\")}>\r\n                    <IconButton\r\n                        iconProps={{ iconName: \"Cancel\" }}\r\n                        styles={commandStyles}\r\n                        onClick={() => handleDelete(item.id)}\r\n                    />\r\n                </TooltipHost>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { toNumber } from 'lodash';\r\n\r\nimport { selectProject } from 'store/slices/projectslice';\r\nimport ActivitiesMatrixGraph from 'models/canadian/actvitiesmatrix';\r\nimport ActivityMatrixTextFieldInput from \"components/inputs/activitytext\"\r\n\r\nexport default function ActivitiesMatrixForm() {\r\n\r\n  // LOGIC\r\n  const project = useSelector(selectProject);\r\n  const logicModelActivitiesMatrix = project.methodology.instruments.logicModelActivities as ActivitiesMatrixGraph;\r\n\r\n  const initialItems = logicModelActivitiesMatrix.buidOutputsActivityList();\r\n\r\n  const [items, setItems] = useState(initialItems);\r\n  const [activitiesMatrix, setActivitiesMatrix] = useState(logicModelActivitiesMatrix);\r\n\r\n  const handleAddActivity = (itemId: string) => {\r\n    const outputId = itemId.slice(0, 4);\r\n    const activityId = itemId[4];\r\n\r\n    setActivitiesMatrix(activitiesMatrix.addActivityToOutput(outputId, activityId));\r\n    setItems(activitiesMatrix.buidOutputsActivityList());\r\n  }\r\n\r\n  const handleDeleteActivity = (itemId: string) => {\r\n    const outputId = itemId.slice(0, 4);\r\n    const activityId = (toNumber(itemId[4]) + 1).toString();\r\n\r\n    setActivitiesMatrix(activitiesMatrix.deleteActivity(outputId, activityId));\r\n    setItems(activitiesMatrix.buidOutputsActivityList());\r\n  }\r\n\r\n  return <ActivityMatrixTextFieldInput\r\n    rowItems={items}\r\n    handleAddActivity={handleAddActivity}\r\n    handleDeleteActivity={handleDeleteActivity}\r\n  />\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport default function Main() {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/workplace\">Workplace</Link>\r\n      <SignupForm />\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst SignupForm = () => {\r\n  // Pass the useFormik() hook initial form values and a submit function that will\r\n  // be called when the form is submitted\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n    },\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated } from \"react-spring\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px 5% 50px 5%;\r\n`;\r\n\r\ntype PagecontainerProps = {\r\n  className?: string;\r\n  spring: any;\r\n  scrollHeight: string | number | undefined;\r\n}\r\nexport const PageContainer: React.FunctionComponent<PagecontainerProps> = (props) => {\r\n\r\n  const { className, spring, scrollHeight } = props;\r\n\r\n  return <animated.div style={spring}>\r\n    <Scrollbars autoHide autoHeight autoHeightMin={100} autoHeightMax={scrollHeight} >\r\n      <Container className={className} >\r\n        {props.children}\r\n      </Container>\r\n    </Scrollbars>\r\n  </animated.div>\r\n};\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Fixed = styled.div.attrs(props => ({ direction: \"top\" || \"bottom\" }))`\r\n  position: fixed;\r\n  width: 100%;\r\n  z-index: 10;\r\n  ${props => props.direction === \"top\" ? \"top : 0\" : \"bottom : 0\"} \r\n`;\r\n\r\ntype StickyProps = {\r\n    direction: \"top\" | \"bottom\";\r\n}\r\n\r\nexport const Sticky: React.FunctionComponent<StickyProps> = (props) => {\r\n    return (\r\n        <Fixed direction={props.direction}>{props.children}</Fixed>\r\n    )\r\n}","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// import Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport English from \"languages/locales/en.json\";\r\nimport Spanish from \"languages/locales/es.json\";\r\n\r\ni18n\r\n  // .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    keySeparator: false,\r\n    // debug: true,\r\n    resources: {\r\n      en: English,\r\n      es: Spanish,\r\n    },\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n","export function fullscreenToggler() {\r\n  var elem = document.documentElement;\r\n\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  } else {\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen();\r\n    }\r\n  }\r\n}\r\n","import i18n from \"i18n\"\r\nimport {\r\n  ICommandBarItemProps,\r\n} from \"@fluentui/react\";\r\n\r\nimport { fullscreenToggler } from \"components/fullscreentoogler\";\r\n\r\ni18n.loadNamespaces(\"commands\");\r\n\r\nexport const items: ICommandBarItemProps[] = [\r\n  {\r\n    key: \"goback\",\r\n    iconProps: { iconName: \"Undo\" },\r\n    text: i18n.t('commands:undo'),\r\n    iconOnly: true,\r\n  },\r\n  {\r\n    key: \"goforward\",\r\n    iconProps: { iconName: \"Redo\" },\r\n    text: i18n.t('commands:redo'),\r\n    iconOnly: true,\r\n  },\r\n  {\r\n    key: \"share\",\r\n    iconProps: { iconName: \"Share\" },\r\n    text: i18n.t('commands:share'),\r\n    iconOnly: true,\r\n    onClick: () => alert(\"Share\"),\r\n  },\r\n  {\r\n    key: \"export\",\r\n    iconProps: { iconName: \"Export\" },\r\n    text: i18n.t('commands:export'),\r\n    iconOnly: true,\r\n    onClick: () => alert(\"Export\"),\r\n  },\r\n];\r\n\r\nexport const overflowItems: ICommandBarItemProps[] = [\r\n  {\r\n    key: \"new\",\r\n    text: i18n.t(\"commands:newproject\"),\r\n    iconProps: { iconName: \"Document\" },\r\n    onClick: () => alert(\"Move to\"),\r\n  },\r\n  {\r\n    key: \"open\",\r\n    text: i18n.t(\"commands:openproject\"),\r\n    iconProps: { iconName: \"OpenFolderHorizontal\" },\r\n    onClick: () => alert(\"Open Project\"),\r\n  },\r\n  {\r\n    key: \"Destroy\",\r\n    text: i18n.t(\"commands:destroyproject\"),\r\n    iconProps: { iconName: \"PageRemove\" },\r\n    onClick: () => alert(\"Destroy project\"),\r\n  },\r\n  {\r\n    key: \"Duplicate\",\r\n    text: i18n.t(\"commands:duplicate\"),\r\n    iconProps: { iconName: \"Documentation\" },\r\n    onClick: () => alert(\"Duplicate project\"),\r\n  },\r\n  {\r\n    key: \"Print\",\r\n    text: i18n.t(\"commands:print\"),\r\n    iconProps: { iconName: \"Print\" },\r\n    onClick: () => alert(\"Print project\"),\r\n  },\r\n];\r\n\r\nexport const faritems = (OpenLanguagePanel: Function, OpenSettingsPanel: Function) => {\r\n  return [\r\n    {\r\n      key: \"fullscreen\",\r\n      text: i18n.t(\"commands:fullscreen\"),\r\n      ariaLabel: \"Full Screen\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"FullScreen\" },\r\n      onClick: fullscreenToggler,\r\n    },\r\n    {\r\n      key: \"language\",\r\n      text: i18n.t(\"commands:language\"),\r\n      ariaLabel: \"Language\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"LocaleLanguage\" },\r\n      onClick: OpenLanguagePanel,\r\n    },\r\n    {\r\n      key: \"settings\",\r\n      text: i18n.t(\"commands:settings\"),\r\n      ariaLabel: \"Change Settings\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Settings\" },\r\n      onClick: OpenSettingsPanel,\r\n    },\r\n    {\r\n      key: \"notifications\",\r\n      text: i18n.t(\"commands:notifications\"),\r\n      ariaLabel: \"Change Notifications\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Ringer\" },\r\n      onClick: () => alert(\"Notificactions\"),\r\n    },\r\n    {\r\n      key: \"user\",\r\n      text: \"Gabriela Rodríguez\",\r\n      ariaLabel: \"User name\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Contact\" },\r\n      onClick: () => alert(\"Contact\"),\r\n    },\r\n  ] as ICommandBarItemProps[];\r\n}\r\n\r\n","import { Panel, IPanelStyles } from \"@fluentui/react\";\r\n\r\ntype SidePanelProps = {\r\n  header: string;\r\n  content: JSX.Element;\r\n  isOpen: boolean;\r\n  handleClose: () => void;\r\n};\r\n\r\nexport default function SidePanel(props: SidePanelProps) {\r\n  // Panel Styles\r\n  const PanelStyles: Partial<IPanelStyles> = {\r\n    root: {\r\n      marginTop: 70,\r\n    },\r\n    content: {\r\n      paddingTop: 50,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Panel\r\n      headerText={props.header}\r\n      isBlocking={false}\r\n      isOpen={props.isOpen}\r\n      onDismiss={props.handleClose}\r\n      closeButtonAriaLabel=\"Close\"\r\n      styles={PanelStyles}\r\n    >\r\n      {props.content}\r\n    </Panel>\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport IState from \"models/state\";\r\nimport i18n from \"i18n\";\r\n\r\nconst LanguageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState: i18n.language,\r\n  reducers: {\r\n    setLanguage: (state: string, action: PayloadAction<string>) => {\r\n      const { payload } = action;\r\n      i18n.changeLanguage(payload);\r\n      return state = payload;\r\n    },\r\n    setEnglish: (state: string) => {\r\n      state = \"en\";\r\n      i18n.changeLanguage(state);\r\n    },\r\n    setSpanish: (state: string) => {\r\n      state = \"es\";\r\n      i18n.changeLanguage(state);\r\n    },\r\n    setGerman: (state: string) => {\r\n      state = \"de\";\r\n      i18n.changeLanguage(state);\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectLanguage = (state: IState) => state.language;\r\nexport const { setLanguage, setEnglish, setSpanish } = LanguageSlice.actions;\r\n\r\nexport default LanguageSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Dropdown,\r\n  IDropdownOption,\r\n  IStackTokens,\r\n  Stack,\r\n} from \"@fluentui/react\";\r\n\r\nimport { setLanguage, selectLanguage } from \"store/slices/languageslice\";\r\n\r\nexport default function LanguagePanel() {\r\n  const { t } = useTranslation([\"sidepanel\", \"languages\"]);\r\n  const lang = useSelector(selectLanguage);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDataOnChange = (\r\n    event: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption<any>\r\n  ) => {\r\n    if (item) dispatch(setLanguage(item.key.toString()));\r\n  };\r\n\r\n  const stackTokens: IStackTokens = { childrenGap: 20 };\r\n\r\n  const suportedLangs = [\r\n    { key: \"en\", text: t(\"languages:en\") },\r\n    { key: \"es\", text: t(\"languages:es\") },\r\n    { key: \"de\", text: t(\"languages:de\") },\r\n  ];\r\n\r\n  return (\r\n    <Stack tokens={stackTokens}>\r\n      <Dropdown\r\n        label={t(\"langUI\")}\r\n        defaultSelectedKey={lang ? lang : undefined}\r\n        placeholder={t(\"selectlang\")}\r\n        options={suportedLangs}\r\n        onChange={handleDataOnChange}\r\n      />\r\n      <Dropdown\r\n        label={t(\"langdata\")}\r\n        placeholder={t(\"selectlang\")}\r\n        options={suportedLangs}\r\n        onChange={() => { }}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import { createTheme, IColorCellProps } from \"@fluentui/react\";\r\n\r\nexport const themeWord = createTheme({\r\n  palette: {\r\n    themePrimary: \"#2b579a\",\r\n    themeLighterAlt: \"#f4f7fb\",\r\n    themeLighter: \"#d3deef\",\r\n    themeLight: \"#b0c3e0\",\r\n    themeTertiary: \"#6e90c2\",\r\n    themeSecondary: \"#3d66a5\",\r\n    themeDarkAlt: \"#274e8a\",\r\n    themeDark: \"#214274\",\r\n    themeDarker: \"#183156\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themeExcel = createTheme({\r\n  palette: {\r\n    themePrimary: \"#217346\",\r\n    themeLighterAlt: \"#f2f9f5\",\r\n    themeLighter: \"#cee9da\",\r\n    themeLight: \"#a8d5bc\",\r\n    themeTertiary: \"#62ab83\",\r\n    themeSecondary: \"#318456\",\r\n    themeDarkAlt: \"#1e673f\",\r\n    themeDark: \"#195735\",\r\n    themeDarker: \"#134027\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themePowerPoint = createTheme({\r\n  palette: {\r\n    themePrimary: \"#b7472a\",\r\n    themeLighterAlt: \"#fcf6f4\",\r\n    themeLighter: \"#f4dcd6\",\r\n    themeLight: \"#eabeb4\",\r\n    themeTertiary: \"#d48672\",\r\n    themeSecondary: \"#c0583e\",\r\n    themeDarkAlt: \"#a53f26\",\r\n    themeDark: \"#8c3620\",\r\n    themeDarker: \"#672718\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themeTeams = createTheme({\r\n  palette: {\r\n    themePrimary: \"#6264a7\",\r\n    themeLighterAlt: \"#f7f7fb\",\r\n    themeLighter: \"#e1e1f1\",\r\n    themeLight: \"#c8c9e4\",\r\n    themeTertiary: \"#989ac9\",\r\n    themeSecondary: \"#7173b0\",\r\n    themeDarkAlt: \"#585a95\",\r\n    themeDark: \"#4a4c7e\",\r\n    themeDarker: \"#37385d\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport default themeWord;\r\n\r\nexport const colorCells: IColorCellProps[] = [\r\n  { id: \"1\", label: \"word\", color: \"#2b579a\" },\r\n  { id: \"2\", label: \"excel\", color: \"#217346\" },\r\n  { id: \"3\", label: \"powerpoint\", color: \"#a92b1a\" },\r\n  { id: \"4\", label: \"teams\", color: \"#6264a7\" },\r\n];\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IPartialTheme, ITheme, loadTheme } from \"@fluentui/react\";\r\nimport {\r\n  themeExcel,\r\n  themeWord,\r\n  themePowerPoint,\r\n  themeTeams,\r\n} from \"themes/office\";\r\nimport IState from \"models/state\";\r\n\r\nconst themeSlice = createSlice({\r\n  name: \"theme\",\r\n  initialState: themeWord,\r\n  reducers: {\r\n    setTheme: (state: ITheme, action: PayloadAction<string>) => {\r\n      const { payload } = action;\r\n\r\n      switch (payload) {\r\n        case \"word\":\r\n          state = themeWord;\r\n          break;\r\n        case \"excel\":\r\n          state = themeExcel;\r\n          break;\r\n        case \"powerpoint\":\r\n          state = themePowerPoint;\r\n          break;\r\n        case \"teams\":\r\n          state = themeTeams;\r\n          break;\r\n      }\r\n      loadTheme(state as IPartialTheme);\r\n    },\r\n    setThemeWord: (state: ITheme) => {\r\n      state = themeWord;\r\n      loadTheme(themeWord);\r\n    },\r\n    setThemeExcel: (state: ITheme) => {\r\n      state = themeExcel;\r\n      loadTheme(themeExcel);\r\n    },\r\n    setThemePowerPoint: (state: ITheme) => {\r\n      state = themePowerPoint;\r\n      loadTheme(themePowerPoint);\r\n    },\r\n    setThemeTeams: (state: ITheme) => {\r\n      state = themeTeams;\r\n      loadTheme(themeTeams);\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectCurrentTheme = (state: IState) => state.theme;\r\nexport const {\r\n  setTheme,\r\n  setThemeExcel,\r\n  setThemePowerPoint,\r\n  setThemeTeams,\r\n  setThemeWord,\r\n} = themeSlice.actions;\r\n\r\nexport default themeSlice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport classnames from \"classnames\";\r\nimport { mergeStyleSets } from \"@fluentui/react\";\r\n\r\ninterface CircleProps {\r\n  ariaLabel?: string;\r\n  size: string;\r\n  color: string;\r\n  border: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst StyledCircle = styled.div`\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport function Circle(props: CircleProps) {\r\n  const classes = mergeStyleSets({\r\n    circleprops: {\r\n      height: props.size,\r\n      width: props.size,\r\n      backgroundColor: props.color,\r\n      border: \"4px solid \" + props.border,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StyledCircle\r\n      onClick={props.onClick}\r\n      className={classnames(props.className, classes.circleprops)}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IColorCellProps, mergeStyleSets, useTheme } from \"@fluentui/react\";\r\nimport { Circle } from \"components/styled/shapes\";\r\n\r\ntype SwatchThemePickerProps = {\r\n  colorCells: IColorCellProps[];\r\n  size: string;\r\n  handler: (id: string) => void;\r\n};\r\n\r\nexport default function ThemePicker(props: SwatchThemePickerProps) {\r\n  const { colorCells, handler, size } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n  const classes = mergeStyleSets({\r\n    circle: {\r\n      \":hover\": {\r\n        cursor: \"pointer\",\r\n        border: \"solid 4px \" + palette.neutralLighter,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {colorCells.map((cell) => {\r\n        return (\r\n          <div key={cell.id}>\r\n            <Circle\r\n              ariaLabel={cell.label}\r\n              size={size}\r\n              color={cell.color}\r\n              border={palette.neutralQuaternaryAlt}\r\n              onClick={() => handler(cell.label || \"\")}\r\n              className={classes.circle}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  ISeparatorProps,\r\n  ITextFieldStyles,\r\n  Label,\r\n  Persona,\r\n  PersonaInitialsColor,\r\n  PersonaSize,\r\n  Separator,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { setTheme } from \"store/slices/themeslice\";\r\nimport ThemePicker from \"components/pickers/themepicker\";\r\nimport { colorCells } from \"themes/office\";\r\n\r\nexport default function SettingsPanel() {\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  // TextField Styles\r\n  const nameTextFieldStyles: Partial<ITextFieldStyles> = {\r\n    fieldGroup: {\r\n      borderColor: palette.neutralTertiary,\r\n      \":hover\": {\r\n        borderColor: palette.neutralSecondary,\r\n      },\r\n    },\r\n  };\r\n\r\n  // Horizontal Separators\r\n  const separatorProps: ISeparatorProps = {\r\n    alignContent: \"end\",\r\n    styles: {\r\n      root: {\r\n        \"::before\": {\r\n          background: palette.neutralTertiaryAlt,\r\n          height: 0.4,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation([\"sidepanel\"]);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Stack tokens={{ childrenGap: 15 }}>\r\n      <Separator {...separatorProps}>\r\n        <Text variant=\"mediumPlus\">\r\n          <b>User</b>\r\n        </Text>\r\n      </Separator>\r\n      {/* NAME */}\r\n      <Stack.Item>\r\n        <TextField\r\n          label={t(\"name\")}\r\n          defaultValue=\"Gabriela Rodríguez\"\r\n          styles={nameTextFieldStyles}\r\n        ></TextField>\r\n      </Stack.Item>\r\n      {/* NICKNAME */}\r\n      <Stack.Item>\r\n        <TextField\r\n          label={t(\"nick\")}\r\n          defaultValue=\"Gabi\"\r\n          styles={nameTextFieldStyles}\r\n        ></TextField>\r\n      </Stack.Item>\r\n      {/* COIN */}\r\n      <Stack.Item>\r\n        <Label>{t(\"coin\")}</Label>\r\n        <Persona\r\n          text=\"Gabriela Rodríguez\"\r\n          size={PersonaSize.size40}\r\n          initialsColor={PersonaInitialsColor.cyan}\r\n        />\r\n      </Stack.Item>\r\n      <br />\r\n      <Separator {...separatorProps}>\r\n        <Text variant=\"mediumPlus\">\r\n          <b>{t(\"theme\")}</b>\r\n        </Text>\r\n      </Separator>\r\n      {/* <Stack.Item>\r\n        <Toggle\r\n          label=\"Select a theme\"\r\n          defaultChecked\r\n          onText=\"Dark\"\r\n          offText=\"Light\"\r\n          onChange={handleChangeTheme}\r\n        />\r\n      </Stack.Item> */}\r\n      <Stack.Item>\r\n        <Label>{t(\"colortheme\")}</Label>\r\n        <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n          <ThemePicker\r\n            colorCells={colorCells}\r\n            size=\"30px\"\r\n            handler={(key) => dispatch(setTheme(key))}\r\n          />\r\n        </Stack>\r\n      </Stack.Item>\r\n    </Stack>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { useTheme, CommandBarButton, IContextualMenuItemStyles, IButtonProps, concatStyleSets, IPalette, FontSizes } from '@fluentui/react';\r\n\r\nexport function CustomBarButton(props: IButtonProps) {\r\n\r\n    const { palette } = useTheme();\r\n\r\n    const itemStyles: IContextualMenuItemStyles = {\r\n        root: {\r\n            backgroundColor: palette.themePrimary\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: palette.themeDark\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: palette.themeDarker\r\n        },\r\n        icon: {\r\n            color: palette.white\r\n        },\r\n        iconHovered: {\r\n            color: palette.white\r\n        },\r\n        iconPressed: {\r\n            color: palette.white\r\n        },\r\n        label: {\r\n            color: palette.white\r\n        },\r\n        labelHovered: {\r\n            color: palette.white\r\n        },\r\n    };\r\n\r\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\r\n\r\n};\r\n\r\nexport function CustomOverflowButton(props: IButtonProps) {\r\n\r\n    const { palette } = useTheme();\r\n\r\n    const itemStyles: IContextualMenuItemStyles = {\r\n        root: {\r\n            backgroundColor: palette.themePrimary,\r\n\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: palette.themeDark,\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: palette.themeDarker,\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: palette.themeDarker,\r\n        },\r\n        rootExpandedHovered: {\r\n            backgroundColor: palette.themeDark,\r\n        },\r\n        menuIcon: {\r\n            color: palette.white + \" !important\",\r\n            fontSize: FontSizes.medium\r\n        },\r\n    };\r\n\r\n    return <CommandBarButton {...props} styles={concatStyleSets(props.styles, itemStyles)} />;\r\n\r\n};\r\n\r\n// Overflow Buttons Props\r\nexport const overflowProps = (palette: IPalette) => {\r\n    return {\r\n        ariaLabel: \"More commands\",\r\n        menuProps: {\r\n            styles: {\r\n                subComponentStyles: {\r\n                    menuItem: {\r\n                        icon: { color: palette.black }\r\n                    }\r\n                }\r\n            },\r\n            items: [],\r\n        }\r\n    } as IButtonProps;\r\n};","import React, { useCallback, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  CommandBar,\r\n  ICommandBarStyles,\r\n  ITextStyles,\r\n  Text,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { faritems, items, overflowItems } from \"./items\";\r\nimport SidePanel from \"components/sidepanel\";\r\nimport LanguagePanel from \"components/sidepanel/languagepanel\";\r\nimport SettingsPanel from \"components/sidepanel/settings/settingspanel\";\r\nimport { CustomBarButton, CustomOverflowButton, overflowProps } from \"./custombuttons\";\r\n\r\nexport default function CommandMenu() {\r\n  const { palette } = useTheme();\r\n  const { t } = useTranslation(\"methodologies\");\r\n\r\n  // STYLES\r\n  const comandBarStyles: ICommandBarStyles = {\r\n    root: {\r\n      height: 36,\r\n      padding: 0,\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n  };\r\n\r\n  const textStyles: ITextStyles = {\r\n    root: {\r\n      position: \"absolute\",\r\n      top: 10,\r\n      left: \"50%\",\r\n      transform: \"translateX(-50%)\",\r\n      color: palette.themeLight,\r\n    },\r\n  };\r\n\r\n  // Panel State\r\n  const [languagePanelOpen, setLanguagePanelOpen] = useState(false);\r\n  const [settingsPanelOpen, setSettingsPanelOpen] = useState(false);\r\n\r\n  const OpenLanguagePanel = useCallback(() => {\r\n    setLanguagePanelOpen(true);\r\n    setSettingsPanelOpen(false);\r\n  }, []);\r\n  const CloseLanguagePanel = useCallback(() => setLanguagePanelOpen(false), []);\r\n\r\n  const OpenSettingsPanel = useCallback(() => {\r\n    setSettingsPanelOpen(true);\r\n    setLanguagePanelOpen(false);\r\n  }, []);\r\n  const CloseSettingsPanel = useCallback(() => setSettingsPanelOpen(false), []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Text variant=\"small\" styles={textStyles}>\r\n        Project 1 - {t(\"methodologies:canadian\")}\r\n      </Text>\r\n\r\n      <CommandBar\r\n        buttonAs={CustomBarButton}\r\n        items={items}\r\n        farItems={faritems(OpenLanguagePanel, OpenSettingsPanel)}\r\n        overflowItems={overflowItems}\r\n        overflowButtonAs={CustomOverflowButton}\r\n        overflowButtonProps={overflowProps(palette)}\r\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n        styles={comandBarStyles}\r\n      />\r\n\r\n      <SidePanel\r\n        header={t(\"sidepanel:headerlang\")}\r\n        content={<LanguagePanel />}\r\n        isOpen={languagePanelOpen}\r\n        handleClose={CloseLanguagePanel}\r\n      />\r\n      <SidePanel\r\n        header={t(\"sidepanel:headersettings\")}\r\n        content={<SettingsPanel />}\r\n        isOpen={settingsPanelOpen}\r\n        handleClose={CloseSettingsPanel}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FontSizes,\r\n  IPivotStyles,\r\n  Pivot,\r\n  PivotItem,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { TabSchema } from \"models/workplace\";\r\nimport { setLatestMenuTab } from \"store/slices/workplaceslice\";\r\n\r\ntype PivotBarProps = {\r\n  schema: TabSchema;\r\n  setShowToolBar: Function;\r\n};\r\n\r\nexport default function PivotBar(props: PivotBarProps) {\r\n  const { schema, setShowToolBar } = props;\r\n  const { tabs } = schema;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const pivotStyles: Partial<IPivotStyles> = {\r\n    root: {\r\n      height: 34,\r\n      backgroundColor: palette.themePrimary,\r\n      zIndex: 10,\r\n    },\r\n    link: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.themePrimary,\r\n      color: palette.white,\r\n      fontSize: FontSizes.small,\r\n      \":hover\": {\r\n        backgroundColor: palette.themeDarkAlt,\r\n        color: palette.white,\r\n      },\r\n      \":active\": {\r\n        backgroundColor: palette.themeDark,\r\n        color: palette.white,\r\n      },\r\n      \":focus\": {\r\n        backgroundColor: palette.themePrimary,\r\n        color: palette.white,\r\n      },\r\n    },\r\n    linkIsSelected: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralLighter + \" !important\",\r\n      color: palette.black + \" !important\",\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation(\"menu\");\r\n\r\n  // Tabs State\r\n  const dispatch = useDispatch();\r\n\r\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => {\r\n    setShowToolBar(true)\r\n\r\n    if (item) {\r\n      const itemkey = item.props.itemKey!;\r\n      // Update current menu tab\r\n      dispatch(setLatestMenuTab({ tabKey: itemkey }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Pivot\r\n      linkFormat=\"tabs\"\r\n      defaultSelectedKey=\"key2\"\r\n      styles={pivotStyles}\r\n      onLinkClick={handleMenuOnClick}\r\n    >\r\n      {tabs.map((tab) => {\r\n        return (\r\n          <PivotItem\r\n            key={tab.key}\r\n            itemKey={tab.key}\r\n            headerText={t(tab.name)}\r\n            itemIcon={tab.icon}\r\n          />\r\n        );\r\n      })}\r\n    </Pivot>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Facepile,\r\n  OverflowButtonType,\r\n  IFacepilePersona,\r\n  IButtonProps,\r\n  PersonaInitialsColor,\r\n  IFacepileStyles,\r\n  PersonaSize,\r\n} from \"@fluentui/react\";\r\n\r\n// OverflowButton Props\r\nconst overflowButtonProps: IButtonProps = {\r\n  ariaLabel: \"More users\",\r\n  onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\r\n    alert(\"overflow icon clicked\"),\r\n};\r\n\r\n// AddButton Props\r\nconst addButtonProps = () => ({\r\n  ariaLabel: \"Add a new person\",\r\n  href: \"/\",\r\n});\r\n\r\n// STYLES\r\nconst FacePileStyles: Partial<IFacepileStyles> = {\r\n  root: {\r\n    position: \"absolute\",\r\n    top: 38,\r\n    right: 8,\r\n    zIndex: 10\r\n  },\r\n  itemButton: {\r\n    margin: \"0 -2px 0 -2px\",\r\n  },\r\n};\r\n\r\n// Data\r\nconst faces: IFacepilePersona[] = [\r\n  {\r\n    personaName: \"Gabriela Rodríguez\",\r\n    initialsColor: PersonaInitialsColor.gray,\r\n  },\r\n  {\r\n    personaName: \"Amaury Díaz\",\r\n    initialsColor: PersonaInitialsColor.gold,\r\n  },\r\n  {\r\n    personaName: \"Iliana Hernandez\",\r\n    initialsColor: PersonaInitialsColor.lightGreen,\r\n  },\r\n  {\r\n    personaName: \"Laura Rodríguez\",\r\n    initialsColor: PersonaInitialsColor.warmGray,\r\n  },\r\n  {\r\n    personaName: \"Lili Masters\",\r\n    initialsColor: PersonaInitialsColor.blue,\r\n  },\r\n  {\r\n    personaName: \"Susana Naranjo\",\r\n    initialsColor: PersonaInitialsColor.green,\r\n  },\r\n  {\r\n    personaName: \"Lupe Dantes\",\r\n    initialsColor: PersonaInitialsColor.darkBlue,\r\n  },\r\n  {\r\n    personaName: \"Karen Ganter\",\r\n    initialsColor: PersonaInitialsColor.lightGreen,\r\n  },\r\n  {\r\n    personaName: \"Josephine Filipie\",\r\n    initialsColor: PersonaInitialsColor.purple,\r\n  },\r\n  {\r\n    personaName: \"Daniel Hertys\",\r\n    initialsColor: PersonaInitialsColor.orange,\r\n  },\r\n];\r\n\r\nexport default function TeamPile() {\r\n  return (\r\n    <Facepile\r\n      personas={faces}\r\n      personaSize={PersonaSize.size24}\r\n      maxDisplayablePersonas={4}\r\n      overflowButtonProps={overflowButtonProps}\r\n      overflowButtonType={OverflowButtonType.descriptive}\r\n      addButtonProps={addButtonProps()}\r\n      ariaDescription=\"To move through the items use left and right arrow keys.\"\r\n      styles={FacePileStyles}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport PivotBar from \"components/menus/mainmenu/pivotbar\";\r\nimport TeamPile from \"components/menus/mainmenu/teampile\";\r\nimport { TabSchema } from \"models/workplace\";\r\n\r\ntype MenuProps = {\r\n  tabs: TabSchema;\r\n  setShowToolBar: Function;\r\n}\r\n\r\nexport default function MainMenu(props: MenuProps) {\r\n\r\n  const { setShowToolBar, tabs } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PivotBar schema={tabs} setShowToolBar={setShowToolBar} />\r\n      <TeamPile />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  useTheme,\r\n  IconButton,\r\n  Stack,\r\n  IStackItemProps,\r\n  IStackProps\r\n} from \"@fluentui/react\";\r\nimport { FunctionComponent, useEffect, useRef } from \"react\";\r\nimport { animated } from \"react-spring\";\r\n\r\ntype ToolBarProps = {\r\n  isFixed: boolean;\r\n  handleClose: () => void;\r\n  handleFix: () => void;\r\n  transition: Function;\r\n}\r\n\r\nconst ToolBar: FunctionComponent<ToolBarProps> = (props) => {\r\n  const { children, isFixed, handleClose, handleFix, transition } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const stackProps: IStackProps = {\r\n    horizontal: true,\r\n    horizontalAlign: \"space-between\",\r\n    styles: {\r\n      root: {\r\n        height: 94,\r\n        padding: \"0 10px 2px 10px\",\r\n        backgroundColor: palette.neutralLighter,\r\n        borderBottom: \"1px solid #E0E0E0\",\r\n        color: palette.black,\r\n      }\r\n    }\r\n  };\r\n\r\n  const stackPinProps: IStackItemProps = {\r\n    align: \"end\"\r\n  };\r\n\r\n  // LOGIC\r\n  function useOutsideAlerter(ref: any) {\r\n    useEffect(() => {\r\n      function handleClickOutside(event: any) {\r\n        if (ref.current && !ref.current.contains(event.target) && !isFixed) {\r\n          handleClose();\r\n        }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        // Unbind the event listener on clean up\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }, [ref, isFixed]);\r\n  }\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n\r\n  return transition((style: any, item: any) => item &&\r\n    <animated.div style={style}>\r\n      <div ref={wrapperRef}>\r\n        <Stack {...stackProps} >\r\n          <Stack.Item >\r\n            {children}\r\n          </Stack.Item>\r\n\r\n          <Stack.Item {...stackPinProps}>\r\n            {isFixed ?\r\n              <IconButton iconProps={{ iconName: 'ChevronUp' }} title=\"Cancel\" ariaLabel=\"Cancel\" onClick={(item) => handleClose()} /> :\r\n              <IconButton iconProps={{ iconName: 'Pin' }} title=\"Pin\" ariaLabel=\"Cancel\" onClick={(item) => handleFix()} />\r\n            }\r\n          </Stack.Item>\r\n        </Stack>\r\n      </div>\r\n    </animated.div>\r\n  )\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FontSizes,\r\n  FontWeights,\r\n  IPivotStyles,\r\n  Pivot,\r\n  PivotItem,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { Tab } from \"models/workplace\";\r\n\r\ntype PagesTabProps = {\r\n  tabs?: Tab[];\r\n  defaultKey?: string;\r\n  parentKey: string;\r\n  onClick: (parentkey: string, item?: PivotItem) => void;\r\n};\r\n\r\nexport default function PagesTabs(props: PagesTabProps) {\r\n\r\n  // LOGIC\r\n  const { tabs, onClick, parentKey, defaultKey, } = props;\r\n\r\n  const { t } = useTranslation(\"pages\");\r\n\r\n  const handleMenuOnClick = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement, MouseEvent>) => onClick(parentKey, item)\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const pivotStyles: Partial<IPivotStyles> = {\r\n    root: {\r\n      height: 34,\r\n      backgroundColor: palette.neutralLight,\r\n    },\r\n    link: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralLight,\r\n      color: palette.black,\r\n      fontSize: FontSizes.small,\r\n      \":hover\": {\r\n        backgroundColor: palette.neutralQuaternaryAlt,\r\n        color: palette.black,\r\n      },\r\n      \":active\": {\r\n        backgroundColor: palette.neutralTertiaryAlt,\r\n        color: palette.black,\r\n      },\r\n      \":focus\": {\r\n        backgroundColor: palette.neutralQuaternaryAlt,\r\n        color: palette.black,\r\n      },\r\n    },\r\n    linkIsSelected: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralTertiaryAlt + \" !important\",\r\n      color: palette.black + \" !important\",\r\n      fontWeight: FontWeights.semibold + \" !important\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Pivot\r\n      linkFormat=\"tabs\"\r\n      selectedKey={defaultKey}\r\n      styles={pivotStyles}\r\n      onLinkClick={handleMenuOnClick}\r\n      headersOnly={true}\r\n    >\r\n      {tabs &&\r\n        tabs.map((tab) => {\r\n          return (\r\n            <PivotItem\r\n              key={tab.key}\r\n              itemKey={tab.key}\r\n              headerText={t(tab.name)}\r\n              itemIcon={tab.icon}\r\n            >\r\n              {tab.render}\r\n            </PivotItem>\r\n          );\r\n        })}\r\n    </Pivot>\r\n  );\r\n}\r\n","import { IconButton, useTheme } from \"@fluentui/react\";\r\n\r\nexport default function AddButton() {\r\n  const { palette } = useTheme();\r\n\r\n  return (\r\n    <IconButton\r\n      iconProps={{ iconName: \"CircleAddition\" }}\r\n      styles={{ root: { color: palette.black } }}\r\n      onClick={() => alert(\"Add an instrument\")}\r\n    />\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport {\r\n  ISeparatorStyles,\r\n  IStackProps,\r\n  PivotItem,\r\n  Separator,\r\n  Stack,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport PagesTabs from \"./pagestabs\";\r\nimport AddButton from \"./addbutton\";\r\nimport { Tab } from \"models/workplace\";\r\nimport { setConfiguration } from \"store/slices/workplaceslice\";\r\n\r\ntype FooterProps = {\r\n  tab: Tab;\r\n  selectedkey: string;\r\n};\r\n\r\nexport default function Footer(props: FooterProps) {\r\n\r\n  const { tab, selectedkey } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const stackProps: IStackProps = {\r\n    horizontal: true,\r\n    styles: {\r\n      root: {\r\n        height: 34,\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        backgroundColor: palette.neutralLight,\r\n      },\r\n    },\r\n  };\r\n\r\n  const separatorStyles: Partial<ISeparatorStyles> = {\r\n    root: {\r\n      \"::after\": {\r\n        backgroundColor: palette.neutralQuaternary,\r\n      },\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTabOnClick = (parentkey: string, item?: PivotItem) => {\r\n    if (item) {\r\n      const itemkey = item.props.itemKey!;\r\n\r\n      // Update current configuration\r\n      dispatch(setConfiguration({ key: parentkey, tab: itemkey, page: item.props.children }))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack {...stackProps}>\r\n      <PagesTabs\r\n        tabs={tab.childtabs}\r\n        parentKey={tab.key}\r\n        defaultKey={selectedkey}\r\n        onClick={handleTabOnClick}\r\n      />\r\n      {tab.addtabs && <AddButton />}\r\n\r\n      <Separator vertical styles={separatorStyles} />\r\n\r\n      {/* Here goes the horizontal scrollbar when needed for the page */}\r\n    </Stack>\r\n  );\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useSpring, useTransition } from \"react-spring\";\r\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\r\n\r\nimport { selectWorkplaceConfig } from \"store/slices/workplaceslice\";\r\nimport { PageContainer } from \"components/styled/pagecontainer\";\r\nimport { Sticky } from \"components/styled/sticky\"\r\n\r\nimport CommandMenu from \"components/menus/commands/\";\r\nimport MainMenu from \"components/menus/mainmenu\";\r\nimport ToolBar from \"components/menus/mainmenu/toolbar\";\r\nimport Footer from \"components/menus/footer\";\r\n\r\nconst WorkplaceLayout: FunctionComponent = (props) => {\r\n\r\n  // Global state variables\r\n  const { latestMenuTab, configuration, tabsSchema } = useSelector(selectWorkplaceConfig);\r\n  const { tools } = configuration[latestMenuTab];\r\n  const { page } = configuration[latestMenuTab];\r\n  const footertab = tabsSchema.findByKey(latestMenuTab);\r\n  const selectedkey = configuration[latestMenuTab].tab;\r\n\r\n  // Toolbar Animation State & Controls\r\n  const [fixToolBar, setFixToolBar] = useState(true)\r\n\r\n  const [showToolBar, setShowToolBar] = useState(true)\r\n  const toolBarTransition = useTransition(showToolBar, {\r\n    from: { x: 0, y: -34, opacity: 0 },\r\n    enter: { x: 0, y: 0, opacity: 1 },\r\n    leave: { x: 0, y: -34, opacity: 0 },\r\n  })\r\n\r\n  const pageSpring = useSpring({\r\n    marginTop: showToolBar ? 180 : 80,\r\n    from: {\r\n      marginTop: 180,\r\n    },\r\n  })\r\n\r\n  const handleToolbarClose = () => {\r\n    setShowToolBar(false);\r\n    setFixToolBar(false);\r\n  }\r\n\r\n  const handleToolbarFix = () => {\r\n    setFixToolBar(true);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <RemoveScrollBar />\r\n\r\n      <Sticky direction=\"top\">\r\n        <CommandMenu />\r\n        <MainMenu tabs={tabsSchema} setShowToolBar={setShowToolBar} />\r\n        <ToolBar transition={toolBarTransition} isFixed={fixToolBar} handleClose={handleToolbarClose} handleFix={handleToolbarFix}>\r\n          {tools}\r\n        </ToolBar>\r\n      </Sticky>\r\n\r\n      <PageContainer spring={pageSpring} scrollHeight={showToolBar ? \"calc(100vh - 220px)\" : \"calc(100vh - 110px)\"}>\r\n        {page}\r\n      </PageContainer>\r\n\r\n      <Footer tab={footertab} selectedkey={selectedkey} />\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WorkplaceLayout;\r\n","import { lazy } from \"react\";\r\nimport main from \"pages/main\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport WorkplaceLayout from \"layouts/workplace\";\r\n\r\n// Canaidan Methodology - Project Tab\r\nconst GeneralForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/generalform\"));\r\nconst StakeholdersForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/stakeholdersform\"));\r\nconst LogicModelForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/logicmodelform\"));\r\nconst ActivitiesMatrixForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/activitiesform\"));\r\nconst PerformanceMeasureForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/performanceform\"));\r\nconst RisksForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/risksform\"));\r\nconst BudgetForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/budgetform\"));\r\nconst ReportsForm = lazy(() => import(\"pages/methodologies/canadian/projectforms/reportsform\"));\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/workplace\" render={WorkplaceSwitcher} />\r\n        <Route path=\"/\" render={main} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst WorkplaceSwitcher = () => (\r\n  /* Projects, Methodologies, Licitaciones, Bases de Datos */\r\n  <WorkplaceLayout>\r\n    <Switch>\r\n      <Route path=\"/workplace/project\" render={ProjectSwitcher} />\r\n      {/* <Route path=\"/workplace/methodology\" render={MethodologySwitcher} /> */}\r\n      {/* <Route path=\"/workplace/licitations\" render={MethodologySwitcher} /> */}\r\n      {/* <Route path=\"/workplace/database\" render={MethodologySwitcher} /> */}\r\n    </Switch>\r\n  </WorkplaceLayout>\r\n);\r\n\r\nconst ProjectSwitcher = () => (\r\n  /* Projects */\r\n  // After having users account and project id the url's format should be /workplace/#project_id/project/canadian/general\r\n  <Switch>\r\n    <Route path=\"/workplace/project/canadian/general\" component={GeneralForm} />\r\n    <Route path=\"/workplace/project/canadian/stakeholdres\" component={StakeholdersForm} />\r\n    <Route path=\"/workplace/project/canadian/logicmodel\" component={LogicModelForm} />\r\n    <Route path=\"/workplace/project/canadian/activitiesmatrix\" component={ActivitiesMatrixForm} />\r\n    <Route path=\"/workplace/project/canadian/performance\" component={PerformanceMeasureForm} />\r\n    <Route path=\"/workplace/project/canadian/risks\" component={RisksForm} />\r\n    <Route path=\"/workplace/project/canadian/budget\" component={BudgetForm} />\r\n    <Route path=\"/workplace/project/canadian/reports\" component={ReportsForm} />\r\n  </Switch>\r\n);\r\n","import React, { Suspense } from \"react\";\r\nimport Routes from \"routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Routes />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport IState from \"models/state\";\r\n\r\nconst HelpSlice = createSlice({\r\n  name: \"helpTooltips\",\r\n  initialState: true,\r\n  reducers: {\r\n    toogleHelp: (state: boolean) => {\r\n      return !state;\r\n    },\r\n    setHelp: (state: boolean) => {\r\n      return state = true;\r\n    },\r\n    removeHelp: (state: boolean) => {\r\n      return state = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const help = (state: IState) => state.helpTooltips;\r\nexport const { toogleHelp, setHelp, removeHelp } = HelpSlice.actions;\r\n\r\nexport default HelpSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport themeReducer from \"store/slices/themeslice\";\r\nimport languageReducer from \"store/slices/languageslice\";\r\nimport helpReducer from \"store/slices/settingslice\";\r\nimport projectReducer from \"store/slices/projectslice\";\r\nimport workplaceReducer from \"store/slices/workplaceslice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    theme: themeReducer,\r\n    language: languageReducer,\r\n    help: helpReducer,\r\n    project: projectReducer,\r\n    workplace: workplaceReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./i18n\";\r\n\r\nimport { initializeIcons, loadTheme } from \"@fluentui/react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\n\r\nloadTheme(store.getState().theme);\r\ninitializeIcons();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { TextField } from \"@fluentui/react\";\r\nimport { useBoolean } from \"@fluentui/react-hooks\";\r\n\r\nconst TextFieldInput = ({ field, form, ...props }: any) => {\r\n  const handleGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleGetError}\r\n      deferredValidationTime={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextFieldInput;\r\n\r\nexport const MultilineTextFieldInput = ({ field, form, ...props }: any) => {\r\n\r\n  const [multiline, { toggle: toggleMultiline }] = useBoolean(false);\r\n  const onChange = (ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newText: string): void => {\r\n    const newMultiline = newText.length > 50;\r\n    if (newMultiline !== multiline) {\r\n      toggleMultiline();\r\n    }\r\n  };\r\n\r\n  const handleGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      multiline={multiline}\r\n      onChange={onChange}\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleGetError}\r\n      deferredValidationTime={500}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function ChangeNarrativeForm() {\r\n    return <div>ChangeNarrative Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LotForm() {\r\n  return <div>Lot Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SpecificationsForm() {\r\n  return <div>Specification Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TechnicalOfferForm() {\r\n  return <div>Technical Offer Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FinancialOfferForm() {\r\n  return <div>Financial Offer Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FormsTutorials() {\r\n  return <div>Forms Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SectorsTutorials() {\r\n  return <div>Sectors Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function GuidesTutorials() {\r\n  return <div>Guides Tutorials</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MethodologyTutorials() {\r\n  return <div>Methodology Tutorials</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function OutcomesTutorial() {\r\n  return <div>Outcomes Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function IndicatorsTutorial() {\r\n  return <div>Indicators Tutorials</div>;\r\n}\r\n","import React, { ReactNode } from \"react\";\r\nimport { Label } from \"@fluentui/react\";\r\n\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport IState from \"models/state\";\r\nimport IWorkplaceConfiguration, { TabSchema } from \"models/workplace\";\r\nimport tabsConfiguration from \"pages/methodologies/canadian/tabsconfiguration\";\r\n\r\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\r\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\r\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\r\n\r\nconst initialState: IWorkplaceConfiguration = {\r\n    tabsSchema: tabsConfiguration,\r\n    latestMenuTab: \"key2\",\r\n    configuration: { // menuTabKey : { toolBarComponentToRender, latestFormTab, pageComponentToRender}\r\n        key1: { tools: <Label>Pivot #1</Label>, tab: \"key1\", page: <React.Fragment /> },\r\n        key2: { tools: <Label>Pivot #2</Label>, tab: \"key1\", page: <GeneralForm /> },\r\n        key3: { tools: <Label>Pivot #3</Label>, tab: \"key1\", page: <SpecificationsForm /> },\r\n        key4: { tools: <Label>Pivot #4</Label>, tab: \"key1\", page: <FormsTutorials /> },\r\n        key5: { tools: <Label>Pivot #5</Label>, tab: \"key1\", page: <React.Fragment /> },\r\n        key6: { tools: <Label>Pivot #6</Label>, tab: \"key1\", page: <React.Fragment /> },\r\n    }\r\n};\r\n\r\nconst workplaceSlice = createSlice({\r\n    name: \"workplace\",\r\n    initialState,\r\n    reducers: {\r\n        setTabSchema: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabs: TabSchema }>) => {\r\n            state.tabsSchema = action.payload.tabs;\r\n        },\r\n        setLatestMenuTab: (state: IWorkplaceConfiguration, action: PayloadAction<{ tabKey: string }>) => {\r\n            state.latestMenuTab = action.payload.tabKey;\r\n        },\r\n        setConfiguration: (state: IWorkplaceConfiguration, action: PayloadAction<{ key: string, tab: string, page: ReactNode }>) => {\r\n            const { key, tab, page } = action.payload;\r\n            const { tools } = state.configuration[key];\r\n            state.configuration[key] = { tools, tab, page }\r\n        }\r\n    },\r\n});\r\n\r\nexport const selectWorkplaceConfig = (state: IState) => state.workplace;\r\nexport const { setTabSchema, setLatestMenuTab, setConfiguration } = workplaceSlice.actions;\r\n\r\nexport default workplaceSlice.reducer;\r\n","import { Redirect } from \"react-router\";\r\nimport { Label } from \"@fluentui/react\";\r\n\r\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\r\nimport StakeholdersForm from \"pages/methodologies/canadian/projectforms/stakeholdersform\";\r\nimport LogicModelForm from \"pages/methodologies/canadian/projectforms/logicmodelform\";\r\nimport ActivitiesMatrixForm from \"pages/methodologies/canadian/projectforms/activitiesform\";\r\nimport PerformanceMeasureForm from \"pages/methodologies/canadian/projectforms/performanceform\";\r\nimport RisksForm from \"pages/methodologies/canadian/projectforms/risksform\";\r\nimport BudgetForm from \"pages/methodologies/canadian/projectforms/budgetform\";\r\nimport ReportsForm from \"pages/methodologies/canadian/projectforms/reportsform\";\r\nimport ChangeNarrativeForm from \"pages/methodologies/canadian/projectforms/changenarrativeform\";\r\n\r\nimport LotForm from \"pages/methodologies/canadian/licitationforms/lotform\";\r\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\r\nimport TechnicalOfferForm from \"pages/methodologies/canadian/licitationforms/technicalofferform\";\r\nimport FinancialOfferForm from \"pages/methodologies/canadian/licitationforms/financialofferform\";\r\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\r\nimport SectorsTutorials from \"pages/methodologies/canadian/tutorials/sectorstutorial\";\r\nimport GuidesTutorials from \"pages/methodologies/canadian/tutorials/guidestutorial\";\r\nimport Tutorials from \"pages/methodologies/canadian/tutorials/methodologytutorials\";\r\nimport OutcomesTutorial from \"pages/methodologies/canadian/tutorials/outcomestutorial\";\r\nimport IndicatorsTutorial from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\r\nimport { TabSchema } from \"models/workplace\";\r\n\r\nconst tabsConfiguration = new TabSchema([\r\n  {\r\n    key: \"key1\",\r\n    name: \"wikiml\",\r\n    icon: \"WebComponents\",\r\n    render: <Redirect to=\"/\" />,\r\n  },\r\n  {\r\n    key: \"key2\",\r\n    name: \"project\",\r\n    icon: \"Page\",\r\n    render: <Label>Pivot #1</Label>,\r\n    addtabs: true,\r\n    childtabs: [\r\n      { key: \"key1\", name: \"general\", icon: \"Info\", render: <GeneralForm /> },\r\n      {\r\n        key: \"key2\",\r\n        name: \"stakeholders\",\r\n        icon: \"Commitments\",\r\n        render: <StakeholdersForm />,\r\n      },\r\n      {\r\n        key: \"key3\",\r\n        name: \"logicmodel\",\r\n        icon: \"LargeGrid\",\r\n        render: <LogicModelForm />,\r\n      },\r\n      {\r\n        key: \"key4\",\r\n        name: \"activitiesmatrix\",\r\n        icon: \"GripperDotsVertical\",\r\n        render: <ActivitiesMatrixForm />,\r\n      },\r\n      {\r\n        key: \"key5\",\r\n        name: \"performance\",\r\n        icon: \"GripperDotsVertical\",\r\n        render: <PerformanceMeasureForm />,\r\n      },\r\n      {\r\n        key: \"key6\",\r\n        name: \"changenarrative\",\r\n        icon: \"GripperDotsVertical\",\r\n        render: <ChangeNarrativeForm />,\r\n      },\r\n      {\r\n        key: \"key7\",\r\n        name: \"risks\",\r\n        icon: \"DoubleDownArrow\",\r\n        render: <RisksForm />,\r\n      },\r\n      {\r\n        key: \"key8\",\r\n        name: \"budget\",\r\n        icon: \"PaymentCard\",\r\n        render: <BudgetForm />,\r\n      },\r\n      {\r\n        key: \"key9\",\r\n        name: \"reports\",\r\n        icon: \"BarChart4\",\r\n        render: <ReportsForm />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"key3\",\r\n    name: \"licitations\",\r\n    icon: \"Library\",\r\n    render: <Label>Pivot #2</Label>,\r\n    childtabs: [\r\n      { key: \"key1\", name: \"lot\", icon: \"OEM\", render: <LotForm /> },\r\n      {\r\n        key: \"key2\",\r\n        name: \"specifications\",\r\n        icon: \"PageList\",\r\n        render: <SpecificationsForm />,\r\n      },\r\n      {\r\n        key: \"key3\",\r\n        name: \"tecoffer\",\r\n        icon: \"PageListSolid\",\r\n        render: <TechnicalOfferForm />,\r\n      },\r\n      {\r\n        key: \"key4\",\r\n        name: \"finoffer\",\r\n        icon: \"Financial\",\r\n        render: <FinancialOfferForm />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"key4\",\r\n    name: \"methodology\",\r\n    icon: \"StackIndicator\",\r\n    render: <Label>Pivot #3</Label>,\r\n    childtabs: [\r\n      {\r\n        key: \"key1\",\r\n        name: \"forms\",\r\n        icon: \"PageData\",\r\n        render: <FormsTutorials />,\r\n      },\r\n      {\r\n        key: \"key2\",\r\n        name: \"sectors\",\r\n        icon: \"Sections\",\r\n        render: <SectorsTutorials />,\r\n      },\r\n      {\r\n        key: \"key3\",\r\n        name: \"guides\",\r\n        icon: \"GUID\",\r\n        render: <GuidesTutorials />,\r\n      },\r\n      {\r\n        key: \"key4\",\r\n        name: \"tutorials\",\r\n        icon: \"Video\",\r\n        render: <Tutorials />,\r\n      },\r\n      {\r\n        key: \"key5\",\r\n        name: \"outcomes\",\r\n        icon: \"ReportDocument\",\r\n        render: <OutcomesTutorial />,\r\n      },\r\n      {\r\n        key: \"key6\",\r\n        name: \"indicators\",\r\n        icon: \"CRMReport\",\r\n        render: <IndicatorsTutorial />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: \"key5\",\r\n    name: \"database\",\r\n    icon: \"Database\",\r\n    render: <Label>Pivot #4</Label>,\r\n  },\r\n  {\r\n    key: \"key6\",\r\n    name: \"more\",\r\n    icon: \"MoreVertical\",\r\n    render: <Label>Pivot #5</Label>,\r\n  },\r\n]);\r\n\r\nexport default tabsConfiguration;","import { ReactNode } from \"react\"\r\n\r\n// Workplace Configuration\r\ntype FormRender = {\r\n  tab: string;\r\n  page: ReactNode;\r\n  tools: ReactNode;\r\n}\r\n\r\ntype FormRenderDictionary = {\r\n  [key: string]: FormRender\r\n}\r\n\r\nexport default interface IWorkplaceConfiguration {\r\n  tabsSchema: TabSchema,\r\n  latestMenuTab: string,\r\n  configuration: FormRenderDictionary\r\n}\r\n\r\n// tabSchema\r\nexport type Tab = {\r\n  key: string;\r\n  name: string;\r\n  icon: string;\r\n  render?: JSX.Element;\r\n  addtabs?: boolean;\r\n  childtabs?: Tab[];\r\n  onClick?: Function;\r\n};\r\n\r\nexport class TabSchema {\r\n\r\n  tabs: Tab[];\r\n\r\n  constructor(tabs: Tab[]) {\r\n    this.tabs = tabs\r\n  }\r\n\r\n  findByKey(key: string): Tab {\r\n    return this.tabs.find(tab => tab.key === key) || {} as Tab\r\n  }\r\n\r\n  findChildByKey(key: string, childkey: string): Tab {\r\n    const parenttab = this.tabs.find(tab => tab.key === key) || {} as Tab\r\n    let child;\r\n\r\n    if (parenttab.childtabs) {\r\n      child = parenttab.childtabs.find(tab => tab.key === childkey)\r\n    }\r\n    return child || {} as Tab\r\n  }\r\n\r\n  findByName(name: string): Tab {\r\n    return this.tabs.find(tab => tab.name === name) || {} as Tab\r\n  }\r\n\r\n  findChildByName(name: string): Tab {\r\n    for (let tab of this.tabs) {\r\n      if (tab.childtabs) {\r\n        const tabFound = tab.childtabs.find(childTab => childTab.name === name) || {} as Tab\r\n        if (tabFound) return tabFound;\r\n      }\r\n    }\r\n\r\n    return {} as Tab;\r\n\r\n  }\r\n};","export enum ECanadianSector {\r\n    \"Agriculture and Nutrition\",\r\n    \"Economical Growth\",\r\n    \"Human Rights\",\r\n    \"Human Development\",\r\n    \"Energy\",\r\n    \"Infrastructure\",\r\n    \"Enviroment\",\r\n    \"Migration & Refuge\",\r\n    \"Information & Comunication Technology\",\r\n}\r\n\r\nexport enum EGermanSector {\r\n    \"Agriculture and Nutrition\",\r\n    \"Economical Growth\",\r\n    \"Human Rights\",\r\n    \"Human Development\",\r\n    \"Energy\",\r\n    \"Infrastructure\",\r\n    \"Enviroment\",\r\n    \"Migration & Refuge\",\r\n    \"Information & Comunication Technology\",\r\n}","import { toNumber } from \"lodash\";\r\nimport { Graph, Edge } from \"../tree\";\r\n\r\nexport type LogicmodelVertex = {\r\n    id: string;\r\n    text: string;\r\n    level: number;\r\n}\r\n\r\nexport default class LogicmodelGraph extends Graph<LogicmodelVertex> {\r\n\r\n    setNodeText(id: string, char: string): LogicmodelGraph {\r\n        const node = this.vertex.find(v => v.id === id);\r\n\r\n        if (node) {\r\n            node.text += char;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getInmediateTree(id: string) {\r\n        const outputs = this.edges.filter(e => e.from === id).map(e => this.findNode(e.to));\r\n\r\n        return { node: this.findNode(id), outputs: outputs };\r\n    }\r\n\r\n    getParentId(id: string, level: number): string {\r\n        return id.slice(0, level).padEnd(4, \"0\");\r\n    }\r\n\r\n    addNode(parentId: string): LogicmodelGraph {\r\n        const parentNode = this.findNode(parentId)!;\r\n\r\n        const newNode = {\r\n            id: this.generateId(parentId, parentNode.level, this.findChildrenIds(parentId).length),\r\n            text: \"\",\r\n            level: parentNode.level + 1\r\n        } as LogicmodelVertex\r\n\r\n        // Add to graph\r\n        this.vertex.push(newNode);\r\n        this.edges.push({ from: parentNode.id, to: newNode.id } as Edge);\r\n\r\n        return this\r\n    }\r\n\r\n    addSibling(siblingId: string) {\r\n\r\n        const { id, level, order } = this.generateSiblingId(siblingId);\r\n\r\n        const newNode = {\r\n            id: id,\r\n            text: \"added node \" + id,\r\n            level: level\r\n        } as LogicmodelVertex\r\n\r\n        // Fix siblings ids\r\n        const parentId = this.getParentId(id.toString(), level);\r\n        const siblingsIds = this.findChildrenIds(parentId).sort();\r\n\r\n        // Updating siblings vertex and edges and its descendant's\r\n        for (let i = order - 1; i < siblingsIds.length; i++) {\r\n            const oldId = siblingsIds[i];\r\n\r\n            // Find sibling\r\n            const childNode = this.findNode(oldId);\r\n\r\n            if (childNode) {\r\n                // Update sibling vertex & edges\r\n                const newInfo = this.generateSiblingId(oldId);\r\n                childNode.id = newInfo.id;\r\n\r\n                this.edges = this.edges.map(e => ({\r\n                    from: e.from === oldId ? newInfo.id : e.from,\r\n                    to: e.to === oldId ? newInfo.id : e.to\r\n                } as Edge));\r\n\r\n                // Update descendants\r\n                const commonRoot = id.substr(0, level + 1);\r\n\r\n                const descendants = this.findAllDescendants(oldId);\r\n\r\n                descendants.forEach(desc => {\r\n                    // update vertex id\r\n                    const n = toNumber(desc.id.charAt(desc.level));\r\n                    const oldDescId = desc.id;\r\n                    desc.id = this.generateId(childNode.id, desc.level, n);\r\n\r\n                    // update\r\n                    this.edges = this.edges.map(e => ({\r\n                        from: e.from === oldDescId ? desc.id : e.from,\r\n                        to: e.to === oldDescId ? desc.id : e.to\r\n                    } as Edge));\r\n                })\r\n            }\r\n        }\r\n\r\n        // Add new sibling to graph\r\n        this.vertex.push(newNode);\r\n        this.edges.push({ from: parentId, to: newNode.id } as Edge);\r\n\r\n        this.vertex = this.vertex.sort((a, b) => toNumber(a.id) - toNumber(b.id));\r\n        return this\r\n    }\r\n\r\n    deleteNode(nodeId: string): LogicmodelGraph {\r\n        const node = this.findNode(nodeId);\r\n\r\n        if (node) {\r\n            // Remove from graph\r\n            this.vertex = this.vertex.filter(v => v.id !== nodeId);\r\n            this.edges = this.edges.filter(e => e.from !== nodeId && e.to !== nodeId);\r\n\r\n            // Update children ids\r\n            const parentId = this.getParentId(nodeId, node.level);\r\n            const childrenIds = this.findChildrenIds(parentId).sort();\r\n\r\n            // Updating vertex and edges\r\n            for (let i = 0; i < childrenIds.length; i++) {\r\n                const oldId = childrenIds[i];\r\n\r\n                const childNode = this.findNode(oldId);\r\n                if (childNode) {\r\n                    const newId = this.generateId(parentId, this.getNodeLevel(parentId), i);\r\n                    childNode.id = newId;\r\n\r\n                    this.edges = this.edges.map(e => ({\r\n                        from: e.from === oldId ? newId : e.from,\r\n                        to: e.to === oldId ? newId : e.to\r\n                    } as Edge));\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n// Examples\r\nexport const vertexExample: LogicmodelVertex[] = [\r\n    {\r\n        id: \"1000\",\r\n        text:\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\r\n        level: 0,\r\n    },\r\n    {\r\n        id: \"1100\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1110\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1111\",\r\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1120\",\r\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1121\",\r\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1200\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1210\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1211\",\r\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1220\",\r\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1221\",\r\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\r\n        level: 3,\r\n    },\r\n];\r\n\r\nexport const edgesExample: Edge[] = [\r\n    // Edges from 1\r\n    { from: \"1000\", to: \"1100\" },\r\n    { from: \"1000\", to: \"1200\" },\r\n\r\n    // Edges from 1.1\r\n    { from: \"1100\", to: \"1110\" },\r\n    { from: \"1100\", to: \"1120\" },\r\n\r\n    // Edges from 1.1.1\r\n    { from: \"1110\", to: \"1111\" },\r\n    // Edges from 1.1.2\r\n    { from: \"1120\", to: \"1121\" },\r\n\r\n    // Edges from 1.2\r\n    { from: \"1200\", to: \"1210\" },\r\n    { from: \"1200\", to: \"1220\" },\r\n\r\n    // Edges from 1.2.1\r\n    { from: \"1210\", to: \"1211\" },\r\n    // Edges from 1.2.2\r\n    { from: \"1220\", to: \"1221\" },\r\n];\r\n\r\nexport const logicmodelGraphExample = new LogicmodelGraph(vertexExample, edgesExample)\r\n","import { toNumber } from \"lodash\";\r\nimport { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\r\nimport { LogicmodelVertex } from \"models/canadian/logicmodel\";\r\n\r\nexport type Vertex = {\r\n    id: string;\r\n}\r\n\r\nexport type Edge = {\r\n    from: string;\r\n    to: string;\r\n}\r\n\r\ninterface IGraph<T> {\r\n    vertex: T[];\r\n    edges: Edge[];\r\n}\r\n\r\nexport type Tree<T extends Vertex | LogicmodelVertex | ActivityVertex> = {\r\n    node: T;\r\n    children: Tree<T>[];\r\n}\r\n\r\nexport class Graph<T extends Vertex | LogicmodelVertex | ActivityVertex> implements IGraph<T> {\r\n\r\n    vertex: T[];\r\n    edges: Edge[];\r\n\r\n    constructor(vertex: T[], edges: Edge[]) {\r\n        this.vertex = vertex;\r\n        this.edges = edges;\r\n    };\r\n\r\n    findNode(id: string): T {\r\n        return this.vertex.find(v => v.id === id) || {} as T;\r\n    }\r\n\r\n    getNodeLevel(id: string): number {\r\n        return 3 - id.split(\"\").filter(c => c === \"0\").length;\r\n    }\r\n\r\n    findChildrenIds(parentId: string): string[] {\r\n        return this.edges.filter(e => e.from === parentId).map(e => e.to);\r\n    }\r\n\r\n    generateId(parentId: string, level: number, num: number): string {\r\n        return parentId.slice(0, level + 1).concat((num + 1).toString()).padEnd(4, \"0\");\r\n    }\r\n\r\n    generateSiblingId(siblingId: string, num?: number) {\r\n        // Get level\r\n        const level = this.getNodeLevel(siblingId);\r\n\r\n        // Generate new id\r\n        let id = siblingId.slice(0, level);\r\n        const order = num ? num : toNumber(siblingId[level]) + 1;\r\n        id += order.toString();\r\n        id = id.padEnd(4, \"0\");\r\n        return { id: id.toString(), level: level, order };\r\n    }\r\n\r\n    findAllDescendants(id: string) {\r\n        const level = this.getNodeLevel(id);\r\n        const commonRoot = id.substr(0, level + 1);\r\n\r\n        return this.vertex.filter(v => v.id.substr(0, level + 1) === commonRoot);\r\n    }\r\n\r\n    buildTree(): Tree<T> {\r\n        let tree: Tree<T> = { node: this.findNode(\"1000\")!, children: [] };\r\n\r\n        return this.buildTreeRec(tree);\r\n    }\r\n\r\n    private buildTreeRec(tree: Tree<T>) {\r\n\r\n        const childVertex = this.edges.filter(edge => edge.from === tree.node.id).map(edge => this.findNode(edge.to)!);\r\n\r\n        tree.children = childVertex.map(child => ({ node: child, children: [] } as Tree<T>));\r\n\r\n        tree.children.forEach(child => {\r\n            this.buildTreeRec(child);\r\n        })\r\n\r\n        return tree;\r\n    }\r\n}\r\n","import { toNumber } from \"lodash\";\r\nimport { Edge } from \"../tree\";\r\nimport LogicmodelGraph, { LogicmodelVertex } from \"./logicmodel\"\r\n\r\nexport type ActivityVertex = {\r\n    outputId: string;\r\n    id: string;\r\n    text: string;\r\n}\r\n\r\nexport default class LogicModelActivitiesMatrix extends LogicmodelGraph {\r\n\r\n    activities: ActivityVertex[];\r\n\r\n    constructor(vertex: LogicmodelVertex[], edges: Edge[], activities: ActivityVertex[]) {\r\n        super(vertex, edges);\r\n        this.activities = activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\r\n    }\r\n\r\n    findActivitiesByOutput(outputId: string) {\r\n        return this.activities.filter(a => a.outputId === outputId);\r\n    }\r\n\r\n    addActivityToOutput(outputId: string, id: string): LogicModelActivitiesMatrix {\r\n        // Update siblingsIds below\r\n        let i = toNumber(id)\r\n        this.activities.filter(a => a.outputId === outputId && toNumber(a.id) >= i).sort().forEach((sibling, key) => {\r\n            sibling.id = (i + key + 1).toString();\r\n        })\r\n\r\n        // Create nwe activity\r\n        const newActivity = {\r\n            outputId: outputId,\r\n            id: id,\r\n            text: \"\",\r\n        } as ActivityVertex\r\n\r\n        // Add to graph\r\n        this.activities.push(newActivity);\r\n        this.activities = this.activities.sort((a, b) => toNumber(a.id) - toNumber(b.id));\r\n        return this\r\n    }\r\n\r\n    deleteActivity(outputId: string, id: string): LogicModelActivitiesMatrix {\r\n        // Delete from activities\r\n        this.activities = this.activities.filter(a => !(a.id === id && a.outputId === outputId));\r\n\r\n        // Update children ids\r\n        this.activities.filter(a => a.outputId === outputId).sort().forEach((child, key) => {\r\n            child.id = key.toString();\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    buidOutputsActivityList() {\r\n        // get all Inmediate Outcomes Ids\r\n        const inmediatesIds = this.vertex.filter(v => v.level === 2).sort((a, b) => toNumber(a.id) - toNumber(b.id)).map(v => v.id);\r\n        const items: NodeInfo[] = [];\r\n\r\n        inmediatesIds.forEach(id => {\r\n            const { node, outputs } = this.getInmediateTree(id);\r\n\r\n            // Push Inmediate Outcome\r\n            items.push({\r\n                id: node.id,\r\n                name: \"inmediate-outcomes\",\r\n                level: 0,\r\n                description: node.text\r\n            } as NodeInfo);\r\n\r\n            // Push Outputs & Activities\r\n            outputs.forEach(output => {\r\n                // Push Output\r\n                items.push({\r\n                    id: output.id,\r\n                    name: \"outputs\",\r\n                    level: 1,\r\n                    description: output.text\r\n                } as NodeInfo)\r\n\r\n                // Push Activities\r\n                const siblings = this.findActivitiesByOutput(output.id);\r\n                siblings.forEach(activity => {\r\n                    items.push({\r\n                        id: output.id + activity.id,\r\n                        name: \"activity\",\r\n                        level: 2,\r\n                        description: activity.text,\r\n                        hasSiblings: siblings.length > 1 \r\n                    } as NodeInfo)\r\n                })\r\n            })\r\n        })\r\n\r\n        return items;\r\n    }\r\n}\r\n\r\nexport type NodeInfo = {\r\n    id: string;\r\n    name: string;\r\n    level: number;\r\n    description: string;\r\n    hasSiblings?: boolean;\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport IState from \"models/state\";\r\nimport { IProjectInfo } from \"models/generalinfo\";\r\nimport { ECanadianSector } from \"models/sector\";\r\nimport IProject from \"models/project\";\r\nimport { CanadianMethodology } from \"models/methodologies\";\r\nimport { logicmodelGraphExample, LogicmodelVertex } from \"models/canadian/logicmodel\";\r\nimport LogicModelActivitiesMatrix, { ActivityVertex } from \"models/canadian/actvitiesmatrix\";\r\nimport { Edge } from \"models/tree\";\r\n\r\n// Example\r\nconst initialProjectInfoState: IProjectInfo<ECanadianSector> = {\r\n    name: \"Large Project Name Test\",\r\n    shortname: \"Short Project Name\",\r\n    description: \"Lorem ipsum dolre description asedore son lisiu tredo.\",\r\n    methodology: \"Canadian Test\",\r\n    status: \"pending\",\r\n    wikicode: \"X54S0\",\r\n    organization: \"Organization Test\",\r\n    intermediary: \"Intermediary Organization Test\",\r\n    duration: 34,\r\n    country: \"Country Test\",\r\n    program: \"Program Test\",\r\n    sector: ECanadianSector.Energy,\r\n    donorcode: \"2F8HT\",\r\n    leader: { name: \"Leader Test\", email: \"test@gmail.com\" },\r\n    team: [\r\n        { name: \"team1\", email: \"team-test@gmal.com\" },\r\n        { name: \"team2\", email: \"team-test@gmal.com\" },\r\n    ],\r\n    currency: \"Euro\",\r\n    budget: 200.00,\r\n    budgetItems: 22.00,\r\n    budgetAct: 33.00,\r\n    budgetFinanced: 150.00,\r\n    solicitedBudget: 44.00,\r\n    approvedBudget: 44.00,\r\n    approvedDate: new Date(),\r\n    finalDate: new Date(),\r\n    initialDate: new Date(),\r\n    donor: \"Donor Test\",\r\n    contribution: 1000.00,\r\n};\r\n\r\nconst vertexExample: LogicmodelVertex[] = [\r\n    {\r\n        id: \"1000\",\r\n        text:\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec et nulla vel nisi convallis scelerisque sed quis sapien. Morbi gravida ipsum enim, at tempus mauris interdum nec. Suspendisse sit amet quam dapibus, tincidunt eros vitae, varius nunc. Phasellus luctus nisl eu sem pretium, sit amet fringilla odio convallis.\",\r\n        level: 0,\r\n    },\r\n    {\r\n        id: \"1100\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1110\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1111\",\r\n        text: \"Lorem ipsum dolor sit amet. Et quaerat repellat ut deserunt excepturi in voluptatem error. Id quam quasi eos enim dolorum est omnis perspiciatis et accusantium eius id debitis voluptate non itaque dolor et voluptatem quos.\",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1120\",\r\n        text: \"Aut consequuntur obcaecati aut soluta saepe ad doloribus praesentium. Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1121\",\r\n        text: \"Sed dolorum sunt ea magnam nostrum qui voluptatibus vero sit corporis galisum et cumque eius non enim inventore. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1200\",\r\n        text: \"\",\r\n        level: 1,\r\n    },\r\n    {\r\n        id: \"1210\",\r\n        text: \"\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1211\",\r\n        text: \"Ut illo voluptatibus aut unde exercitationem ex quam tempore ex quibusdam saepe aut nostrum esse cum alias laboriosam sed corporis mollitia. \",\r\n        level: 3,\r\n    },\r\n    {\r\n        id: \"1220\",\r\n        text: \"Et veniam impedit nam quidem aspernatur ea suscipit deserunt.\",\r\n        level: 2,\r\n    },\r\n    {\r\n        id: \"1221\",\r\n        text: \"Ea amet soluta et veniam placeat est dolorum galisum et dolores vero non dolorem ducimus. Est earum itaque qui incidunt eum inventore voluptas id nesciunt dolorem.\",\r\n        level: 3,\r\n    },\r\n];\r\n\r\nconst edgesExample: Edge[] = [\r\n    // Edges from 1\r\n    { from: \"1000\", to: \"1100\" },\r\n    { from: \"1000\", to: \"1200\" },\r\n\r\n    // Edges from 1.1\r\n    { from: \"1100\", to: \"1110\" },\r\n    { from: \"1100\", to: \"1120\" },\r\n\r\n    // Edges from 1.1.1\r\n    { from: \"1110\", to: \"1111\" },\r\n    // Edges from 1.1.2\r\n    { from: \"1120\", to: \"1121\" },\r\n\r\n    // Edges from 1.2\r\n    { from: \"1200\", to: \"1210\" },\r\n    { from: \"1200\", to: \"1220\" },\r\n\r\n    // Edges from 1.2.1\r\n    { from: \"1210\", to: \"1211\" },\r\n    // Edges from 1.2.2\r\n    { from: \"1220\", to: \"1221\" },\r\n];\r\n\r\nconst actvitiesExamples: ActivityVertex[] = [\r\n    {\r\n        outputId: \"1111\",\r\n        id: \"1\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1111\",\r\n        id: \"2\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1111\",\r\n        id: \"3\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1121\",\r\n        id: \"1\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1121\",\r\n        id: \"2\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1211\",\r\n        id: \"1\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1211\",\r\n        id: \"2\",\r\n        text: \"\"\r\n    },\r\n    {\r\n        outputId: \"1211\",\r\n        id: \"3\",\r\n        text: \"\"\r\n    },\r\n]\r\n\r\nconst actmatrixGraphExample = new LogicModelActivitiesMatrix(vertexExample, edgesExample, actvitiesExamples);\r\n\r\nconst initialState: IProject = {\r\n    methodology: new CanadianMethodology(initialProjectInfoState, logicmodelGraphExample, actmatrixGraphExample)\r\n}\r\n\r\nconst projectSlice = createSlice({\r\n    name: \"project\",\r\n    initialState,\r\n    reducers: {\r\n        setCurrentProject: (state, action) => {\r\n            state = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const selectProject = (state: IState) => state.project;\r\nexport const { setCurrentProject } = projectSlice.actions;\r\n\r\nexport default projectSlice.reducer;\r\n","import LogicModelActivitiesMatrix from \"./canadian/actvitiesmatrix\";\r\nimport LogicmodelGraph from \"./canadian/logicmodel\";\r\nimport { IProjectInfo } from \"./generalinfo\";\r\nimport Instruments from \"./instrument\";\r\nimport { ECanadianSector } from \"./sector\";\r\n\r\nexport default interface IMethodology {\r\n    name: string;\r\n    instruments: Instruments;\r\n}\r\n\r\nexport class CanadianMethodology implements IMethodology {\r\n    name: string;\r\n    instruments: Instruments;\r\n\r\n    constructor(generalInfo: IProjectInfo<ECanadianSector>, logicModel: LogicmodelGraph, activitiesMatrix: LogicModelActivitiesMatrix) {\r\n        this.name = \"Canadian Methodology\";\r\n        this.instruments = {\r\n            [\"generalInfo\"]: generalInfo,\r\n            [\"logicModel\"]: logicModel,\r\n            [\"logicModelActivities\"]: activitiesMatrix,\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IGermanMethodology extends IMethodology {\r\n    name: \"German Methodology\";\r\n\r\n}\r\n\r\nexport interface IBreadForWorldMethodology extends IMethodology {\r\n    name: \"Bread For The World\";\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}