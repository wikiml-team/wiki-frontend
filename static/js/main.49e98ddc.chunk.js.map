{"version":3,"sources":["pages/main.tsx","components/fullscreentoogler.js","components/menus/commands/faritems.tsx","components/sidepanel/index.tsx","i18n.js","store/slices/languageslice.tsx","components/sidepanel/languagepanel.tsx","themes/office.tsx","store/slices/themeslice.tsx","components/styled/shapes.tsx","components/pickers/themepicker.tsx","components/sidepanel/settings/settingspanel.tsx","components/menus/commands/index.tsx","components/menus/commands/items.tsx","components/menus/mainmenu/toolbar.tsx","components/menus/pagesbar/addbutton.tsx","components/menus/pagesbar/pagestabs.tsx","components/menus/pagesbar/index.tsx","models/project.ts","store/slices/projectslice.tsx","components/inputs/dropdown.tsx","components/inputs/text.tsx","components/inputs/datepicker.tsx","pages/methodologies/canadian/projectforms/generalform.tsx","pages/methodologies/canadian/licitationforms/specificationsform.tsx","pages/methodologies/canadian/tutorials/formstutorial.tsx","components/styled/pagecontainer.tsx","components/menus/mainmenu/pivotbar.tsx","components/menus/mainmenu/teampile.tsx","pages/methodologies/canadian/projectforms/stakeholdersform.tsx","pages/methodologies/canadian/projectforms/logicmodelform.tsx","pages/methodologies/canadian/projectforms/activitiesform.tsx","pages/methodologies/canadian/projectforms/performanceform.tsx","pages/methodologies/canadian/projectforms/risksform.tsx","pages/methodologies/canadian/projectforms/budgetform.tsx","pages/methodologies/canadian/projectforms/reportsform.tsx","pages/methodologies/canadian/licitationforms/lotform.tsx","pages/methodologies/canadian/licitationforms/technicalofferform.tsx","pages/methodologies/canadian/licitationforms/financialofferform.tsx","pages/methodologies/canadian/tutorials/sectorstutorial.tsx","pages/methodologies/canadian/tutorials/guidestutorial.tsx","pages/methodologies/canadian/tutorials/methodologytutorials.tsx","pages/methodologies/canadian/tutorials/outcomestutorial.tsx","pages/methodologies/canadian/tutorials/indicatorstutorial.tsx","components/menus/mainmenu/maintabs.tsx","components/menus/mainmenu/index.tsx","layouts/workplace.tsx","routes.tsx","App.tsx","reportWebVitals.ts","store/slices/settingslice.tsx","store/index.tsx","index.tsx"],"names":["Main","Fragment","to","fullscreenToggler","elem","document","documentElement","fullscreenElement","exitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","SidePanel","props","Panel","headerText","header","isBlocking","isOpen","onDismiss","handleClose","closeButtonAriaLabel","styles","root","marginTop","content","paddingTop","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","resources","en","English","es","Spanish","LanguageSlice","createSlice","name","initialState","language","reducers","setLanguage","state","action","payload","changeLanguage","setEnglish","setSpanish","setGerman","selectLanguage","actions","LanguagePanel","t","useTranslation","lang","useSelector","dispatch","useDispatch","suportedLangs","key","text","Stack","tokens","childrenGap","Dropdown","label","defaultSelectedKey","undefined","placeholder","options","onChange","event","item","themeWord","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","themeExcel","themePowerPoint","themeTeams","themeSlice","setTheme","loadTheme","setThemeWord","setThemeExcel","setThemePowerPoint","setThemeTeams","StyledCircle","styled","div","Circle","classes","mergeStyleSets","circleprops","height","size","width","backgroundColor","color","border","onClick","className","classnames","ThemePicker","colorCells","handler","useTheme","circle","cursor","map","cell","ariaLabel","id","SettingsPanel","nameTextFieldStyles","fieldGroup","borderColor","separatorProps","alignContent","background","Separator","Text","variant","Item","defaultValue","Label","Persona","PersonaSize","size40","initialsColor","PersonaInitialsColor","cyan","horizontal","CommandMenu","comandBarStyles","topstickybar","position","top","zIndex","bottomstickybar","bottom","padding","textStyles","left","transform","useState","languagePanelOpen","setLanguagePanelOpen","settingsPanelOpen","setSettingsPanelOpen","OpenLanguagePanel","useCallback","CloseLanguagePanel","OpenSettingsPanel","CloseSettingsPanel","whiteIconStyle","blackIconStyle","blueButtonStyles","rootHovered","rootPressed","iconHovered","iconPressed","overflowProps","rootExpanded","rootExpandedHovered","menuIcon","mainItems","iconProps","iconName","iconOnly","buttonStyles","console","log","overflowItems","getItems","farItems","userButtonStyles","borderLeft","borderWidth","labelHovered","farButtonStyles","alert","getFarItems","CommandBar","items","overflowButtonProps","ToolBar","borderBottom","children","AddButton","IconButton","PagesTabs","tabs","addButton","handleOnClick","getTabId","parentKey","defaultKey","pivotStyles","link","fontSize","FontSizes","small","linkIsSelected","fontWeight","FontWeights","semibold","Pivot","linkFormat","aria-label","selectedKey","onLinkClick","ev","headersOnly","tab","PivotItem","itemKey","itemIcon","icon","render","PagesBar","stackProps","separatorStyles","childtabs","addtabs","vertical","Sector","shortname","description","methodology","status","wikicode","organization","intermediary","duration","country","program","sector","Energy","donorcode","leader","email","team","currency","budget","budgetItems","budgetAct","solicitedBudget","approvedBudget","approvedDate","Date","finalDate","initialDate","donor","projectSlice","setCurrentProject","updateProject","selectProject","project","DropdownFieldInput","field","form","onGetErrorMessage","value","touched","errors","deferredValidationTime","TextFieldInput","DateFieldInput","DayPickerStrings","months","shortMonths","days","shortDays","goToToday","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","minDate","useConst","addMonths","now","DatePicker","strings","GeneralForm","borderRadius","minWidth","horizontalStackProps","wrap","verticalStackProps","stepStackStyles","headerStackProps","horizontalAlign","paddingRight","paddingLeft","initValues","shortName","largeName","impOrganization","intOrganization","budgetPerItems","budgetPerAct","budgetSolicited","validationSchema","object","shape","string","max","required","min","number","useEffect","setLocale","mixed","default","countries","initialValues","onSubmit","values","setSubmitting","grow","component","multiline","autoAdjustHeight","PrimaryButton","prefix","StandardField","TextField","SpecificationsForm","FormsTutorials","Container","PageContainer","PivotBar","key1","key2","key3","key4","key5","key6","selectedPageTabs","setSelectedPageTabs","lastFormsRendered","setLastFormsRendered","currentPage","setCurrentPage","handlePageTabOnClick","parentkey","newTabsState","newFormsRenderedState","aria-labelledby","role","FacePileStyles","right","itemButton","margin","faces","personaName","gray","gold","lightGreen","warmGray","blue","green","darkBlue","purple","orange","TeamPile","Facepile","personas","personaSize","size24","maxDisplayablePersonas","overflowButtonType","OverflowButtonType","descriptive","addButtonProps","href","ariaDescription","StakeholdersForm","LogicModelForm","ActivitiesMatrixForm","PerformanceMeasureForm","RisksForm","BudgetForm","ReportsForm","LotForm","TechnicalOfferForm","FinancialOfferForm","SectorsTutorials","GuidesTutorials","MethodologyTutorials","OutcomesTutorial","IndicatorsTutorial","MainMenu","WorkplaceLayout","Routes","path","WorkplaceSwitcher","main","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HelpSlice","toogleHelp","setHelp","removeHelp","store","configureStore","reducer","theme","themeReducer","languageReducer","help","helpReducer","projectReducer","getState","initializeIcons","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49e98ddc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/workplace\">Workplace</Link>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","export function fullscreenToggler() {\r\n  var elem = document.documentElement;\r\n\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  } else {\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  IButtonStyles,\r\n  ICommandBarItemProps,\r\n  IIconStyles,\r\n  IPalette,\r\n} from \"@fluentui/react\";\r\n\r\nimport { fullscreenToggler } from \"components/fullscreentoogler\";\r\n\r\ntype FarItemsProps = {\r\n  OpenLanguagePanel: () => void;\r\n  OpenSettingsPanel: () => void;\r\n  palette: IPalette;\r\n  t: Function;\r\n};\r\n\r\nexport const getFarItems = (props: FarItemsProps) => {\r\n  // STYLE\r\n  const { OpenLanguagePanel, OpenSettingsPanel, palette, t } = props;\r\n\r\n  // Button & Icon Styles\r\n  const whiteIconStyle: IIconStyles = { root: { color: palette.white } };\r\n\r\n  const userButtonStyles: IButtonStyles = {\r\n    root: {\r\n      borderLeft: \"2px solid \" + palette.neutralQuaternaryAlt,\r\n      borderWidth: \"thin\",\r\n      backgroundColor: palette.themePrimary,\r\n      color: palette.white,\r\n    },\r\n    rootHovered: {\r\n      background: palette.themeDarkAlt,\r\n    },\r\n    rootPressed: {\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n    iconHovered: {\r\n      color: palette.white,\r\n    },\r\n    iconPressed: {\r\n      color: palette.neutralQuaternaryAlt,\r\n    },\r\n    labelHovered: {\r\n      color: palette.white,\r\n    },\r\n    label: {\r\n      \":active\": {\r\n        color: palette.white,\r\n      },\r\n    },\r\n  };\r\n\r\n  const farButtonStyles: IButtonStyles = {\r\n    root: {\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n    rootHovered: {\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n    rootPressed: {\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n    iconHovered: {\r\n      color: palette.white,\r\n    },\r\n    iconPressed: {\r\n      color: palette.neutralQuaternaryAlt,\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  return [\r\n    {\r\n      key: \"fullscreen\",\r\n      text: t(\"fullscreen\"),\r\n      ariaLabel: \"Full Screen\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"FullScreen\", styles: whiteIconStyle },\r\n      onClick: fullscreenToggler,\r\n      buttonStyles: farButtonStyles,\r\n    },\r\n    {\r\n      key: \"language\",\r\n      text: t(\"language\"),\r\n      ariaLabel: \"Language\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"LocaleLanguage\", styles: whiteIconStyle },\r\n      onClick: OpenLanguagePanel,\r\n      buttonStyles: farButtonStyles,\r\n    },\r\n    {\r\n      key: \"settings\",\r\n      text: t(\"settings\"),\r\n      ariaLabel: \"Change Settings\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Settings\", styles: whiteIconStyle },\r\n      onClick: OpenSettingsPanel,\r\n      buttonStyles: farButtonStyles,\r\n    },\r\n    {\r\n      key: \"notifications\",\r\n      text: t(\"notifications\"),\r\n      ariaLabel: \"Change Notifications\",\r\n      iconOnly: true,\r\n      iconProps: { iconName: \"Ringer\", styles: whiteIconStyle },\r\n      // onClick: () => void,\r\n      buttonStyles: farButtonStyles,\r\n    },\r\n    {\r\n      key: \"user\",\r\n      text: \"Gabriela Rodríguez\",\r\n      ariaLabel: \"User name\",\r\n      iconProps: { iconName: \"Contact\", styles: whiteIconStyle },\r\n      onClick: () => alert(\"Contact\"),\r\n      buttonStyles: userButtonStyles,\r\n    },\r\n  ] as ICommandBarItemProps[];\r\n};\r\n","import { Panel, IPanelStyles } from \"@fluentui/react\";\r\n\r\ntype SidePanelProps = {\r\n  header: string;\r\n  content: JSX.Element;\r\n  isOpen: boolean;\r\n  handleClose: () => void;\r\n};\r\n\r\nexport default function SidePanel(props: SidePanelProps) {\r\n  // Panel Styles\r\n  const PanelStyles: Partial<IPanelStyles> = {\r\n    root: {\r\n      marginTop: 70,\r\n    },\r\n    content: {\r\n      paddingTop: 50,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Panel\r\n      headerText={props.header}\r\n      isBlocking={false}\r\n      isOpen={props.isOpen}\r\n      onDismiss={props.handleClose}\r\n      closeButtonAriaLabel=\"Close\"\r\n      styles={PanelStyles}\r\n    >\r\n      {props.content}\r\n    </Panel>\r\n  );\r\n}\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// import Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport English from \"languages/locales/en.json\";\r\nimport Spanish from \"languages/locales/es.json\";\r\n\r\ni18n\r\n  // .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    // debug: true,\r\n    resources: {\r\n      en: English,\r\n      es: Spanish,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport IState from \"models/state\";\r\nimport i18n from \"i18n\";\r\n\r\nconst LanguageSlice = createSlice({\r\n  name: \"language\",\r\n  initialState: i18n.language,\r\n  reducers: {\r\n    setLanguage: (state, action) => {\r\n      const { payload } = action;\r\n      i18n.changeLanguage(payload);\r\n      return (state = payload);\r\n    },\r\n    setEnglish: (state) => {\r\n      i18n.changeLanguage(state);\r\n      return (state = \"en\");\r\n    },\r\n    setSpanish: (state) => {\r\n      i18n.changeLanguage(state);\r\n      return (state = \"es\");\r\n    },\r\n    setGerman: (state) => {\r\n      i18n.changeLanguage(state);\r\n      return (state = \"de\");\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectLanguage = (state: IState) => state.language;\r\nexport const { setLanguage, setEnglish, setSpanish } = LanguageSlice.actions;\r\n\r\nexport default LanguageSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Dropdown,\n  IDropdownOption,\n  IStackTokens,\n  Stack,\n} from \"@fluentui/react\";\n\nimport { setLanguage, selectLanguage } from \"store/slices/languageslice\";\n\nexport default function LanguagePanel() {\n  const { t } = useTranslation([\"sidepanel\", \"languages\"]);\n  const lang = useSelector(selectLanguage);\n\n  const dispatch = useDispatch();\n\n  const handleDataOnChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    item?: IDropdownOption<any>\n  ) => {\n    if (item) dispatch(setLanguage(item.key));\n  };\n\n  const stackTokens: IStackTokens = { childrenGap: 20 };\n\n  const suportedLangs = [\n    { key: \"en\", text: t(\"languages:en\") },\n    { key: \"es\", text: t(\"languages:es\") },\n    { key: \"de\", text: t(\"languages:de\") },\n  ];\n\n  return (\n    <Stack tokens={stackTokens}>\n      <Dropdown\n        label={t(\"langUI\")}\n        defaultSelectedKey={lang ? lang : undefined}\n        placeholder={t(\"selectlang\")}\n        options={suportedLangs}\n        onChange={handleDataOnChange}\n      />\n      <Dropdown\n        label={t(\"langdata\")}\n        placeholder={t(\"selectlang\")}\n        options={suportedLangs}\n        onChange={() => {}}\n      />\n    </Stack>\n  );\n}\n","import { createTheme } from \"@fluentui/react\";\r\n\r\nexport const themeWord = createTheme({\r\n  palette: {\r\n    themePrimary: \"#2b579a\",\r\n    themeLighterAlt: \"#f4f7fb\",\r\n    themeLighter: \"#d3deef\",\r\n    themeLight: \"#b0c3e0\",\r\n    themeTertiary: \"#6e90c2\",\r\n    themeSecondary: \"#3d66a5\",\r\n    themeDarkAlt: \"#274e8a\",\r\n    themeDark: \"#214274\",\r\n    themeDarker: \"#183156\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themeExcel = createTheme({\r\n  palette: {\r\n    themePrimary: \"#217346\",\r\n    themeLighterAlt: \"#f2f9f5\",\r\n    themeLighter: \"#cee9da\",\r\n    themeLight: \"#a8d5bc\",\r\n    themeTertiary: \"#62ab83\",\r\n    themeSecondary: \"#318456\",\r\n    themeDarkAlt: \"#1e673f\",\r\n    themeDark: \"#195735\",\r\n    themeDarker: \"#134027\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themePowerPoint = createTheme({\r\n  palette: {\r\n    themePrimary: \"#b7472a\",\r\n    themeLighterAlt: \"#fcf6f4\",\r\n    themeLighter: \"#f4dcd6\",\r\n    themeLight: \"#eabeb4\",\r\n    themeTertiary: \"#d48672\",\r\n    themeSecondary: \"#c0583e\",\r\n    themeDarkAlt: \"#a53f26\",\r\n    themeDark: \"#8c3620\",\r\n    themeDarker: \"#672718\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport const themeTeams = createTheme({\r\n  palette: {\r\n    themePrimary: \"#6264a7\",\r\n    themeLighterAlt: \"#f7f7fb\",\r\n    themeLighter: \"#e1e1f1\",\r\n    themeLight: \"#c8c9e4\",\r\n    themeTertiary: \"#989ac9\",\r\n    themeSecondary: \"#7173b0\",\r\n    themeDarkAlt: \"#585a95\",\r\n    themeDark: \"#4a4c7e\",\r\n    themeDarker: \"#37385d\",\r\n    neutralLighterAlt: \"#f8f8f8\",\r\n    neutralLighter: \"#f4f4f4\",\r\n    neutralLight: \"#eaeaea\",\r\n    neutralQuaternaryAlt: \"#dadada\",\r\n    neutralQuaternary: \"#d0d0d0\",\r\n    neutralTertiaryAlt: \"#c8c8c8\",\r\n    neutralTertiary: \"#a19f9d\",\r\n    neutralSecondary: \"#605e5c\",\r\n    neutralPrimaryAlt: \"#3b3a39\",\r\n    neutralPrimary: \"#323130\",\r\n    neutralDark: \"#201f1e\",\r\n    black: \"#000000\",\r\n    white: \"#ffffff\",\r\n  },\r\n});\r\n\r\nexport default themeWord;\r\n","import { IPartialTheme, loadTheme } from \"@fluentui/react\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  themeExcel,\r\n  themeWord,\r\n  themePowerPoint,\r\n  themeTeams,\r\n} from \"themes/office\";\r\nimport IState from \"models/state\";\r\n\r\nconst themeSlice = createSlice({\r\n  name: \"theme\",\r\n  initialState: themeWord,\r\n  reducers: {\r\n    setTheme: (state, action) => {\r\n      const { payload } = action;\r\n\r\n      switch (payload) {\r\n        case \"word\":\r\n          state = themeWord;\r\n          break;\r\n        case \"excel\":\r\n          state = themeExcel;\r\n          break;\r\n        case \"powerpoint\":\r\n          state = themePowerPoint;\r\n          break;\r\n        case \"teams\":\r\n          state = themeTeams;\r\n          break;\r\n      }\r\n      loadTheme(state as IPartialTheme);\r\n    },\r\n    setThemeWord: (state) => {\r\n      state = themeWord;\r\n      loadTheme(themeWord);\r\n    },\r\n    setThemeExcel: (state) => {\r\n      state = themeExcel;\r\n      loadTheme(themeExcel);\r\n    },\r\n    setThemePowerPoint: (state) => {\r\n      state = themePowerPoint;\r\n      loadTheme(themePowerPoint);\r\n    },\r\n    setThemeTeams: (state) => {\r\n      state = themeTeams;\r\n      loadTheme(themeTeams);\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectCurrentTheme = (state: IState) => state.theme;\r\nexport const {\r\n  setTheme,\r\n  setThemeExcel,\r\n  setThemePowerPoint,\r\n  setThemeTeams,\r\n  setThemeWord,\r\n} = themeSlice.actions;\r\n\r\nexport default themeSlice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport classnames from \"classnames\";\r\nimport { mergeStyleSets } from \"@fluentui/react\";\r\n\r\ninterface CircleProps {\r\n  ariaLabel?: string;\r\n  size: string;\r\n  color: string;\r\n  border: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst StyledCircle = styled.div`\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport function Circle(props: CircleProps) {\r\n  const classes = mergeStyleSets({\r\n    circleprops: {\r\n      height: props.size,\r\n      width: props.size,\r\n      backgroundColor: props.color,\r\n      border: \"4px solid \" + props.border,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <StyledCircle\r\n      onClick={props.onClick}\r\n      className={classnames(props.className, classes.circleprops)}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IColorCellProps, mergeStyleSets, useTheme } from \"@fluentui/react\";\r\nimport { Circle } from \"components/styled/shapes\";\r\n\r\ntype SwatchThemePickerProps = {\r\n  colorCells: IColorCellProps[];\r\n  size: string;\r\n  handler: (id: string) => void;\r\n};\r\n\r\nexport default function ThemePicker(props: SwatchThemePickerProps) {\r\n  const { colorCells, handler, size } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n  const classes = mergeStyleSets({\r\n    circle: {\r\n      \":hover\": {\r\n        cursor: \"pointer\",\r\n        border: \"solid 4px \" + palette.neutralLighter,\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {colorCells.map((cell) => {\r\n        return (\r\n          <div key={cell.id}>\r\n            <Circle\r\n              ariaLabel={cell.label}\r\n              size={size}\r\n              color={cell.color}\r\n              border={palette.neutralQuaternaryAlt}\r\n              onClick={() => handler(cell.label || \"\")}\r\n              className={classes.circle}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  IColorCellProps,\n  ISeparatorProps,\n  ITextFieldStyles,\n  Label,\n  Persona,\n  PersonaInitialsColor,\n  PersonaSize,\n  Separator,\n  Stack,\n  Text,\n  TextField,\n  useTheme,\n} from \"@fluentui/react\";\n\nimport { setTheme } from \"store/slices/themeslice\";\nimport ThemePicker from \"components/pickers/themepicker\";\n\nconst colorCells: IColorCellProps[] = [\n  { id: \"1\", label: \"word\", color: \"#2b579a\" },\n  { id: \"2\", label: \"excel\", color: \"#217346\" },\n  { id: \"3\", label: \"powerpoint\", color: \"#a92b1a\" },\n  { id: \"4\", label: \"teams\", color: \"#6264a7\" },\n];\n\nexport default function SettingsPanel() {\n  // STYLES\n  const { palette } = useTheme();\n\n  // TextField Styles\n  const nameTextFieldStyles: Partial<ITextFieldStyles> = {\n    fieldGroup: {\n      borderColor: palette.neutralTertiary,\n      \":hover\": {\n        borderColor: palette.neutralSecondary,\n      },\n      \"::after\": {\n        borderColor: palette.neutralPrimaryAlt,\n      },\n    },\n  };\n\n  // Horizontal Separators\n  const separatorProps: Partial<ISeparatorProps> = {\n    alignContent: \"end\",\n    styles: {\n      root: {\n        \"::before\": {\n          background: palette.neutralTertiaryAlt,\n          height: 0.4,\n        },\n      },\n    },\n  };\n\n  // LOGIC\n  const { t } = useTranslation([\"sidepanel\"]);\n  const dispatch = useDispatch();\n\n  return (\n    <Stack tokens={{ childrenGap: 15 }}>\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>User</b>\n        </Text>\n      </Separator>\n      {/* NAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"name\")}\n          defaultValue=\"Gabriela Rodríguez\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* NICKNAME */}\n      <Stack.Item>\n        <TextField\n          label={t(\"nick\")}\n          defaultValue=\"Gabi\"\n          styles={nameTextFieldStyles}\n        ></TextField>\n      </Stack.Item>\n      {/* COIN */}\n      <Stack.Item>\n        <Label>{t(\"coin\")}</Label>\n        <Persona\n          text=\"Gabriela Rodríguez\"\n          size={PersonaSize.size40}\n          initialsColor={PersonaInitialsColor.cyan}\n        />\n      </Stack.Item>\n      <br />\n      <Separator {...separatorProps}>\n        <Text variant=\"mediumPlus\">\n          <b>{t(\"theme\")}</b>\n        </Text>\n      </Separator>\n      {/* <Stack.Item>\n        <Toggle\n          label=\"Select a theme\"\n          defaultChecked\n          onText=\"Dark\"\n          offText=\"Light\"\n          onChange={handleChangeTheme}\n        />\n      </Stack.Item> */}\n      <Stack.Item>\n        <Label>{t(\"colortheme\")}</Label>\n        <Stack horizontal tokens={{ childrenGap: 5 }}>\n          <ThemePicker\n            colorCells={colorCells}\n            size=\"30px\"\n            handler={(key) => dispatch(setTheme(key))}\n          />\n        </Stack>\n      </Stack.Item>\n    </Stack>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  CommandBar,\r\n  ICommandBarStyles,\r\n  ITextStyles,\r\n  mergeStyleSets,\r\n  Text,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { getItems } from \"./items\";\r\nimport { getFarItems } from \"./faritems\";\r\nimport SidePanel from \"components/sidepanel\";\r\nimport LanguagePanel from \"components/sidepanel/languagepanel\";\r\nimport SettingsPanel from \"components/sidepanel/settings/settingspanel\";\r\n\r\nexport default function CommandMenu() {\r\n  const { palette } = useTheme();\r\n\r\n  const classes = mergeStyleSets({\r\n    topstickybar: {\r\n      width: \"100%\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      zIndex: 999,\r\n    },\r\n    bottomstickybar: {\r\n      // width: \"100%\",\r\n      position: \"fixed\",\r\n      bottom: 0,\r\n      zIndex: 999,\r\n    },\r\n  });\r\n\r\n  // ComandBar Styles\r\n  const comandBarStyles: Partial<ICommandBarStyles> = {\r\n    root: {\r\n      height: 36,\r\n      padding: 0,\r\n      zIndex: 100,\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n  };\r\n\r\n  // ComandBar Styles\r\n  const textStyles: Partial<ITextStyles> = {\r\n    root: {\r\n      position: \"absolute\",\r\n      top: 10,\r\n      left: \"50%\",\r\n      transform: \"translateX(-50%)\",\r\n      color: palette.themeLight,\r\n      zIndex: 999,\r\n    },\r\n  };\r\n\r\n  // Panel State\r\n  const [languagePanelOpen, setLanguagePanelOpen] = useState(false);\r\n  const [settingsPanelOpen, setSettingsPanelOpen] = useState(false);\r\n\r\n  const OpenLanguagePanel = useCallback(() => {\r\n    setLanguagePanelOpen(true);\r\n    setSettingsPanelOpen(false);\r\n  }, []);\r\n  const CloseLanguagePanel = useCallback(() => setLanguagePanelOpen(false), []);\r\n\r\n  const OpenSettingsPanel = useCallback(() => {\r\n    setSettingsPanelOpen(true);\r\n    setLanguagePanelOpen(false);\r\n  }, []);\r\n  const CloseSettingsPanel = useCallback(() => setSettingsPanelOpen(false), []);\r\n\r\n  const { t } = useTranslation([\"commands\", \"sidepanel\", \"methodologies\"]);\r\n  const { mainItems, overflowItems, overflowProps } = getItems({ palette, t });\r\n  const farItems = getFarItems({\r\n    OpenLanguagePanel,\r\n    OpenSettingsPanel,\r\n    palette,\r\n    t,\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Text variant=\"small\" styles={textStyles}>\r\n        Project 1 - {t(\"methodologies:canadian\")}\r\n      </Text>\r\n      <CommandBar\r\n        items={mainItems}\r\n        overflowItems={overflowItems}\r\n        overflowButtonProps={overflowProps}\r\n        farItems={farItems}\r\n        ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n        styles={comandBarStyles}\r\n      />\r\n      <SidePanel\r\n        header={t(\"sidepanel:headerlang\")}\r\n        content={<LanguagePanel />}\r\n        isOpen={languagePanelOpen}\r\n        handleClose={CloseLanguagePanel}\r\n      />\r\n      <SidePanel\r\n        header={t(\"sidepanel:headersettings\")}\r\n        content={<SettingsPanel />}\r\n        isOpen={settingsPanelOpen}\r\n        handleClose={CloseSettingsPanel}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  IButtonProps,\r\n  IButtonStyles,\r\n  ICommandBarItemProps,\r\n  IIconStyles,\r\n  IPalette,\r\n} from \"@fluentui/react\";\r\n\r\ntype getItemsProps = {\r\n  palette: IPalette;\r\n  t: Function;\r\n};\r\n\r\n// Items of the command bar\r\nexport const getItems = (props: getItemsProps) => {\r\n  const { palette, t } = props;\r\n\r\n  // Icons Styles\r\n  const whiteIconStyle: IIconStyles = { root: { color: palette.white } };\r\n  const blackIconStyle: IIconStyles = { root: { color: palette.black } };\r\n\r\n  // Button Styles\r\n  const blueButtonStyles: IButtonStyles = {\r\n    root: {\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n    rootHovered: {\r\n      backgroundColor: palette.themeDark,\r\n    },\r\n    rootPressed: {\r\n      backgroundColor: palette.themeDarker,\r\n    },\r\n    iconHovered: {\r\n      color: palette.white,\r\n    },\r\n    iconPressed: {\r\n      color: palette.white,\r\n    },\r\n  };\r\n\r\n  const overflowButtonStyles: IButtonStyles = {\r\n    root: {\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n    rootHovered: {\r\n      backgroundColor: palette.themeDark,\r\n    },\r\n    rootPressed: {\r\n      backgroundColor: palette.themeDarker,\r\n    },\r\n    rootExpanded: {\r\n      backgroundColor: palette.themeDarker,\r\n    },\r\n    rootExpandedHovered: {\r\n      backgroundColor: palette.themeDark,\r\n    },\r\n    menuIcon: {\r\n      color: palette.white + \" !important\",\r\n    },\r\n  };\r\n\r\n  // Buttons Props\r\n  const overflowProps: IButtonProps = {\r\n    ariaLabel: \"More commands\",\r\n    styles: overflowButtonStyles,\r\n  };\r\n\r\n  const mainItems: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"goback\",\r\n      iconProps: { iconName: \"Undo\", styles: whiteIconStyle },\r\n      text: t(\"undo\"),\r\n      iconOnly: true,\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n    {\r\n      key: \"goforward\",\r\n      iconProps: { iconName: \"Redo\", styles: whiteIconStyle },\r\n      text: t(\"redo\"),\r\n      iconOnly: true,\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n    {\r\n      key: \"share\",\r\n      iconProps: { iconName: \"Share\", styles: whiteIconStyle },\r\n      text: t(\"share\"),\r\n      iconOnly: true,\r\n      onClick: () => console.log(\"Share\"),\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n    {\r\n      key: \"export\",\r\n      iconProps: { iconName: \"Export\", styles: whiteIconStyle },\r\n      text: t(\"export\"),\r\n      iconOnly: true,\r\n      onClick: () => console.log(\"Export\"),\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n  ] as ICommandBarItemProps[];\r\n\r\n  const overflowItems: ICommandBarItemProps[] = [\r\n    {\r\n      key: \"new\",\r\n      text: t(\"newproject\"),\r\n      onClick: () => console.log(\"Move to\"),\r\n      iconProps: {\r\n        iconName: \"Document\",\r\n        styles: blackIconStyle,\r\n      },\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n    {\r\n      key: \"open\",\r\n      text: t(\"openproject\"),\r\n      onClick: () => console.log(\"Open Project\"),\r\n      iconProps: { iconName: \"OpenFolderHorizontal\", styles: blackIconStyle },\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n    {\r\n      key: \"Destroy\",\r\n      text: t(\"destroyproject\"),\r\n      onClick: () => console.log(\"Destroy project\"),\r\n      iconProps: { iconName: \"PageRemove\", styles: blackIconStyle },\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n    {\r\n      key: \"Duplicate\",\r\n      text: t(\"duplicate\"),\r\n      onClick: () => console.log(\"Duplicate project\"),\r\n      iconProps: { iconName: \"Documentation\", styles: blackIconStyle },\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n    {\r\n      key: \"Print\",\r\n      text: t(\"print\"),\r\n      onClick: () => console.log(\"Print project\"),\r\n      iconProps: { iconName: \"Print\", styles: blackIconStyle },\r\n      buttonStyles: blueButtonStyles,\r\n    },\r\n  ];\r\n\r\n  return { mainItems, overflowItems, overflowProps };\r\n};\r\n","import { mergeStyleSets, useTheme } from \"@fluentui/react\";\r\nimport { FunctionComponent } from \"react\";\r\n\r\nconst ToolBar: FunctionComponent = (props) => {\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n  const classes = mergeStyleSets({\r\n    root: {\r\n      height: 94,\r\n      padding: \"4px 10px 2px 10px\",\r\n      backgroundColor: palette.neutralLighter,\r\n      borderBottom: \"1px solid #E0E0E0\",\r\n      color: palette.black,\r\n    },\r\n  });\r\n\r\n  return <div className={classes.root}>{props.children}</div>;\r\n};\r\n\r\nexport default ToolBar;\r\n","import { IconButton, useTheme } from \"@fluentui/react\";\r\n\r\nexport default function AddButton() {\r\n  const { palette } = useTheme();\r\n\r\n  return (\r\n    <IconButton\r\n      iconProps={{ iconName: \"CircleAddition\" }}\r\n      styles={{ root: { color: palette.black } }}\r\n      onClick={() => alert(\"Add an instrument\")}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FontSizes,\r\n  FontWeights,\r\n  IPivotStyles,\r\n  Pivot,\r\n  PivotItem,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { PivotTabs } from \"../mainmenu/maintabs\";\r\nimport AddButton from \"./addbutton\";\r\n\r\ntype PagesTabProps = {\r\n  tabs?: PivotTabs[];\r\n  addButton?: boolean;\r\n  defaultKey?: string;\r\n  parentKey: string;\r\n  getTabId: (itemKey: string, index: number) => string;\r\n  handleOnClick: (parentkey: string, item?: PivotItem) => void;\r\n};\r\n\r\nexport default function PagesTabs(props: PagesTabProps) {\r\n  const {\r\n    tabs,\r\n    addButton,\r\n    handleOnClick,\r\n    getTabId,\r\n    parentKey,\r\n    defaultKey,\r\n  } = props;\r\n\r\n  const { t } = useTranslation(\"pages\");\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n  const pivotStyles: Partial<IPivotStyles> = {\r\n    root: {\r\n      height: 34,\r\n      backgroundColor: palette.neutralLight,\r\n    },\r\n    link: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralLight,\r\n      color: palette.black,\r\n      fontSize: FontSizes.small,\r\n      \":hover\": {\r\n        backgroundColor: palette.neutralQuaternaryAlt,\r\n        color: palette.black,\r\n      },\r\n      \":active\": {\r\n        backgroundColor: palette.neutralTertiaryAlt,\r\n        color: palette.black,\r\n      },\r\n      \":focus\": {\r\n        backgroundColor: palette.neutralQuaternaryAlt,\r\n        color: palette.black,\r\n      },\r\n    },\r\n    linkIsSelected: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralTertiaryAlt + \" !important\",\r\n      color: palette.black + \" !important\",\r\n      fontWeight: FontWeights.semibold + \" !important\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Pivot\r\n        linkFormat=\"tabs\"\r\n        styles={pivotStyles}\r\n        aria-label=\"Pages Pivot\"\r\n        selectedKey={defaultKey}\r\n        onLinkClick={(\r\n          item?: PivotItem,\r\n          ev?: React.MouseEvent<HTMLElement, MouseEvent>\r\n        ) => handleOnClick(parentKey, item)}\r\n        headersOnly={true}\r\n        getTabId={getTabId}\r\n      >\r\n        {tabs &&\r\n          tabs.map((tab) => {\r\n            return (\r\n              <PivotItem\r\n                key={tab.key}\r\n                headerText={t(tab.name)}\r\n                itemKey={tab.key}\r\n                itemIcon={tab.icon}\r\n              >\r\n                {tab.render}\r\n              </PivotItem>\r\n            );\r\n          })}\r\n      </Pivot>\r\n      {addButton && <AddButton />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  ISeparatorStyles,\r\n  IStackProps,\r\n  PivotItem,\r\n  Separator,\r\n  Stack,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { PivotTabs } from \"../mainmenu/maintabs\";\r\nimport PagesTabs from \"./pagestabs\";\r\n\r\ntype PagesBarProps = {\r\n  tab: PivotTabs;\r\n  defaultKey?: string;\r\n  getTabId: (itemKey: string, index: number) => string;\r\n  handleOnClick: (parentkey: string, item?: PivotItem) => void;\r\n};\r\n\r\nexport default function PagesBar(props: PagesBarProps) {\r\n  const { tab, handleOnClick, getTabId, defaultKey } = props;\r\n\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const stackProps: Partial<IStackProps> = {\r\n    horizontal: true,\r\n    styles: {\r\n      root: {\r\n        height: 34,\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        zIndex: 999,\r\n        width: \"100%\",\r\n        backgroundColor: palette.neutralLight,\r\n      },\r\n    },\r\n  };\r\n\r\n  const separatorStyles: Partial<ISeparatorStyles> = {\r\n    root: {\r\n      \"::after\": {\r\n        backgroundColor: palette.neutralQuaternary,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Stack {...stackProps}>\r\n      <PagesTabs\r\n        tabs={tab.childtabs}\r\n        addButton={tab.addtabs}\r\n        parentKey={tab.key}\r\n        defaultKey={defaultKey}\r\n        handleOnClick={handleOnClick}\r\n        getTabId={getTabId}\r\n      />\r\n      <Separator vertical styles={separatorStyles} />\r\n\r\n      {/* Here goes the horizontal scrollbar when needed for the page */}\r\n    </Stack>\r\n  );\r\n}\r\n","import IUser from \"./user\";\r\n\r\nexport default interface IProject {\r\n  name: string;\r\n  shortname: string;\r\n  description: string;\r\n  methodology: string;\r\n  status: \"pending\" | \"approved\";\r\n  wikicode: string;\r\n  organization: string;\r\n  intermediary: string;\r\n  duration: number;\r\n  country: string;\r\n  program: string;\r\n  sector: Sector;\r\n  donorcode: string;\r\n  leader: IUser;\r\n  team: IUser[];\r\n  currency: string;\r\n  budget: number;\r\n  budgetItems: number;\r\n  budgetAct: number;\r\n  solicitedBudget: number;\r\n  // Esto no debería estar aquí sino cogerlo de bd cuando haga falta supongo\r\n  donor: string;\r\n  approvedBudget: number;\r\n  approvedDate: Date;\r\n  initialDate: Date;\r\n  finalDate: Date;\r\n}\r\n\r\nexport enum Sector {\r\n  \"Agriculture and Nutrition\",\r\n  \"Economical Growth\",\r\n  \"Human Rights\",\r\n  \"Human Development\",\r\n  \"Energy\",\r\n  \"Infrastructure\",\r\n  \"Enviroment\",\r\n  \"Migration & Refuge\",\r\n  \"Information & Comunication Technology\",\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport IProject, { Sector } from \"models/project\";\r\nimport IState from \"models/state\";\r\n\r\nconst initialState: IProject = {\r\n  name: \"Large Project Name Test\",\r\n  shortname: \"Short Project Name\",\r\n  description: \"Lorem ipsum dolre description asedore son lisiu tredo.\",\r\n  methodology: \"Canadian Test\",\r\n  status: \"pending\",\r\n  wikicode: \"X54S0\",\r\n  organization: \"Organization Test\",\r\n  intermediary: \"Intermediary Organization Test\",\r\n  duration: 34,\r\n  country: \"Country Test\",\r\n  program: \"Program Test\",\r\n  sector: Sector.Energy,\r\n  donorcode: \"2F8HT\",\r\n  leader: { name: \"Leader Test\", email: \"test@gmail.com\" },\r\n  team: [\r\n    { name: \"team1\", email: \"team-test@gmal.com\" },\r\n    { name: \"team2\", email: \"team-test@gmal.com\" },\r\n  ],\r\n  currency: \"euro\",\r\n  budget: 2,\r\n  budgetItems: 22,\r\n  budgetAct: 33,\r\n  solicitedBudget: 44,\r\n  approvedBudget: 44,\r\n  approvedDate: new Date(),\r\n  finalDate: new Date(),\r\n  initialDate: new Date(),\r\n  donor: \"Donor Test\",\r\n};\r\n\r\nconst projectSlice = createSlice({\r\n  name: \"project\",\r\n  initialState,\r\n  reducers: {\r\n    setCurrentProject: (state, action) => {\r\n      state = action.payload;\r\n    },\r\n    updateProject: (state, action) => {\r\n      console.log(\"state: \", state);\r\n      console.log(\"action: \", action);\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectProject = (state: IState) => state.project;\r\nexport const { setCurrentProject } = projectSlice.actions;\r\n\r\nexport default projectSlice.reducer;\r\n","import { Dropdown } from \"@fluentui/react\";\r\n\r\nconst DropdownFieldInput = ({ field, form, ...props }: any) => {\r\n  const handleOnGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleOnGetError}\r\n      deferredValidationTime={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropdownFieldInput;\r\n","import { TextField } from \"@fluentui/react\";\r\n\r\nconst TextFieldInput = ({ field, form, ...props }: any) => {\r\n  const handleOnGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleOnGetError}\r\n      deferredValidationTime={500}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextFieldInput;\r\n","import { addMonths, DatePicker, IDatePickerStrings } from \"@fluentui/react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useConst } from \"@fluentui/react-hooks\";\r\n\r\nconst DateFieldInput = ({ field, form, ...props }: any) => {\r\n  const { t } = useTranslation([\r\n    \"months\",\r\n    \"shortMonths\",\r\n    \"days\",\r\n    \"shortDays\",\r\n    \"calendar\",\r\n  ]);\r\n\r\n  const DayPickerStrings: IDatePickerStrings = {\r\n    months: [\r\n      t(\"january\"),\r\n      t(\"february\"),\r\n      t(\"march\"),\r\n      t(\"april\"),\r\n      t(\"may\"),\r\n      t(\"june\"),\r\n      t(\"july\"),\r\n      t(\"august\"),\r\n      t(\"september\"),\r\n      t(\"october\"),\r\n      t(\"november\"),\r\n      t(\"december\"),\r\n    ],\r\n\r\n    shortMonths: [\r\n      t(\"shortmonths:jan\"),\r\n      t(\"shortmonths:feb\"),\r\n      t(\"shortmonths:mar\"),\r\n      t(\"shortmonths:apr\"),\r\n      t(\"shortmonths:may\"),\r\n      t(\"shortmonths:jun\"),\r\n      t(\"shortmonths:jul\"),\r\n      t(\"shortmonths:aug\"),\r\n      t(\"shortmonths:sep\"),\r\n      t(\"shortmonths:oct\"),\r\n      t(\"shortmonths:nov\"),\r\n      t(\"shortmonths:dec\"),\r\n    ],\r\n\r\n    days: [\r\n      t(\"days:sunday\"),\r\n      t(\"days:monday\"),\r\n      t(\"days:tuesday\"),\r\n      t(\"days:wednesday\"),\r\n      t(\"days:thursday\"),\r\n      t(\"days:friday\"),\r\n      t(\"days:saturday\"),\r\n    ],\r\n\r\n    shortDays: [\r\n      t(\"shortdays:sunday\"),\r\n      t(\"shortdays:monday\"),\r\n      t(\"shortdays:tuesday\"),\r\n      t(\"shortdays:wednesday\"),\r\n      t(\"shortdays:thursday\"),\r\n      t(\"shortdays:friday\"),\r\n      t(\"shortdays:saturday\"),\r\n    ],\r\n\r\n    goToToday: t(\"calendar:goToToday\"),\r\n    prevMonthAriaLabel: t(\"calendar:prevMonthAriaLabel\"),\r\n    nextMonthAriaLabel: t(\"calendar:nextMonthAriaLabel\"),\r\n    prevYearAriaLabel: t(\"calendar:prevYearAriaLabel\"),\r\n    nextYearAriaLabel: t(\"calendar:nextYearAriaLabel\"),\r\n    closeButtonAriaLabel: t(\"calendar:closeButtonAriaLabel\"),\r\n  };\r\n\r\n  const handleOnGetError = (value: string) => {\r\n    return form.touched && form.errors ? form.errors[field.name] : \"\";\r\n  };\r\n\r\n  const minDate = useConst(addMonths(new Date(Date.now()), -1));\r\n\r\n  return (\r\n    <DatePicker\r\n      placeholder=\"Select a date...\"\r\n      {...field}\r\n      {...props}\r\n      onGetErrorMessage={handleOnGetError}\r\n      deferredValidationTime={500}\r\n      strings={DayPickerStrings}\r\n      minDate={minDate}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateFieldInput;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { string, object, number, setLocale } from \"yup\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Stack,\r\n  ITextFieldProps,\r\n  IDropdownOption,\r\n  IStackProps,\r\n  IStackItemStyles,\r\n  mergeStyleSets,\r\n  Separator,\r\n  PrimaryButton,\r\n  ISeparatorProps,\r\n  Label,\r\n  IStackStyles,\r\n} from \"@fluentui/react\";\r\n\r\nimport { selectProject } from \"store/slices/projectslice\";\r\nimport { Sector } from \"models/project\";\r\nimport DropdownFieldInput from \"components/inputs/dropdown\";\r\nimport TextFieldInput from \"components/inputs/text\";\r\nimport DateFieldInput from \"components/inputs/datepicker\";\r\nimport { useEffect } from \"react\";\r\n\r\ntype formValuesType = {\r\n  shortName: string;\r\n  largeName: string;\r\n  description: string;\r\n  country: string;\r\n  impOrganization: string;\r\n  intOrganization: string;\r\n  budget: number;\r\n  budgetPerItems: number;\r\n  budgetPerAct: number;\r\n  budgetSolicited: number;\r\n  program: string;\r\n  sector: Sector;\r\n  duration: number;\r\n  donor: string;\r\n  approvedBudget: number;\r\n  approvedDate: Date;\r\n  initialDate: Date;\r\n  finalDate: Date;\r\n};\r\n\r\nexport default function GeneralForm() {\r\n  // STYLE\r\n  const classes = mergeStyleSets({\r\n    root: {\r\n      padding: \"0 5% 30px 5%\",\r\n    },\r\n    circle: {\r\n      height: 40,\r\n      width: 40,\r\n      borderRadius: \"50%\",\r\n      minWidth: 40,\r\n      fontSize: 16,\r\n    },\r\n  });\r\n\r\n  const multilineTextFieldProps: Partial<ITextFieldProps> = {\r\n    required: true,\r\n    multiline: true,\r\n    autoAdjustHeight: true,\r\n    styles: {\r\n      root: {\r\n        width: \"100%\",\r\n        marginTop: 10,\r\n      },\r\n      field: {\r\n        height: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  const horizontalStackProps: Partial<IStackProps> = {\r\n    tokens: { childrenGap: \"m\" },\r\n    padding: 2,\r\n    horizontal: true,\r\n    wrap: true,\r\n  };\r\n\r\n  const verticalStackProps: Partial<IStackProps> = {\r\n    tokens: { childrenGap: \"m\" },\r\n    padding: 2,\r\n  };\r\n\r\n  const stepStackStyles: Partial<IStackStyles> = {\r\n    root: {\r\n      paddingTop: 10,\r\n    },\r\n  };\r\n\r\n  const headerStackProps: Partial<IStackProps> = {\r\n    tokens: { childrenGap: \"m\" },\r\n    horizontal: true,\r\n    horizontalAlign: \"space-between\",\r\n    styles: {\r\n      root: {\r\n        paddingRight: 40,\r\n      },\r\n    },\r\n  };\r\n\r\n  const separatorProps: Partial<ISeparatorProps> = {\r\n    alignContent: \"start\",\r\n    styles: {\r\n      content: {\r\n        paddingLeft: 0,\r\n      },\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const { t } = useTranslation([\"general-form\", \"status\"]);\r\n  const project = useSelector(selectProject);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const initValues: formValuesType = {\r\n    shortName: project.shortname,\r\n    largeName: project.name,\r\n    description: project.description,\r\n    country: project.country,\r\n    impOrganization: project.organization,\r\n    intOrganization: project.intermediary,\r\n    budget: project.budget,\r\n    budgetPerItems: project.budgetItems,\r\n    budgetPerAct: project.budgetAct,\r\n    budgetSolicited: project.solicitedBudget,\r\n    program: project.program,\r\n    sector: project.sector,\r\n    duration: project.duration,\r\n    donor: project.donor,\r\n    approvedBudget: project.approvedBudget,\r\n    approvedDate: project.approvedDate,\r\n    initialDate: project.initialDate,\r\n    finalDate: project.finalDate,\r\n  };\r\n\r\n  const validationSchema = object().shape({\r\n    shortName: string().max(20, t(\"shortname-error\")).required(t(\"required\")),\r\n    largeName: string()\r\n      .min(20, t(\"largename-error\"))\r\n      .max(100, t(\"largename-error\"))\r\n      .required(t(\"required\")),\r\n    description: string(),\r\n    country: string().required(t(\"required\")),\r\n    impOrganization: string().required(t(\"required\")),\r\n    intOrganization: string().required(t(\"required\")),\r\n    budget: number().required(t(\"required\")),\r\n    budgetPerItems: number().required(t(\"required\")),\r\n    budgetPerAct: number().required(t(\"required\")),\r\n    budgetSolicited: number().required(t(\"required\")),\r\n    program: string().required(t(\"required\")),\r\n    sector: string().required(t(\"required\")),\r\n    duration: number().required(t(\"required\")),\r\n    donor: string().required(t(\"required\")),\r\n    approvedBudget: number().required(t(\"required\")),\r\n    approvedDate: string().required(t(\"required\")),\r\n    initialDate: string().required(t(\"required\")),\r\n    finalDate: string().required(t(\"required\")),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setLocale({\r\n      // use constant translation keys for messages without values\r\n      mixed: {\r\n        default: \"field_invalid\",\r\n      },\r\n      // use functions to generate an error object that includes the value from the schema\r\n      string: {\r\n        default: \"asi mismo\",\r\n      },\r\n      number: {\r\n        default: \"asimismo\",\r\n      },\r\n    });\r\n  }, [validationSchema]);\r\n\r\n  const handleOnSubmit = (values: formValuesType, { setSubmitting }: any) => {\r\n    alert(values);\r\n  };\r\n\r\n  const countries: IDropdownOption[] = [\r\n    { key: \"1\", text: \"Cuba\" },\r\n    { key: \"2\", text: \"England\" },\r\n    { key: \"3\", text: \"United States\" },\r\n    { key: \"4\", text: \"España\" },\r\n    { key: \"5\", text: \"Canada\" },\r\n  ];\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleOnSubmit}\r\n    >\r\n      <Form className={classes.root}>\r\n        <Stack {...horizontalStackProps}>\r\n          <TextField\r\n            grow={1}\r\n            required\r\n            label={t(\"shortname-field\")}\r\n            name=\"shortName\"\r\n            component={TextFieldInput}\r\n          />\r\n\r\n          <TextField\r\n            grow={4}\r\n            required\r\n            label={t(\"largename-field\")}\r\n            name=\"largeName\"\r\n            component={TextFieldInput}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack {...horizontalStackProps}>\r\n          <TextField\r\n            grow\r\n            label={t(\"description-field\")}\r\n            name=\"description\"\r\n            component={TextFieldInput}\r\n            {...multilineTextFieldProps}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack {...horizontalStackProps}>\r\n          {/* 1. Project */}\r\n          <Stack {...verticalStackProps}>\r\n            <Stack styles={stepStackStyles}>\r\n              <Separator {...separatorProps}>\r\n                <PrimaryButton text=\"1\" className={classes.circle} />\r\n              </Separator>\r\n            </Stack>\r\n\r\n            <Stack {...headerStackProps}>\r\n              <Stack.Item>\r\n                <Label>Status</Label>\r\n                {t(`status:${project.status}`)}\r\n              </Stack.Item>\r\n              <Stack.Item>\r\n                <Label>WikiCode</Label>\r\n                {project.wikicode}\r\n              </Stack.Item>\r\n            </Stack>\r\n\r\n            <Stack {...horizontalStackProps}>\r\n              <StandardField\r\n                label={t(\"country-field\")}\r\n                name=\"country\"\r\n                component={DropdownFieldInput}\r\n                options={countries}\r\n              />\r\n              <StandardField\r\n                label={t(\"imporganization-field\")}\r\n                name=\"impOrganization\"\r\n                component={DropdownFieldInput}\r\n                options={countries}\r\n              />\r\n              <StandardField\r\n                label={t(\"intorganization-field\")}\r\n                name=\"intOrganization\"\r\n                component={DropdownFieldInput}\r\n                options={countries}\r\n              />\r\n            </Stack>\r\n\r\n            <Stack {...horizontalStackProps}>\r\n              <StandardField\r\n                label={t(\"budget-field\")}\r\n                name=\"budget\"\r\n                component={TextFieldInput}\r\n                prefix={t(\"budget-prefix\")}\r\n              />\r\n              <StandardField\r\n                label={t(\"caulculated-field\")}\r\n                name=\"budgetPerItems\"\r\n                component={TextFieldInput}\r\n                prefix={t(\"budgetitems-prefix\")}\r\n              />\r\n              <StandardField\r\n                label={t(\"caulculated-field\")}\r\n                name=\"budgetPerAct\"\r\n                component={TextFieldInput}\r\n                prefix={t(\"budgetact-prefix\")}\r\n              />\r\n            </Stack>\r\n          </Stack>\r\n\r\n          {/* 2. Donor */}\r\n          <Stack {...verticalStackProps}>\r\n            <Stack styles={stepStackStyles}>\r\n              <Separator {...separatorProps}>\r\n                <PrimaryButton text=\"2\" className={classes.circle} />\r\n              </Separator>\r\n            </Stack>\r\n\r\n            <Stack {...headerStackProps}>\r\n              <Stack.Item>\r\n                <Label>Donor WikiCode</Label>\r\n                {project.donorcode}\r\n              </Stack.Item>\r\n            </Stack>\r\n\r\n            <Stack {...horizontalStackProps}>\r\n              <StandardField\r\n                label={t(\"donor-field\")}\r\n                name=\"donor\"\r\n                component={DropdownFieldInput}\r\n                options={countries}\r\n              />\r\n              <StandardField\r\n                label={t(\"initialdate-field\")}\r\n                name=\"initialDate\"\r\n                component={DateFieldInput}\r\n              />\r\n            </Stack>\r\n\r\n            <Stack {...horizontalStackProps}>\r\n              <StandardField\r\n                label={t(\"initialdate-field\")}\r\n                name=\"initialDate\"\r\n                component={DateFieldInput}\r\n              />\r\n              <StandardField\r\n                label={t(\"finaldate-field\")}\r\n                name=\"finalDate\"\r\n                component={DateFieldInput}\r\n              />\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nconst StandardField = (props: any) => {\r\n  const stackItemStyles: Partial<IStackItemStyles> = {\r\n    root: {\r\n      width: \"30%\",\r\n      minWidth: 200,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Stack.Item styles={stackItemStyles}>\r\n      <Field {...props} />\r\n    </Stack.Item>\r\n  );\r\n};\r\n\r\nconst TextField = ({ grow, ...props }: any) => {\r\n  const stackItemStyles: Partial<IStackItemStyles> = {\r\n    root: {\r\n      minWidth: 200,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Stack.Item grow={grow} styles={stackItemStyles}>\r\n      <Field {...props} />\r\n    </Stack.Item>\r\n  );\r\n};\r\n\r\nexport function generalFormViewMode() {\r\n  return <div>Form Basics</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SpecificationsForm() {\r\n  return <div>Specification Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FormsTutorials() {\r\n  return <div>Forms Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 20px;\r\n`;\r\n\r\ninterface PagecontainerProps {\r\n  className?: string;\r\n  role?: string;\r\n}\r\nexport const PageContainer: React.FunctionComponent<PagecontainerProps> = (\r\n  props\r\n) => <Container className={props.className}>{props.children}</Container>;\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  FontSizes,\r\n  IPivotStyles,\r\n  mergeStyleSets,\r\n  Pivot,\r\n  PivotItem,\r\n  useTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { PivotTabs } from \"./maintabs\";\r\nimport ToolBar from \"./toolbar\";\r\nimport PagesBar from \"../pagesbar\";\r\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\r\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\r\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\r\nimport { PageContainer } from \"components/styled/pagecontainer\";\r\n\r\ntype StringDic = {\r\n  [index: string]: string;\r\n};\r\n\r\ntype NodeDic = {\r\n  [index: string]: ReactNode;\r\n};\r\n\r\ntype PivotBarProps = {\r\n  tabs: PivotTabs[];\r\n};\r\n\r\nexport default function PivotBar(props: PivotBarProps) {\r\n  // STYLES\r\n  const { palette } = useTheme();\r\n\r\n  const classes = mergeStyleSets({\r\n    topstickybar: {\r\n      width: \"100%\",\r\n      position: \"fixed\",\r\n      top: 0,\r\n      zIndex: 999,\r\n    },\r\n    bottomstickybar: {\r\n      // width: \"100%\",\r\n      position: \"fixed\",\r\n      bottom: 0,\r\n      zIndex: 999,\r\n    },\r\n  });\r\n\r\n  const pivotStyles: Partial<IPivotStyles> = {\r\n    root: {\r\n      height: 34,\r\n      backgroundColor: palette.themePrimary,\r\n    },\r\n    link: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.themePrimary,\r\n      color: palette.white,\r\n      fontSize: FontSizes.small,\r\n      \":hover\": {\r\n        backgroundColor: palette.themeDarkAlt,\r\n        color: palette.white,\r\n      },\r\n      \":active\": {\r\n        backgroundColor: palette.themeDark,\r\n        color: palette.white,\r\n      },\r\n      \":focus\": {\r\n        backgroundColor: palette.themePrimary,\r\n        color: palette.white,\r\n      },\r\n    },\r\n    linkIsSelected: {\r\n      height: \"inherit\",\r\n      backgroundColor: palette.neutralLighter + \" !important\",\r\n      color: palette.black + \" !important\",\r\n    },\r\n  };\r\n\r\n  // LOGIC\r\n  const { tabs } = props;\r\n  const { t } = useTranslation(\"menu\");\r\n\r\n  const [selectedPageTabs, setSelectedPageTabs] = useState<StringDic>({\r\n    key1: \"key1\",\r\n    key2: \"key1\",\r\n    key3: \"key1\",\r\n    key4: \"key1\",\r\n    key5: \"key1\",\r\n    key6: \"key1\",\r\n  });\r\n\r\n  const [lastFormsRendered, setLastFormsRendered] = useState<NodeDic>({\r\n    key1: <React.Fragment />,\r\n    key2: <GeneralForm />,\r\n    key3: <SpecificationsForm />,\r\n    key4: <FormsTutorials />,\r\n    key5: <React.Fragment />,\r\n    key6: <React.Fragment />,\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(\"key1\");\r\n\r\n  const getTabId = (itemKey: string) => {\r\n    return `pivot_${itemKey}`;\r\n  };\r\n\r\n  const handlePageTabOnClick = (parentkey: string, item?: PivotItem) => {\r\n    if (item) {\r\n      let newTabsState = selectedPageTabs;\r\n      newTabsState[parentkey] = item.props.itemKey!;\r\n      setSelectedPageTabs(newTabsState);\r\n      setCurrentPage(item.props.itemKey!);\r\n\r\n      let newFormsRenderedState = lastFormsRendered;\r\n      newFormsRenderedState[parentkey] = item.props.children;\r\n      setLastFormsRendered(newFormsRenderedState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Pivot\r\n      aria-label=\"Main menu tabs\"\r\n      linkFormat=\"tabs\"\r\n      defaultSelectedKey=\"1\"\r\n      styles={pivotStyles}\r\n    >\r\n      {tabs.map((tab) => {\r\n        return (\r\n          <PivotItem key={tab.key} headerText={t(tab.name)} itemIcon={tab.icon}>\r\n            <ToolBar>{tab.render}</ToolBar>\r\n\r\n            <PageContainer\r\n              aria-labelledby={getTabId(currentPage)}\r\n              role=\"tabpanel\"\r\n            >\r\n              {lastFormsRendered[tab.key]}\r\n            </PageContainer>\r\n\r\n            <PagesBar\r\n              tab={tab}\r\n              defaultKey={selectedPageTabs[tab.key]}\r\n              handleOnClick={handlePageTabOnClick}\r\n              getTabId={getTabId}\r\n            />\r\n          </PivotItem>\r\n        );\r\n      })}\r\n    </Pivot>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Facepile,\r\n  OverflowButtonType,\r\n  IFacepilePersona,\r\n  IButtonProps,\r\n  PersonaInitialsColor,\r\n  IFacepileStyles,\r\n  PersonaSize,\r\n} from \"@fluentui/react\";\r\n\r\n// OverflowButton Props\r\nconst overflowButtonProps: Partial<IButtonProps> = {\r\n  ariaLabel: \"More users\",\r\n  onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\r\n    alert(\"overflow icon clicked\"),\r\n};\r\n\r\n// AddButton Props\r\nconst addButtonProps = () => ({\r\n  ariaLabel: \"Add a new person\",\r\n  href: \"/\",\r\n});\r\n\r\n// STYLES\r\nconst FacePileStyles: Partial<IFacepileStyles> = {\r\n  root: {\r\n    position: \"absolute\",\r\n    top: 38,\r\n    right: 8,\r\n    zIndex: 999,\r\n  },\r\n  itemButton: {\r\n    margin: \"0 -2px 0 -2px\",\r\n  },\r\n};\r\n\r\n// Data\r\nconst faces: Partial<IFacepilePersona>[] = [\r\n  {\r\n    personaName: \"Gabriela Rodríguez\",\r\n    initialsColor: PersonaInitialsColor.gray,\r\n  },\r\n  {\r\n    personaName: \"Amaury Díaz\",\r\n    initialsColor: PersonaInitialsColor.gold,\r\n  },\r\n  {\r\n    personaName: \"Iliana Hernandez\",\r\n    initialsColor: PersonaInitialsColor.lightGreen,\r\n  },\r\n  {\r\n    personaName: \"Laura Rodríguez\",\r\n    initialsColor: PersonaInitialsColor.warmGray,\r\n  },\r\n  {\r\n    personaName: \"Lili Masters\",\r\n    initialsColor: PersonaInitialsColor.blue,\r\n  },\r\n  {\r\n    personaName: \"Susana Naranjo\",\r\n    initialsColor: PersonaInitialsColor.green,\r\n  },\r\n  {\r\n    personaName: \"Lupe Dantes\",\r\n    initialsColor: PersonaInitialsColor.darkBlue,\r\n  },\r\n  {\r\n    personaName: \"Karen Ganter\",\r\n    initialsColor: PersonaInitialsColor.lightGreen,\r\n  },\r\n  {\r\n    personaName: \"Josephine Filipie\",\r\n    initialsColor: PersonaInitialsColor.purple,\r\n  },\r\n  {\r\n    personaName: \"Daniel Hertys\",\r\n    initialsColor: PersonaInitialsColor.orange,\r\n  },\r\n];\r\n\r\nexport default function TeamPile() {\r\n  return (\r\n    <Facepile\r\n      personas={faces}\r\n      personaSize={PersonaSize.size24}\r\n      maxDisplayablePersonas={4}\r\n      overflowButtonProps={overflowButtonProps}\r\n      overflowButtonType={OverflowButtonType.descriptive}\r\n      addButtonProps={addButtonProps()}\r\n      ariaDescription=\"To move through the items use left and right arrow keys.\"\r\n      styles={FacePileStyles}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function StakeholdersForm() {\r\n  return <div>Stakeholders Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LogicModelForm() {\r\n  return <div>Logic Model Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ActivitiesMatrixForm() {\r\n  return <div>Activities Matrix Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PerformanceMeasureForm() {\r\n  return <div>Performance Measure Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RisksForm() {\r\n  return <div>Risks Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function BudgetForm() {\r\n  return <div>Budget Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ReportsForm() {\r\n  return <div>Reports Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LotForm() {\r\n  return <div>Lot Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TechnicalOfferForm() {\r\n  return <div>Technical Offer Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FinancialOfferForm() {\r\n  return <div>Financial Offer Form</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SectorsTutorials() {\r\n  return <div>Sectors Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function GuidesTutorials() {\r\n  return <div>Guides Tutorials</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MethodologyTutorials() {\r\n  return <div>Methodology Tutorials</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function OutcomesTutorial() {\r\n  return <div>Outcomes Tutorial</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function IndicatorsTutorial() {\r\n  return <div>Indicators Tutorials</div>;\r\n}\r\n","import { Redirect } from \"react-router\";\nimport { Label } from \"@fluentui/react\";\n\nimport GeneralForm from \"pages/methodologies/canadian/projectforms/generalform\";\nimport StakeholdersForm from \"pages/methodologies/canadian/projectforms/stakeholdersform\";\nimport LogicModelForm from \"pages/methodologies/canadian/projectforms/logicmodelform\";\nimport ActivitiesMatrixForm from \"pages/methodologies/canadian/projectforms/activitiesform\";\nimport PerformanceMeasureForm from \"pages/methodologies/canadian/projectforms/performanceform\";\nimport RisksForm from \"pages/methodologies/canadian/projectforms/risksform\";\nimport BudgetForm from \"pages/methodologies/canadian/projectforms/budgetform\";\nimport ReportsForm from \"pages/methodologies/canadian/projectforms/reportsform\";\n\nimport LotForm from \"pages/methodologies/canadian/licitationforms/lotform\";\nimport SpecificationsForm from \"pages/methodologies/canadian/licitationforms/specificationsform\";\nimport TechnicalOfferForm from \"pages/methodologies/canadian/licitationforms/technicalofferform\";\nimport FinancialOfferForm from \"pages/methodologies/canadian/licitationforms/financialofferform\";\nimport FormsTutorials from \"pages/methodologies/canadian/tutorials/formstutorial\";\nimport SectorsTutorials from \"pages/methodologies/canadian/tutorials/sectorstutorial\";\nimport GuidesTutorials from \"pages/methodologies/canadian/tutorials/guidestutorial\";\nimport Tutorials from \"pages/methodologies/canadian/tutorials/methodologytutorials\";\nimport OutcomesTutorial from \"pages/methodologies/canadian/tutorials/outcomestutorial\";\nimport IndicatorsTutorial from \"pages/methodologies/canadian/tutorials/indicatorstutorial\";\n\nexport type PivotTabs = {\n  key: string;\n  name: string;\n  icon: string;\n  render?: JSX.Element;\n  addtabs?: boolean;\n  childtabs?: PivotTabs[];\n  onClick?: Function;\n};\n\nexport const maintabs: PivotTabs[] = [\n  {\n    key: \"key1\",\n    name: \"wikiml\",\n    icon: \"WebComponents\",\n    render: <Redirect to=\"/\" />,\n  },\n  {\n    key: \"key2\",\n    name: \"project\",\n    icon: \"Page\",\n    render: <Label>Pivot #1</Label>,\n    addtabs: true,\n    childtabs: [\n      { key: \"key1\", name: \"general\", icon: \"Info\", render: <GeneralForm /> },\n      {\n        key: \"key2\",\n        name: \"stakeholders\",\n        icon: \"Commitments\",\n        render: <StakeholdersForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"logicmodel\",\n        icon: \"LargeGrid\",\n        render: <LogicModelForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"activitiesmatrix\",\n        icon: \"GripperDotsVertical\",\n        render: <ActivitiesMatrixForm />,\n      },\n      {\n        key: \"key5\",\n        name: \"performance\",\n        icon: \"GripperDotsVertical\",\n        render: <PerformanceMeasureForm />,\n      },\n      {\n        key: \"key6\",\n        name: \"risks\",\n        icon: \"DoubleDownArrow\",\n        render: <RisksForm />,\n      },\n      {\n        key: \"key7\",\n        name: \"budget\",\n        icon: \"PaymentCard\",\n        render: <BudgetForm />,\n      },\n      {\n        key: \"key8\",\n        name: \"reports\",\n        icon: \"BarChart4\",\n        render: <ReportsForm />,\n      },\n    ],\n  },\n  {\n    key: \"key3\",\n    name: \"licitations\",\n    icon: \"Library\",\n    render: <Label>Pivot #2</Label>,\n    childtabs: [\n      { key: \"key1\", name: \"lot\", icon: \"OEM\", render: <LotForm /> },\n      {\n        key: \"key2\",\n        name: \"specifications\",\n        icon: \"PageList\",\n        render: <SpecificationsForm />,\n      },\n      {\n        key: \"key3\",\n        name: \"tecoffer\",\n        icon: \"PageListSolid\",\n        render: <TechnicalOfferForm />,\n      },\n      {\n        key: \"key4\",\n        name: \"finoffer\",\n        icon: \"Financial\",\n        render: <FinancialOfferForm />,\n      },\n    ],\n  },\n  {\n    key: \"key4\",\n    name: \"methodology\",\n    icon: \"StackIndicator\",\n    render: <Label>Pivot #3</Label>,\n    childtabs: [\n      {\n        key: \"key1\",\n        name: \"forms\",\n        icon: \"PageData\",\n        render: <FormsTutorials />,\n      },\n      {\n        key: \"key2\",\n        name: \"sectors\",\n        icon: \"Sections\",\n        render: <SectorsTutorials />,\n      },\n      {\n        key: \"key3\",\n        name: \"guides\",\n        icon: \"GUID\",\n        render: <GuidesTutorials />,\n      },\n      {\n        key: \"key4\",\n        name: \"tutorials\",\n        icon: \"Video\",\n        render: <Tutorials />,\n      },\n      {\n        key: \"key5\",\n        name: \"outcomes\",\n        icon: \"ReportDocument\",\n        render: <OutcomesTutorial />,\n      },\n      {\n        key: \"key6\",\n        name: \"indicators\",\n        icon: \"CRMReport\",\n        render: <IndicatorsTutorial />,\n      },\n    ],\n  },\n  {\n    key: \"key5\",\n    name: \"database\",\n    icon: \"Database\",\n    render: <Label>Pivot #4</Label>,\n  },\n  {\n    key: \"key6\",\n    name: \"more\",\n    icon: \"MoreVertical\",\n    render: <Label>Pivot #5</Label>,\n  },\n];\n","import React from \"react\";\r\n\r\nimport PivotBar from \"components/menus/mainmenu/pivotbar\";\r\nimport TeamPile from \"components/menus/mainmenu/teampile\";\r\nimport { maintabs } from \"./maintabs\";\r\n\r\nconst tabs = maintabs;\r\n\r\nexport default function MainMenu() {\r\n  return (\r\n    <React.Fragment>\r\n      <PivotBar tabs={tabs} />\r\n      <TeamPile />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { mergeStyleSets } from \"@fluentui/react\";\r\n\r\nimport CommandMenu from \"components/menus/commands/\";\r\nimport MainMenu from \"components/menus/mainmenu\";\r\n\r\nconst classes = mergeStyleSets({\r\n  topstickybar: {\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    zIndex: 999,\r\n  },\r\n  bottomstickybar: {\r\n    // width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    zIndex: 999,\r\n  },\r\n});\r\n\r\nconst WorkplaceLayout: FunctionComponent = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <CommandMenu />\r\n        <MainMenu />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WorkplaceLayout;\r\n","import main from \"pages/main\";\r\n\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport WorkplaceLayout from \"layouts/workplace\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/workplace\" render={WorkplaceSwitcher} />\r\n        <Route path=\"/\" render={main} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst WorkplaceSwitcher = () => (\r\n  /* Projects, Methodologies, Licitaciones, Bases de Datos */\r\n  <WorkplaceLayout>\r\n    <Switch>\r\n      {/* <Route path=\"/workplace/project\" render={(ProjectSwitcher} /> */}\r\n      {/* <Route path=\"/workplace/methodology\" render={MethodologySwitcher} /> */}\r\n      {/* <Route path=\"/workplace/licitations\" render={MethodologySwitcher} /> */}\r\n      {/* <Route path=\"/workplace/database\" render={MethodologySwitcher} /> */}\r\n    </Switch>\r\n  </WorkplaceLayout>\r\n);\r\n","import React, { Suspense } from \"react\";\nimport Routes from \"routes\";\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Routes />\n    </Suspense>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport IState from \"models/state\";\r\n\r\nconst HelpSlice = createSlice({\r\n  name: \"helpTooltips\",\r\n  initialState: true,\r\n  reducers: {\r\n    toogleHelp: (state) => {\r\n      return !state;\r\n    },\r\n    setHelp: (state) => {\r\n      return (state = true);\r\n    },\r\n    removeHelp: (state) => {\r\n      return (state = false);\r\n    },\r\n  },\r\n});\r\n\r\nexport const help = (state: IState) => state.helpTooltips;\r\nexport const { toogleHelp, setHelp, removeHelp } = HelpSlice.actions;\r\n\r\nexport default HelpSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport themeReducer from \"store/slices/themeslice\";\nimport languageReducer from \"store/slices/languageslice\";\nimport helpReducer from \"store/slices/settingslice\";\nimport projectReducer from \"store/slices/projectslice\";\n\nconst store = configureStore({\n  reducer: {\n    theme: themeReducer,\n    language: languageReducer,\n    help: helpReducer,\n    project: projectReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18n\";\n\nimport { initializeIcons, loadTheme } from \"@fluentui/react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\n\nloadTheme(store.getState().theme);\ninitializeIcons();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}